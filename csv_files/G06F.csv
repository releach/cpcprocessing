"cpc_code","title","title_cpc_codes","informative_references","informative_references_cpc_codes","special_rules","special_rules_cpc_codes","glossary_of_terms","definition_statement"
"G06F","ELECTRIC DIGITAL DATA PROCESSING  (computer systems based on specific computational models G06N)","G06N","Programme-control systemsDigital computers in which all the computation is effected mechanicallyComputers in which a part of the computation is effected hydraulically or pneumaticallyComputers in which a part of the computation is effected opticallySelf-contained input or output peripheral equipmentComputer displaysImpedance networks using digital techniques","G05B19/00|G06C|G06D|G06E|G06K|G09G|H03H","","","Handlingincludes processing or transporting of data.Data processing equipmentAn association of an electric digital data processor classifiable under group , with one or more arrangements classifiable under groups -  and - . ","This place covers: Electrical arrangements or processing means for the performance of any automated operation using empirical data in electronic form for classifying, analyzing, monitoring, or carrying out calculations on the data to produce a result or event."
"G06F1/00","Details not covered by groups G06F3/00 - G06F13/00 and G06F21/00  (architectures of general purpose stored program computers G06F15/76)","G06F3/00|G06F13/00|G06F21/00|G06F15/76","","","","","","This place covers: Details not covered by groups  -  and  ."
"G06F1/02","Digital function generators","","Evaluating functions by calculating only, Generating sawtooth or staircase waveforms","G06F7/544|G06F7/60|H03K4/00","","","",""
"G06F1/025","for functions having two-valued amplitude, e.g. Walsh functions","","Generation of pulse trains in general","H03K3/00","","","",""
"G06F1/04","Generating or distributing clock signals or signals derived directly therefrom","","","","","","","This place covers: Generation and/or distribution of clock signal(s) within a computer system."
"G06F1/10","Distribution of clock signals {, e.g. skew}","","","","","","","This place covers: Distribution of clock signal(s) within a computer system, in a typical case the goal to be achieved is to minimize the skew."
"G06F1/105","{in which the distribution is at least partially optical}","","","","","","","This place covers: Clock distribution wherein the clock signal(s) are distributed entirely optically or partially optically and partially electrically."
"G06F1/16","Constructional details or arrangements","","Instrument detailsConstructional details common to different types of electric apparatus","G12B|H05K7/00","","","",""
"G06F1/1603","{Arrangements to protect the display from incident light, e.g. hoods}","","","","Used also for hoods protecting displays of portable computers.","","",""
"G06F1/1607","{Arrangements to support accessories mechanically attached to the display housing  (G06F1/1603, G06F1/1605 take precedence)}","G06F1/1603|G06F1/1605","","","Used also for accessories attached on displays of portable computers.","","",""
"G06F1/1613","{for portable computers  (cooling arrangements therefor G06F1/203; constructional details or arrangements for pocket calculators, electronic agendas or books G06F15/0216; constructional details of portable telephone sets: with several bodies H04M1/0202)}","G06F1/203|G06F15/0216|H04M1/0202","","","In this field, main mechanical aspects of the housing (single housing, foldable or sliding housings) are classified in  - , while all the other constructional details (enclosure details, display, keyboard, integrated peripherals, etc) are classified in  in complement to this main aspect.","G06F1/1615|G06F1/1626|G06F1/1633","","This place covers: Portable computers in the sense of computers able to be used as stand alone computers with their own integrated user interface and designed to be carried by hand (e.g. hand held computers or laptop computers) or worn on the user's body (wearable computers). Docking stations and extensions associated with the portable computers which may be mechanically attached to them."
"G06F1/1615","{with several enclosures having relative motions, each enclosure supporting at least one I/O or computing function  (constructional details of portable telephones comprising a plurality of mechanically joined movable body parts H04M1/0206)}","H04M1/0206","","","","","","This place covers: Portable computers having a plurality of enclosures which can't be classified in anyone of the subgroups, e.g. multiple enclosure with loose mechanical link (single wire, expandable or/and flexible link, rollable part), computer split in several housings with no mechanical connection and wirelessly connected, complex mechanical link with multiple degrees of freedom. Illustrative examples:"
"G06F1/1616","{with folding flat displays, e.g. laptop computers or notebooks having a clamshell configuration, with body parts pivoting to an open position around an axis parallel to the plane they define in closed position}","","Foldable portable telephones","H04M1/0214","","","",""
"G06F1/1618","{the display being foldable up to the back of the other housing with a single degree of freedom, e.g. by 360° rotation over the axis defined by the rear edge of the base enclosure}","","","","","","","This place covers: Also when the hinging part is composed of two parallel rotation axes."
"G06F1/162","{changing, e.g. reversing, the face orientation of the screen with a two degrees of freedom mechanism, e.g. for folding into tablet PC like position or orienting towards the direction opposite to the user to show to a second user}","","","","","","","This place covers: Reversing the orientation done either by rotating along the X or Y axis or by detaching the display and attaching it in the reverse orientation. Illustrative example:"
"G06F1/1622","{with enclosures rotating around an axis perpendicular to the plane they define or with ball-joint coupling, e.g. PDA with display enclosure orientation changeable between portrait and landscape by rotation with respect to a coplanar body enclosure}","","Rotatable portable telephones","H04M1/0225","","","","This place covers: Illustrative examples of subject matter classified in this group: Additionally rotation around an axis common to the plane they define but perpendicular to their common side, e.g. reversing the relative orientation along an axis common to both planes but not along their sides (which would be then a folding axis)."
"G06F1/1624","{with sliding enclosures, e.g. sliding keyboard or display}","","Slidable portable telephones","H04M1/0235","","","","This place covers: Portable computers linked by a mechanism allowing translation of one housing relatively to the other housing."
"G06F1/1628","{Carrying enclosures containing additional elements, e.g. case for a laptop and a printer}","","Holders or carriers for hand articles","A45F5/00","","","","This place covers: Also bags allowing the transport of other peripherals together with the portable computer and carrying trolleys for transporting portable computers."
"G06F1/163","{Wearable computers, e.g. on a belt}","","Garnments adapted to accomodate electronic equipmentFastening articles to garnments","A41D1/002|A45F5/02","","","",""
"G06F1/1632","{External expansion units, e.g. docking stations}","","Mounting in a carLocking against unauthorized removalBattery charging cradlesPCMCIA cards","B60R11/02|E05B73/0082|H02J7/0042|H05K5/0256","","","","This place covers: Expansions which are directly attached to portable computers, including supplementary battery packs external to the housing, port replicators and cradles for PDAs."
"G06F1/1633","{Constructional details or arrangements of portable computers not specific to the type of enclosures covered by groups G06F1/1615 - G06F1/1626}","G06F1/1615|G06F1/1626","Constructional details or arrangements of portable computers specific to the type of enclosures - Mounting of specific components of portable telephones","G06F1/1615|G06F1/1626|H04M1/026","","","",""
"G06F1/1635","{Details related to the integration of battery packs and other power supplies such as fuel cells or integrated AC adapter}","","Computer power supply in generalDetails of mounting batteries in generalPortable telephones battery compartments","G06F1/26|H01M50/20|H04M1/0262","","","",""
"G06F1/1637","{Details related to the display arrangement, including those related to the mounting of the display in the housing}","","Constructional details related to the housing of computer displays in generalAccessories mechanically attached to the display housing portion of portable computers - Portable telephones display","G06F1/1601|G06F1/1603|G06F1/1611|H04M1/0266","","","",""
"G06F1/1641","{the display being formed by a plurality of foldable display components  (G06F1/1647 takes precedence)}","G06F1/1647","","","Should be used when the displays are used in combination as a virtual single display area where the displayed image is split over the display screens.","","",""
"G06F1/1643","{the display being associated to a digitizer, e.g. laptops that can be used as penpads  (details related to the relative motion of the display enclosure with respect to the body enclosure, e.g. to move between laptop and tablet PC configuration G06F1/1615)}","G06F1/1615","Touchpads integrated in a laptop or similar computerSecondary touch screen ","G06F1/169|G06F1/1692","","","",""
"G06F1/1647","{including at least an additional display  (G06F1/1692 takes precedence)}","G06F1/1692","","","","","",""
"G06F1/165","{the additional display being small, e.g. for presenting status information}","","","","","","","This place covers: Typically very small displays disposed on the back of the main display for indicating time, alerts or battery level or small status displays near the hinge above the keyboard. Illustrative examples:"
"G06F1/1652","{the display being flexible, e.g. mimicking a sheet of paper, or rollable}","","Portable telephones flexible display","H04M1/0268","","","",""
"G06F1/1656","{Details related to functional adaptations of the enclosure, e.g. to provide protection against EMI, shock, water, or to host detachable peripherals like a mouse or removable expansions units like PCMCIA cards, or to provide access to internal components for maintenance or to removable storage supports like CDs or DVDs, or to mechanically mount accessories  (mounting of accessories to a computer display G06F1/1607; display hoods G06F1/1603; cooling arrangements for portable computers G06F1/203)}","G06F1/1607|G06F1/1603|G06F1/203","Portable telephones with mechanically detachable module(s)Portable telephones with improved resistance to shocks","H04M1/0254|H04M1/185","","","",""
"G06F1/1658","{related to the mounting of internal components, e.g. disc drive or any other functional module}","","","","","","",""
"G06F1/1662","{Details related to the integrated keyboard}","","Details of stand alone keyboardsConstructional details of keyboard switchesPortable telephones keypads","G06F3/0202|H01H13/70|H04M1/23","","","",""
"G06F1/1673","{Arrangements for projecting a virtual keyboard}","","DigitisersInteraction with virtual keyboards displayed on a touch sensitive surface","G06F3/041|G06F3/04886","","","",""
"G06F1/1675","{Miscellaneous details related to the relative movement between the different enclosures or enclosure parts}","","Movement typologiesRelative motion of the body parts to change the operational status of the portable telephone","G06F1/1615|H04M1/0241","","","",""
"G06F1/1677","{for detecting open or closed state or particular intermediate positions assumed by movable parts of the enclosure, e.g. detection of display lid position with respect to main body in a laptop, detection of opening of the cover of battery compartment}","","Portable telephones open/close detection","H04M1/0245","","","",""
"G06F1/1681","{Details related solely to hinges  (hinge details related to the transmission of signals or power are classified in G06F1/1683)}","G06F1/1683","Hinges for doors, windows or wings - Portable telephones hinge details, , ","E05D1/00|E05D15/00|H04M1/0216|H04M1/0227|H04M1/0237","","","",""
"G06F1/1683","{for the transmission of signal or power between the different housings, e.g. details of wired or wireless communication, passage of cabling}","","","","","","","This place covers: Also optical transmission of data or inductive transmission of power between housings."
"G06F1/1686","{the I/O peripheral being an integrated camera}","","Camera details of portable telephones","H04M1/0264","","","",""
"G06F1/1688","{the I/O peripheral being integrated loudspeakers}","","Mounting aspects of transmitters in portable telephonesLoudspeakers","H04M1/03|H04R1/00","","","",""
"G06F1/169","{the I/O peripheral being an integrated pointing device, e.g. trackball in the palm rest area, mini-joystick integrated between keyboard keys, touch pads or touch stripes  (G06F1/1643 takes precedence; constructional details of pointing devices G06F3/033)}","G06F1/1643|G06F3/033","Joysticks in generalConstructional details of pointing devices in portable telephones","G05G9/047|H04M1/233","","","",""
"G06F1/1692","{the I/O peripheral being a secondary touch screen used as control interface, e.g. virtual buttons or sliders}","","","","","","","This place covers: Secondary touchscreens which are used only as input device (touchpad, virtual input devices), and not for information display."
"G06F1/1694","{the I/O peripheral being a single or a set of motion sensors for pointer control or gesture input obtained by sensing movements of the portable computer}","","Gestural inputMotion sensing in space for computer input","G06F3/017|G06F3/0346","","","",""
"G06F1/1696","{the I/O peripheral being a printing or scanning device}","","Scanners, Printers, ","G06K7/10|H04N1/00|G06K15/00|B41J1/00","","","","This place covers: Scanners for e.g. A4 sheets."
"G06F1/1698","{the I/O peripheral being a sending/receiving arrangement to establish a cordless communication link, e.g. radio or infrared link, integrated cellular phone  (details of antennas disposed inside a computer H01Q1/2266)}","H01Q1/2266","AerialsCordless telephones","H01Q|H04M1/725","","","",""
"G06F1/18","Packaging or power distribution","","Cases or housings for electrical apparatuses in general, ","H05K|H02J","","","","This place covers: Cases and housing for computers and how computer components are ""packed"" , i.e. mounted within the housing . It also covers arrangements, e.g. cabling, to distribute the power generated by the power supply unit to the other computer components mounted within the casing."
"G06F1/181","{Enclosures  (for portable computers G06F1/1613)}","G06F1/1613","Enclosures for electrical apparatuses in general","H05K5/00","","","","This place covers: Enclosures for computers, including constructional details of front or bezel."
"G06F1/182","{with special features, e.g. for use in industrial environments; grounding or shielding against radio frequency interference [RFI] or electromagnetical interference [EMI]}","","Shielding against electromagnetic interference in general","H05K9/00","","","","This place covers: Enclosures for non-standard computers, e.g. industrial computers, computers specifically adapted to special environments."
"G06F1/183","{Internal mounting support structures, e.g. for printed circuit boards, internal connecting means  (for buses G06F13/409)}","G06F13/409","Mounting structures for printed circuits in general","H05K7/1422","","","","This place covers: Mounting structures for securing and/or interconnecting among them internal components within the enclosure of a computer system."
"G06F1/184","{Mounting of motherboards}","","Housings for circuits carrying a CPU and adapted to receive expansion cards","H05K7/1429","","","",""
"G06F1/185","{Mounting of expansion boards}","","Mounting of expansion boards in general","H05K7/1417","Used for the securing of expansion cards completely within the enclosure, and not to the connection to openings in the enclosure.","","",""
"G06F1/186","{Securing of expansion boards in correspondence to slots provided at the computer enclosure}","","Securing of expansion boards in general","H05K7/1402","Used for to the connection of expansion boards to openings in the enclosure so that at least a portion, or connector, of the expansion board is accessible from outside the enclosure.","","",""
"G06F1/187","{Mounting of fixed and removable disk drives}","","Constructional details of disk drives housings in general","G11B33/00","Used for both optical drives and hard disk drives.","","",""
"G06F1/188","{Mounting of power supply units}","","Power supply for computers","G06F1/26","","","",""
"G06F1/20","Cooling means","","Modifications to facilitate cooling, ventilating, or heating","H05K7/20","","","",""
"G06F1/206","{comprising thermal management}","","","","This groups refers also to documents wherein the thermal management is achieved by lowering power consumption in order to reduce heat generation..Documents also disclosing costructional details about the managed cooling arrangement should be also classified in  if describing the cooling of a desktop computer or  if describing the cooling of a portable computer.","G06F1/20|G06F1/203","",""
"G06F1/24","Resetting means","","Microprogramme loadingRestoration from data faults","G06F9/24|G06F11/00","","","",""
"G06F1/26","Power supply means, e.g. regulation thereof  (for memories G11C)","G11C","Systems for regulating electric or magnetic variables","G05F","","","","This place covers: Power supplies for computers including: Power regulation; Power monitoring including means for acting in the event of power supply fluctuations or interruption; Power save."
"G06F1/263","{Arrangements for using multiple switchable power supplies, e.g. battery and AC  (G06F1/30 takes precedence)}","G06F1/30","","","","","","This place covers: Arrangements with switchable, multiple power supplies (typical example is AC and battery, but may also include multiple batteries, fuel cells or solar panels)."
"G06F1/266","{Arrangements to supply power to external peripherals either directly from the computer or under computer control, e.g. supply of power through the communication port, computer controlled power-strips}","","","","","","","This place covers: Arrangements to supply power to external peripherals, either directly from the computer or under computer control (typical cases are the supply of power through a USB interface and the power strips)."
"G06F1/28","Supervision thereof, e.g. detecting power-supply failure by out of limits supervision","","","","","","","This place covers: Arrangements to monitor, and only monitoring, power supply parameters (e.g. voltage and/or current)."
"G06F1/30","Means for acting in the event of power-supply failure or interruption, e.g. power-supply fluctuations  (for resetting only G06F1/24)","G06F1/24","Involving the processing of data-words","G06F11/00","","","",""
"G06F1/32","Means for saving power","","","","","","","This place covers: Means to save power in computers, including devices, methods and combinations of devices and method features."
"G06F1/3203","Power management, i.e. event-based initiation of a power-saving mode","","","","","","","This place covers: Power saving obtained by switching, in relation to events of any type, between computing device operating modalities implying different power consumption levels. As opposed to power saving arrangements and/or methods of a permanent or continuous nature."
"G06F1/3206","Monitoring of events, devices or parameters that trigger a change in power modality","","","","","","","This place covers: Power saving triggered by a certain event and/or condition detected by monitoring or supervision of e.g. hardware, communication, processing tasks."
"G06F1/3215","Monitoring of peripheral devices","","","","Used when the peripheral monitored does not belong to any of the subgroups: ,  or .","G06F1/3218|G06F1/3221|G06F1/3225","",""
"G06F1/3228","Monitoring task completion, e.g. by use of idle timers, stop commands or wait commands","","","","","","","This place covers: Power saving initiated when a task completion is detected (typical cases are the completion of processing tasks, e.g. programs, applications, routines)."
"G06F1/3231","Monitoring the presence, absence or movement of users","","","","","","","This place covers: Power saving initiated when the user absence/presence is detected, e.g. through a camera and/or sensors."
"G06F1/3234","Power saving characterised by the action undertaken","","","","","","","This place covers: Power saving obtained by selectively reducing power consumption of all or individual components of a computing system. Such reduction can be achieved in different ways, e.g. by lowering the clock frequency, by stopping the supply of the clock signal, by lowering the voltage, by stopping the supply of power, by task scheduling."
"G06F1/3237","by disabling clock generation or distribution","","","","","","","This place covers: Power saving by stopping clock generation or distribution to a computer or a component."
"G06F1/3243","{Power saving in microcontroller unit}","","","","","","","This place covers: Power saving taking place in the processing unit of the computer, intended as central processing unit (CPU), microcontroller unit (MCU), microprocessor."
"G06F1/3256","{Power saving in optical drive}","","","","","","","This place covers: Power saving in optical (or magneto-optical) disk drives, e.g. CD, DVD, Blue-Ray, etc."
"G06F1/3268","{Power saving in hard disk drive}","","","","","","",""
"G06F1/3287","by switching off individual functional units in the computer system","","","","","","","This place covers: Power saving by selectively reducing power consumption of individual components of a computer system. Such reduction can be achieved in different ways, e.g. by lowering the clock frequency or stopping the clock, by lowering the voltage, by stopping the power supply (power gating)."
"G06F3/00","Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements","","TypewritersConversion of physical variables, In regulating or control systemsImage acquisition, Coding, decoding or code conversion in generalTransmission of digital information","B41J|F15B5/00|G01|G05B|G06T1/00|G06F9/00|H03M|H04L","","","",""
"G06F3/002","{Specific input/output arrangements not covered by G06F3/01 - G06F3/16  (other optical apparatus G02B27/00)}","G06F3/01|G06F3/16|G02B27/00","Viewers photographic printingElectrography, magnetographyConstructional details of barcode readersReading of RFID record carriersConstructional details of RFID record carriersUse of barcode readers or RFIDs in data processing systems for business applicationsWireless phone using NFC or a two-way short-range wireless interfaceFacsimile per se","G03B|G03G|G06K7/00|G06K7/0008|G06K19/07749|G06Q|H04M1/72412|H04N1/00","","","TUIa user interface in which a person interacts with digital information through a physical environment, i.e. by manipulating physical objects (e.g. in the same way as moving pieces of a game on a tablet), often using RFID or NFC.","This place covers: Includes inter alia arrangements in which a barcode reader is used to input data to a computer and in particular drivers for barcode or QR code readers."
"G06F3/005","{Input arrangements through a video camera}","","Tracking user body for computer input, Pointing device integrating a camera for tracking its own position with respect to an imaged reference surface or the surroundings Tracking a projected light spot generated by a light pen or a ""laser pointer"" indicating a position on a display surfaceDigitisers using a camera for tracking the position of objects with respect to an imaged reference surfaceRecognising movements or behaviour, e.g. recognition of gestures, dynamic facial expressions; Lip-reading Television cameras","G06F3/011|G06F3/017|G06F3/0304|G06F3/0386|G06F3/042|G06V40/20|H04N5/225","","","","This place covers: Specific arrangements for input through a video camera, not covered by   -  , e.g. details of the interface linking the camera to the computer. This group was originally meant for devices adapting analog video cameras to computer entry."
"G06F3/007","{Digital input from or digital output to memories of the shift register type}","","Digital input from, or digital output to, record carriersDigital stores in which the information is moved stepwise using magnetic elements and thin films in plane structureDigital stores in which the information is moved stepwise using semiconductor elementsOrganisation of a multiplicity of shift registers","G06F3/06|G11C19/08|G11C19/28|G11C19/287","Old technology, not used anymore.","","",""
"G06F3/01","Input arrangements or combined input and output arrangements for interaction between user and computer  (G06F3/16 takes precedence)","G06F3/16","Interaction techniques based on graphical user interfaces [GUI]","G06F3/048","","","","This place covers: Input arrangements, or combined input and output arrangements, for interaction between user and computer. Particularly, said input arrangements include those based on the interaction with the human body, e.g. gloves for hand or finger tracking; eye or head trackers; devices using bioelectric signals, e.g. detecting nervous activity; arrangements for providing computer generated force feedback in input devices."
"G06F3/011","{Arrangements for interaction with the human body, e.g. for user immersion in virtual reality  (blind teaching G09B21/00)}","G09B21/00","Measuring of parameters or motion of the human body or parts thereof for diagnostic purposesFor handicapped people in general Games using an electronically generated display and player-operated input meansRobot controlStereoscopic optical systemsRecognising human body or animal bodiesAcquiring or recognising human faces, facial parts, facial sketches, facial expressionsTactile signallingVirtual reality arrangements for interacting with music, including those with tactile feedbackFor electrophonic musical instrumentsElectronic switches characterised by the way in which the control signals are generated","A61B5/00|A61F4/00|A63F13/20|B25J|G02B30/00|G06V40/10|G06V40/16|G08B|G10H1/00|G10H1/344|H03K17/94","","","",""
"G06F3/012","{Head tracking input arrangements}","","Head-tracking for image generation in head-mounted display, Use of head-tracking for image generation, 3D image generation in augmented realityUsing viewer tracking","G02B27/0093|G02B27/01|G06T7/00|G06T11/00|G06T19/006|H04N13/366","","","","This place covers: For the scope of this group, Head-tracking is interpreted as covering face detection and tracking."
"G06F3/013","{Eye tracking input arrangements  (G06F3/015 takes precedence)}","G06F3/015","Apparatus for testing the eyes and instruments for examining the eyesInstruments for determining or recording eye movementAcquiring or recognising eyes ","A61B3/00|A61B3/113|G06V40/18","","","",""
"G06F3/014","{Hand-worn input/output arrangements, e.g. data gloves}","","Finger worn arrangements for converting the position or the displacement of a member into a coded form, ","G06F3/03|G06F2203/0331","","","Data glove (sometimes called a ""wired glove"" or ""cyberglove"")an input device for human–computer interaction worn like a glove","This place covers: Also covers hand-worn keyboards"
"G06F3/015","{Input arrangements based on nervous system activity detection, e.g. brain waves [EEG] detection, electromyograms [EMG] detection, electrodermal response detection}","","Detecting bioelectric signals for diagnostic purpose, Bioelectrical control, e.g. myoelectric","A61B5/0006|A61B5/24|A61F2/72","","","",""
"G06F3/016","{Input arrangements with force or tactile feedback as computer generated output to the user}","","Passive (and non reconfigurable) feedback arrangements on a touchscreen, e.g. overlays with reliefs for indicating keys of a virtual keyboardHand grip control means for manipulatorsTactile feedback for vehicle driverServo-motor systems giving the operating person a ""feeling"" of the response of the actuated device Means for enhancing the operator's awareness of arrival of the controlling member (knob, handle) at a command or datum position; Providing feel, e.g. means for creating a counterforceTactile presentation of information, e.g. Braille displayKeyboards characterised by tactile feedback featuresPiezoelectric actuators","G06F3/04886|B25J13/02|B60W50/16|F15B13/14|G05G5/03|G09B21/001|H01H13/85|H01L41/09","","","","This place covers: Dynamic force or tactile feedback arrangements. Also passive feedback arrangements but only if they are dynamically reconfigurable under computer control, e.g. buttons raised from a touchpad surface using electronic muscle or similar."
"G06F3/017","{Gesture based interaction, e.g. based on a set of recognized hand gestures  (interaction based on gestures traced on a digitiser G06F3/04883)}","G06F3/04883","Arrangements for interaction with the human body Detection arrangements using opto-electronic meansInput by means of (pointing) device or object moved freely in 3D spaceAcquiring or recognising (static) human faces, facial parts, facial sketches, facial expressions Recognising movements or behaviour, e.g. recognition of gestures, dynamic facial expressions; Lip-reading Lip-reading assisted speech recognition","G06F3/011|G06F3/0304|G06F3/0346|G06V40/16|G06V40/20|G10L15/24","","","","This place covers: Gesture interaction as a sequence and/ or a combination of user movements captured using various sensing techniques such as (among others) cameras monitoring the user, arrangements for interaction with the human body, input by means of a device moved freely in 3D space or opto-electronic detection arrangements."
"G06F3/018","{Input/output arrangements for oriental characters}","","Inputting charactersHandling non-Latin characters, e.g. kana-to-kanji conversionProcessing of non-Latin text","G06F3/0233|G06F40/129|G06F40/53","","","",""
"G06F3/02","Input arrangements using manually operated switches, e.g. using keyboards or dials","","Details related to integrated keyboard of portable computersKeyboard switches per seElectronic switches characterised by the way in which the control signals are generated","G06F1/1662|H01H13/70|H03K17/94","","","","This place covers: Input arrangements using manually operated switches, e.g. using keyboards or dials, insofar as they are stand-alone devices or integrated in a fixed computer system. Includes wired or wireless keyboards which are not mechanically linked to a portable computer."
"G06F3/0202","{Constructional details or processes of manufacture of the input device}","","Special layout of keysPalm(wrist)-rests not integrated in the keyboardWrist worn wrist restsDocument holders for typewritersInput/Output devices for watchesDetails of keys/push buttonsSwitches having rectilinearly-movable operating part or partsConstructional details of keyboards having such switchesElectronic switching or gating i.e. not by contact-making or -brakingProximity switchesTouch switches with electronic switchingCapacitive touch switchesForce resistance transducerOptical touch switchesPiezo-electric touch switchesResistive touch switchesKeyboard, i.e. having a plurality of control members, with electronic switchingWith optoelectronic devicesWith magnetic movable elementsWith capacitive movable elements","G06F3/0219|A47B21/0371|A61F5/0118|B41J29/15|G04G21/00|H01H3/12|H01H13/00|H01H13/70|H03K17/00|H03K17/945|H03K17/96|H03K17/962|H03K17/9625|H03K17/9627|H03K17/964|H03K17/9645|H03K17/967|H03K17/969|H03K17/972|H03K17/98","","","",""
"G06F3/0205","{Lever arrangements for operating keyboard cursor control keys in a joystick-like manner}","","Integration of a mini joystick in a portable computerIntegration of a mini joystick in a keyboardDetails of the interface with a computerJoysticks with a pivotable rigid stick","G06F1/169|G06F3/0213|G06F3/038|G05G9/047","","","",""
"G06F3/0208","{Arrangements for adjusting the tilt angle of a keyboard, e.g. pivoting legs  (for keyboards integrated in a laptop computer G06F1/1667)}","G06F1/1667","","","","","",""
"G06F3/021","{Arrangements integrating additional peripherals in a keyboard, e.g. card or barcode reader, optical scanner}","","Constructional details of barcode readers","G06K7/00","","","",""
"G06F3/0213","{Arrangements providing an integrated pointing device in a keyboard, e.g. trackball, mini-joystick  (for pointing devices integrated in a laptop computer G06F1/169; joysticks G05G9/047; constructional details of pointing devices G06F3/033)}","G06F1/169|G05G9/047|G06F3/033","","","","","",""
"G06F3/0216","{Arrangements for ergonomically adjusting the disposition of keys of a keyboard  (for keyboards integrated in a laptop computer G06F1/1664)}","G06F1/1664","","","","","",""
"G06F3/0219","{Special purpose keyboards}","","Devices for teaching typing","G09B13/00","","","","This place covers: Any keyboard designed or modified to control a specific software application or specific hardware, e.g. by integrating dedicated keys. Key layouts in alternative to the QWERTY standard are also classified in this group."
"G06F3/0221","{Arrangements for reducing keyboard size for transport or storage, e.g. foldable keyboards, keyboards with collapsible keys  (G06F3/0216 takes precedence; for keyboards integrated in a laptop computer G06F1/1666)}","G06F3/0216|G06F1/1666","","","","","",""
"G06F3/0224","{Key guide holders}","","Document holders for typewriters","B41J29/15","","","",""
"G06F3/0227","{Cooperation and interconnection of the input arrangement with other functional units of a computer  (G06F3/023 - G06F3/037 take precedence)}","G06F3/023|G06F3/037","Keyboards integrating additional peripheralsArrangements for converting the position or the displacement of a member into a coded form","G06F3/021|G06F3/03","","","","This place covers: Input arrangements using manually operated switches, e.g. using keyboards or dials, further comprising cooperation and interconnection of the input arrangement with other functional units of a computer."
"G06F3/023","Arrangements for converting discrete items of information into a coded form, e.g. arrangements for interpreting keyboard generated codes as alphanumeric codes, operand codes or instruction codes","","Virtual keyboards displayed on a touchscreenCoding in connection with keyboards, i.e. coding of the position of operated keys","G06F3/04886|H03M11/00","","","KVMa KVM switch allows a user to control one or multiple computer(s) from one or multiple KVM device(s)","This place covers: Keyboard interfaces and drivers; peripherals emulating a keyboard (e.g. producing ""keystroke input"" signals); devices providing additional buttons or foot operated switches and connected between keyboard and PC. Also comprises KVM switches."
"G06F3/0231","{Cordless keyboards}","","Means for saving power, monitoring of peripheral devicesInformation transfer between I/O devices and CPU, e.g. on bus","G06F1/325|G06F13/38","","","Cordless keyboardswireless keyboards; they are also often called according to the technology used: infrared keyboard, radio keyboard, WLAN keyboard, Bluetooth® keyboard","This place covers: Constructional details related to the wireless link, e.g. position of the IR transmitter/receiver as well as protocol details for the wireless transmission of keyboard codes."
"G06F3/0233","{Character input methods}","","Interaction with virtual keyboards displayed on a touchscreen","G06F3/04886","","","","This place covers: Character input using a reduced number of keys, e.g. with respect to the alphabet, i.e. multivalued keys. Covers character input methods wherein a character is entered by tracing it on a matrix of switches (keys). Covers character input methods where a character is entered as a sequence of strokes on different keys or on a same key."
"G06F3/0234","{using switches operable in different directions}","","Character input using (e.g. 2 or 4 or 8) directional cursor keys for selecting characters in cooperation with displayed information","G06F3/0236","","","","This place covers: Keyboards or keypads having keys that can be operated not only vertically but also laterally to actuated separate switches associated to different key codes."
"G06F3/0235","{using chord techniques  (G06F3/0234 takes precedence)}","G06F3/0234","","","","","Chordonly an almost simultaneous depression of several keys","This place covers: Chord keyboards even if they are split in two or more parts, i.e. the predominant feature is the fact that chording is required to enter a character."
"G06F3/0236","{using selection techniques to select from displayed items}","","Selecting from displayed items by using keys for other purposes than character input","G06F3/0489","","","",""
"G06F3/0237","{using prediction or retrieval techniques}","","Converting codes to words or guess-ahead of partial word inputs","G06F40/274","","","T9 (stands for Text on 9 keys)a predictive text input technology for mobile phones, developed by Tegic CommunicationsiTapa predictive text technology for mobile phones, developed by Motorola","This place covers: Character input using retrieval techniques from a database or dictionary based on previously inputted characters, e.g. for predicting and proposing word completion alternatives. Covers inter alia T9, iTap and similar techniques."
"G06F3/0238","{Programmable keyboards  (key guide holders G06F3/0224)}","G06F3/0224","Virtual keyboards on a touchscreenScrambling keyboard with display keys in electronically operated locks Scrambling keyboard in electronically banking systems (POS,ATM) Display on the key tops of musical instruments: Switches with programmable display Display on the key tops in generalTelephone set with programmable function keys ","G06F3/04886|G07C9/00698|G07F|G10H|H01H9/181|H01H2219/00|H04M1/2472","","","","This place covers: Any keyboard in which the function assigned to all or some of the keys can be reprogrammed, e.g. changing alphabetical keys according to language, programming dedicated function keys."
"G06F3/027","for insertion of the decimal point","","Display of decimal pointComplete desk- top or hand- held calculators","G06F3/1407|G06F15/02","","","",""
"G06F3/03","Arrangements for converting the position or the displacement of a member into a coded form","","Interaction with a tangible user interface other than detecting its location or displacementElectronic game devices per seCoordinate identification of nuclear particle tracks Telemetry of coordinates","G06F3/00|A63K|G01T5/02|G08C21/00","","","A Tangible User Interface (TUI)a user interface in which a person interacts with digital information through a physical environment, i.e. by manipulating physical objects (e.g. in the same way as moving pieces of a game on a tablet), often using RFID or NFC","This place covers: This group is used only for ""exotic"" input devices corresponding to the wording of the definition and not fitting in any of the subgroups, for example arrangements detecting the position or the displacement of tangible user interfaces comprising RFIDs tags or bar codes interacting with a surface (such as chessboard-like surface) where the position detection technique is not covered by any of the subgroups of  . Example:"
"G06F3/0304","{Detection arrangements using opto-electronic means  (constructional details of pointing devices not related to the detection arrangement using opto-electronic means G06F3/033; optical digitisers G06F3/042)}","G06F3/033|G06F3/042","Systems where the position detection is based on the raster scan of a cathode-ray tube (CRT) with a light penMeasuring arrangements characterised by the use of optical meansOptical encodersPosition fixing using optical waves, Prospecting or detecting by optical meansStatic switches using electro-optical elements in generalOptical switchesOptical touch switches","G06F3/037|G01B11/00|G01D5/34|G01S5/16|G01S17/00|G01V8/00|H03K17/78|H03K17/941|H03K17/9627","","","",""
"G06F3/0312","{for tracking the rotation of a spherical or circular member, e.g. optical rotary encoders used in mice or trackballs using a tracking ball or in mouse scroll wheels  (tracking relative movement in co-operation with a regularly or irregularly patterned surface, e.g. as in optical mice G06F3/0317; constructional details of scroll or thumb-wheels G06F3/0362; optical rotary encoders G01D5/3473)}","G06F3/0317|G06F3/0362|G01D5/3473"," Thumb wheel switches","H01H19/001","","","",""
"G06F3/0317","{in co-operation with a patterned surface, e.g. absolute position or relative movement detection for an optical mouse or pen positioned with respect to a coded surface}","","","","","","","This place covers: Tracking relative movement in co-operation with a regularly or irregularly patterned surface, e.g. arrangements for detecting relative movement of an optical mouse with respect to a generic surface optically detected as irregularly patterned (table, desk top, ordinary mouse pad) or with respect to a surface (e.g. mouse pad) encoded with an optically detectable regular pattern. Arrangements for detecting absolute position of a member with respect to a regularly patterned surface, e.g. pen optically detecting position-indicative tags printed on a paper sheet."
"G06F3/033","Pointing devices displaced or positioned by the user{, e.g. mice, trackballs, pens or joysticks}; Accessories therefor  (digitisers characterised by the transducing means G06F3/041)","G06F3/041","Details of optical sensing in input devicesArrangement for interfacing a joystick to a computerConstructional details of joysticks","G06F3/0304|G06F3/038|G05G9/047","For finger worn pointing devices covered by this group and its subgroups add the Indexing Code .","G06F2203/0331","",""
"G06F3/0338","with detection of limited linear or angular displacement of an operating part of the device from a neutral position, e.g. isotonic or isometric joysticks","","Integration of a mini joystick in a portable computerIntegration of a mini joystick in a keyboardSliders, in which the moving part moves in a planeDetails of the interface with a computerJoysticks with a pivotable rigid stickSwitches with generally flat operating part depressible at different locations","G06F1/169|G06F3/0213|G06F3/03548|G06F3/038|G05G9/047|H01H25/041","","","",""
"G06F3/0346","with detection of the device orientation or free movement in a 3D space, e.g. 3D mice, 6-DOF [six degrees of freedom] pointers using gyroscopes, accelerometers or tilt-sensors","","3D input gesturesInput devices using opto-electronic sensing","G06F3/017|G06F3/0304","","","","This place covers: Devices sensing their own position or orientation in a three dimensional space, allowing thereby the user to input up to 6 coordinates (position + orientation) by moving the device. Covers inter alia 3D mice."
"G06F3/03542","{Light pens for emitting or receiving light}","","Pens comprising an optical sensor for 1 or 2 dimensional position detectionLight emitting pointers per se used for marking with a light spot the pointed position from a distance","G06F3/0304|G06F3/0346","","","","This place covers: Pens detecting the presence of light on one point (such as a CRT scanning beam). Light emitting pens positioned in contact or proximity of the pointed position."
"G06F3/03543","{Mice or pucks  (G06F3/03541 takes precedence)}","G06F3/03541","","","Specific Indexing Codes  -  are associated to this group for some constructional details.","G06F2203/0332|G06F2203/0337","",""
"G06F3/03545","{Pens or stylus}","","","","","","","This place covers: Pens other than optically sensing pens or light pens (e.g. for use in combination with a digitiser). Constructional details of pens in general irrespectively of the interaction technology."
"G06F3/03547","{Touch pads, in which fingers can move on a surface}","","Digitisers","G06F3/041","Specific Indexing Codes  and  are associated to this group for some constructional details.","G06F2203/0338|G06F2203/0339","","This place covers: Touch surface for sensing the relative motion of a finger over the surface."
"G06F3/03549","{Trackballs  (G06F3/03541 takes precedence)}","G06F3/03541","","","","","",""
"G06F3/0362","with detection of 1D translations or rotations of an operating part of the device, e.g. scroll wheels, sliders, knobs, rollers or belts","","User controls for vehicle, e.g. dashboard knobsIncremental encoders, Sliding switchesRotary encoding wheels -""thumb-wheel switches""","B60K37/06|G01D5/244|G01D5/347|H01H15/00|H01H19/001","","","",""
"G06F3/038","Control and interface arrangements therefor, e.g. drivers or device-embedded control circuitry","","Control circuits or drivers for touchscreens or digitisersGraphical user interfaces (GUI) in generalPointing device drivers modified to control cursor appearance or behaviour taking into account the presence of displayed objects","G06F3/0416|G06F3/048|G06F3/04812","","","",""
"G06F3/0386","{for light pen}","","Light emitting pointers per se used for marking with a light spot the pointed position from a distanceLight emitting pens positioned in contact or proximity of the pointed positionLight pen using the raster scan of a CRT","G06F3/0346|G06F3/03542|G06F3/037","","","","This place covers: Tracking a projected light spot generated by a light pen or a ""laser pointer"" indicating a position on a display surface, drivers for light pen systems."
"G06F3/039","Accessories therefor, e.g. mouse pads","","Furniture aspectsPlatforms for supporting wrists as table extension","A47B21/00|A47B21/0371","","","",""
"G06F3/0393","{Accessories for touch pads or touch screens, e.g. mechanical guides added to touch screens for drawing straight lines, hard keys overlaying touch screens or touch pads}","","","","","","","This place covers: For example:"
"G06F3/041","Digitisers, e.g. for touch screens or touch pads, characterised by the transducing means","","Touchscreens integrated in a portable computer, Integration of touchpad in a portable computer (laptop, PDA)3D input gesturesIntegration of touchpad in a keyboardTrue 3D computer input devices with a freely movable memberPens for interaction between user and computerConstructional details of touchpadsAccessories for pointing devicesTouch interaction within a graphical user interface [GUI]","G06F1/1643|G06F1/1692|G06F1/169|G06F3/017|G06F3/0213|G06F3/0346|G06F3/03545|G06F3/03547|G06F3/039|G06F3/0488","In this area, Indexing Codes  -  dealing with details which may be related to different sensing technologies are used in parallel to the classification scheme.Subgroups  and  - are not explicit to a specific sensing technology but describe details about the integration within a display or the driving/interface of the digitiser.For documents belonging to these subgroups, if further relevant details related to the sensing technology are disclosed, the corresponding subgroup of  that is best related to the sensing technology employed should be doubly allocated as invention information.If the sensing technology is indicated only with minor details, the sensing technology (if any) should be indicated as additional information.","G06F2203/04101|G06F2203/04114|G06F3/0412|G06F3/0416|G06F3/04186|G06F3/041","Surfaceeither as a physical surface or as a virtual one, such as a virtual interaction plane floating in the air","This place covers: Position sensing of movable objects such as fingers or pens in contact with a surface or within a relative small distance to this surface (hovering)."
"G06F3/0412","{Digitisers structurally integrated in a display}","","Constructional details of LCDsDriving details of LED/OLEDDriving details of LCDsConstruction details of OLED displays","G02F1/13|G09G3/30|G09G3/36|H01L27/323","Documents disclosing both a specific display panel (LCD, OLED etc.) and touch sensing are doubly classified in the relevant areas (for example:  for LCD,  for OLEDs, and  for methods of driving displays), pertaining to the respective types of display panels as well as in .Devices in which a component is shared between touch detection circuitry and display driving circuitry, for example, a shared electrode for touch detection and display driving wherein the details of both the touch detection and the display driving are disclosed should be classified in the relevant areas either  (depending upon the type of display device) as well as in .Devices in which construction details of both LCD panel and touch components are disclosed, but touch detection is only nominally disclosed should be classified only in  and only classified in  as an Additional.Construction details of OLED display components integrated with touch detection components wherein the disclosure primarily concerns the OLED and minimally recites touch circuitry is classified in  and only classified in  as an Additional.","G02F|H01L|G09G|G06F3/0412|G09G|G06F3/0412|G02F1/13338|G06F3/0412|H01L27/323|G06F3/0412","","This place covers: Structural details and methods of driving a combination of displays with digitisers that share at least one constitutive part of both the touch sensing technology as well as the display technology (e.g. a common electrode for LCD control and a touch electrode (i.e. driving or sensing) for capacitive touch sensing, a common electrode being used as a guard/shield electrode in touch sensing, or a common electrode that is specifically floated during a touch driving/sensing period). Examples: Structural details and methods of driving a display and a digitizer in which the digitizer is either wholly or in part within the structural confines that make up the display panel of the display device (e.g., a sensor pixel that is adjacent to the display pixel) or the sensor is arranged to utilize at least one structural component of the display panel (e.g. such as the top substrate of the display pane). Examples:"
"G06F3/0414","{using force sensing means to determine a position}","","Pressure sensors for measuring the pressure or force exerted on the touch surface without providing the touch positionTactile force sensorsForce resistance touch switchesPiezoelectric touch switches","G06F2203/04105|G01L5/226|H03K17/9625|H03K17/964","","","","This place covers: Touch position determined by the analysis of the signals provided by pressure/force sensors."
"G06F3/04142","{the force sensing means being located peripherally, e.g. disposed at the corners or at the side of a touch sensing plate}","","","","","","","This place covers: Touch position determined by the analysis of the signals provided by a plurality (reduced number) of discrete pressure/force sensors disposed at several points of (e.g. under) the touch sensing surface, e.g. at the corners or the side of a touch sensing plate."
"G06F3/04144","{using an array of force sensing means  (position sensing using the local deformation of sensor cells G06F3/0447)}","G06F3/0447","","","","","","This place covers: Touch position determined by the analysis of the signals provided by either virtual pressure sensors generated by intersection nodes of a grid of sensing lines interacting with a pressure sensitive medium or an array of discrete pressure/force sensors delivering a variable (not a single Boolean 0/1) signal, the array extending over the whole area of the touch sensing surface, e.g. a grid of sensors disposed under the touch sensing surface."
"G06F3/04146","{using pressure sensitive conductive elements delivering a boolean signal and located between crossing sensing lines, e.g. located between X and Y sensing line layers}","","Tactile force sensorsForce resistance touch switchesPiezoelectric touch switches","G01L5/226|H03K17/9625|H03K17/964","","","","This place covers: Digitisers having a grid of crossing wires brought into virtual contact when pressure is exerted on the interaction surface, the virtual contact is established through a pressure sensitive layer disposed between the wire layers and made of a material that resistance diminishes under an applied pressure used to provide a ""binary"" output. The touch position is determined only by the contacting wires (scanning line and column) and not by the analog value of the sensed signal."
"G06F3/0416","{Control or interface arrangements specially adapted for digitisers}","","Touch interaction with a GUI","G06F3/0488","","","",""
"G06F3/04162","{for exchanging data with external devices, e.g. smart pens, via the digitiser sensing hardware}","","Remote control transmission over wireless linkNear-field transmission systemsData switching networksMobile phones interface using two way short range wireless interface","G08C17/00|H04B5/00|H04L12/00|H04M1/72412","","","","This place covers: Digitiser control allowing exchange of data with external devices via the digitiser sensing hardware (touch sensing electrodes, touch sensing coils, etc...), including exchange of information with smart pens as long as it concerns data transmission via the touch detection hardware. Not for transmission of data between devices using only transmission paths other than the touch sensing hardware (e.g. wired or wireless network)."
"G06F3/04164","{Connections between sensors and controllers, e.g. routing lines between electrodes and connection pads}","","","","","","","This place covers: Routing between sensing electrodes and controller or connector, details on wiring and connectors."
"G06F3/04166","{Details of scanning methods, e.g. sampling time, grouping of sub areas or time sharing with display driving  (Synchronisation with the driving of the display or the backlighting unit to avoid interferences generated internally G06F3/04184)}","G06F3/04184","","","","","","This place covers: For example grouping electrodes for changing the detection speed, resolution or sensitivity (including proximity distance), detection of multiple touches, detection of both pen and finger or, combination of multiple touch technologies."
"G06F3/04184","{Synchronisation with the driving of the display or the backlighting unit to avoid interferences generated internally}","","","","","","","This place covers: Synchronisation of the touch detection signals with the display (or backlight) driving signals whenever the digitiser is integrated in the display or not."
"G06F3/04186","{Touch location disambiguation}","","","","Documents disclosing disambiguation of an interaction with a GUI on a touch screen, wherein the touch location as measured by the digitiser is unambiguous, should be doubly classified in  and below.","G06F3/0488","","This place covers: Correcting or resolving an ambiguous detected touch, resulting from either an ambiguous touch location measured by the digitiser (e.g. correcting a detected large single touch into more than one smaller and adjacent touches, a partial touch at an edge of a digitiser into a full touch, a detected touch with an unwanted detected event like hover/palm rejection, cracks, water droplets, impurities, ghost touches, or gravity center due to tilt/angle of the input device) or an ambiguous interaction with a GUI on a touch screen, wherein the touch location as measured by the digitiser is unambiguous (e.g. correcting a detected touch to a user intended touch position)"
"G06F3/042","by opto-electronic means","","Pens detecting optically their absolute position with respect to a coded surfaceSystems where the position detection is based on the screen scanning with a light pen, Measuring arrangements characterised by the use of optical meansOptical encodersPosition fixing using optical waves, Prospecting or detecting by optical meansStatic switches using electro-optical elements in generalOptical switchesOptical touch switches","G06F3/0317|G06F3/0386|G06F3/037|G01B11/00|G01D5/34|G01S5/16|G01S17/00|G01V8/00|H03K17/78|H03K17/941|H03K17/9627","When there is a doubt whether the subject matter belongs to  and below or to  and below, the rule of thumb is: if the moving part is the sensor then it belongs to  and below, if the observed target (e.g. finger) is moving then it belongs to  and below. In any case, the subclasses  and below are used only in the context of interaction with a surface as defined in  or in close proximity of this surface; they are not used in the context of a true 3D interactive environment.","G06F3/0304|G06F3/042|G06F3/0304|G06F3/042|G06F3/042|G06F3/041","",""
"G06F3/0421","{by interrupting or reflecting a light beam, e.g. optical touch-screen}","","","","","","Beama narrow beam emitted in a given direction, not as a bright band of light or as an omnidirectional lightening; in the context of beams propagating from one side towards receivers on the opposite side in a grid like arrangement, the beam may have a triangular (or conical) shape with a slightly broader opening angle in order to be sensed by several receivers on the opposite side but not covering the whole array of receivers.",""
"G06F3/0423","{using sweeping light beams, e.g. using rotating or vibrating mirror}","","Details of moving scanning beam in optical scanners","G06K7/10603","","","",""
"G06F3/043","using propagating acoustic waves","","Infra/ultrasonic mechanical vibration generatorsManufacture of resonators or networks using SAW","B06B1/00|H03H3/08","","","","This place covers: Also documents where the acoustic wave is produced by knocking or rubbing the movable member (finger or pen) on the touch surface without any other vibration generator."
"G06F3/0433","{in which the acoustic waves are either generated by a movable member and propagated within a surface layer or propagated within a surface layer and captured by a movable member}","","Documents where the movable member (finger or pen) generates the waves but has no acoustic sourcePiezo-electric vibrators","G06F3/043|H01L41/09","","","","This place covers: Position detection using pens able either to emit acoustic waves using a dedicated wave generator (e.g. piezo-electric or mechanical vibrators, ultrasound generators or sparks) or to sense the propagating waves arriving through the surface."
"G06F3/0436","{in which generating transducers and detecting transducers are attached to a single acoustic waves transmission substrate}","","","","","","","This place covers: Passive movable member (finger or pen) disturbing the propagating waves within the substrate."
"G06F3/044","by capacitive means","","Means for converting the output of a sensing member to another variable by varying capacitanceCapacitive proximity switchesCapacitive touch switches","G01D5/24|H03K17/955|H03K17/962","","","",""
"G06F3/0441","{using active external devices, e.g. active pens, for receiving changes in electrical potential transmitted by the digitiser, e.g. tablet driving signals}","","Transmission of data between devices using the touch sensing hardware as transmission path","G06F3/04162","","","","This place covers: Digitisers using the capacitive coupling between the edge of a pointing pen or a similar sensing device and touch sensing conductors (electrodes) of the position sensing surface wherein the pen detects changes in electric potential of the conductors generated by the tablet (e.g. tablet driving signals); corresponding to JP FI:  ."
"G06F3/0442","{using active external devices, e.g. active pens, for transmitting changes in electrical potential to be received by the digitiser}","","Transmission of data between devices using the touch sensing hardware as transmission path","G06F3/04162","","","","This place covers: Digitisers using the capacitive coupling between the edge of a pointing pen or a similar input device and touch sensing conductors (electrodes) of the position sensing surface wherein active pens generate changes in electric potential of tablets, corresponding to JP FI:  ."
"G06F3/0443","{using a single layer of sensing electrodes}","","","","","","","This place covers: Digitisers using a single layer of sensing electrodes, i.e. sense and/or drive electrodes. The electrodes may be interconnected by bridges at crossings. The connecting bridge may be in another layer but all the sensing electrodes are in the same one."
"G06F3/0444","{using a single conductive element covering the whole sensing surface, e.g. by sensing the electrical current flowing at the corners}","","","","","","","This place covers: Digitisers using a single layer of sensing electrode which is made of a single piece of conducting material extending on the detection area and covered by a dielectric material."
"G06F3/0445","{using two or more layers of sensing electrodes, e.g. using two layers of electrodes separated by a dielectric layer}","","","","","","","This place covers: Digitisers using at least two layers of sensing electrodes, i.e. sense and/or drive electrodes, separated either by a solid dielectric layer or by a gap which could be filled by a dielectric material."
"G06F3/0446","{using a grid-like structure of electrodes in at least two directions, e.g. using row and column electrodes}","","","","","","","This place covers: Digitisers comprising a plurality of sets of parallel sensing and/or driving electrodes extending in at least two crossing directions; each ""row"" or ""column"" electrode may be either a single piece electrode or a plurality of interconnected electrodes (e.g. via bridges over the electrodes in the crossing direction) making a virtual electrode extending along the given direction."
"G06F3/0447","{Position sensing using the local deformation of sensor cells}","","","","","","","This place covers: Digitisers comprising an array of cells, e.g. made by the crossing of ""row"" and ""column"" electrodes, which are deformed under the pressure of a touching object, inducing a change in their capacitance."
"G06F3/0448","{Details of the electrode shape, e.g. for enhancing the detection of touches, for generating specific electric field shapes, for enhancing display quality}","","Touch switches","H03K2017/9602","","","","This place covers: The electrodes have shapes optimised to obtain a specific effect, e.g. increasing fringe field, better resolution or avoiding moiré effect. If the electrode design or pattern exhibits an irregular or non-conventional shape without mentioning any specific effect then this symbol should be allocated as additional information."
"G06F3/045","using resistive elements, e.g. a single continuous surface or two parallel surfaces put in contact","","Resistive potentiometersResistive touch switches","G01D5/165|H03K17/9645","","","",""
"G06F3/046","by electromagnetic means","","Means for converting the output of a sensing member to another variable by varying inductanceElectromagnetic proximity switches using a magnetic detector","G01D5/20|H03K17/95","","","",""
"G06F3/047","using sets of wires, e.g. crossed wires","","","","When wires or switches are integrated in a display,  should also be used.","G06F3/0412","","This place covers: Digitisers having a grid of crossing wires brought into contact when pressure is exerted on the interaction surface. The contact may be a direct contact or through a pressure sensitive switch making a connection between the wires. It includes arrays of switches integrated in a display where a galvanic contact is established between rows and columns when the user presses the display surface."
"G06F3/048","Interaction techniques based on graphical user interfaces [GUI]","","Hardware interface between computer and displayUser interface programs, e.g. command shells, help systems, UIMSInput/output arrangements of navigation systemsProgram-control in industrial systemsDrawing of charts or graphsEditing figures and textControl arrangements or circuits for visual displaysDisplay of multiple viewportsInteraction with a remote controller on a TV displayEnd user interface for interactive television or video on demand","G06F3/14|G06F9/451|G01C21/36|G05B19/00|G06T11/206|G06T11/60|G09G5/00|G09G5/14|H04N21/42204|H04N21/47","","","","This place covers: Subject matter where the focus is on the way the user can interact with the displayed data, usually by means of pointing devices, irrespective of the type of data treated by the software application or the type of device embedding data processing capability. As to the design of an interaction technique, this is most commonly determined by one or more of three factors, also in combination: the specific behaviour or appearance, of the graphical element or virtual environment; the kind of input events that can be generated by a specific input device used to interact with the displayed elements of the GUI; the type of operation or function to be performed with relation to these elements."
"G06F3/0481","based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance","","","","","","Cursor (also called (mouse) pointer)an indicator used to show the position on a computer display that will respond to input from a text input or pointing device",""
"G06F3/04812","Interaction techniques based on cursor appearance or behaviour, e.g. being affected by the presence of displayed objects","","Interaction techniques based on cursor behaviour involving tactile or force feedbackInteraction techniques for the selection of a displayed object ","G06F3/016|G06F3/04842","","","",""
"G06F3/04815","Interaction with a metaphor-based environment or interaction object displayed as three-dimensional, e.g. changing the user viewpoint with respect to the environment or object","","Video gamesNavigational instruments, e.g. visual route guidance using 3D or perspective road maps (including 3D objects and buildings), 3D image rendering in generalPerspective computation in 3D image renderingNavigation within 3D models or images (Walk- or flight-through a virtual museum, a virtual building, a virtual landscape etc.)","A63F13/00|G01C21/3635|G01C21/3638|G06T15/00|G06T15/20|G06T19/003","","","",""
"G06F3/04817","using icons  (graphical or visual programming using iconic symbols G06F8/34)","G06F8/34","","","","","","This place covers: Documents describing icons having a specific ( or unconventional ) design or specific properties."
"G06F3/0482","Interaction with lists of selectable items, e.g. menus","","User interfaces specially adapted for operating a cordless or mobile telephone by selecting functions from two or more displayed items, e.g. menus or iconsMenu-type displays in TV receivers","H04M1/72469|H04N21/47","","","",""
"G06F3/0483","Interaction with page-structured environments, e.g. book metaphor","","Electronic books, also known as e-books, ","G06F15/02|G06F15/0283","","","","This place covers: Documents which relate to tabs. Interaction techniques of e-books when they are heavily book-inspired."
"G06F3/0484","for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range","","","","","","",""
"G06F3/04842","Selection of displayed objects or displayed text elements  (G06F3/0482 takes precedence)","G06F3/0482","","","There are some older documents relating to selection by keyboard classified here. However, all new documents related to the latter are now classified in .Every time a set of displayed of objects can be consider as structured as a ""list of selectable items"", the interaction technique for selecting an item should be classified in .","G06F3/0489|G06F3/0482","","This place covers: GUI interaction techniques specifically designed for selecting a displayed object, e.g. a window or an icon. Selection by a pointing device (in the sense of  ) such as a mouse, a joystick, a digitiser, etc."
"G06F3/04845","for image manipulation, e.g. dragging, rotation, expansion or change of colour","","Image data processing or generation, in generalEditing figures and text; Combining figures or text","G06T|G06T11/60","","","","This place covers: Image manipulation, e.g. dragging or rotation of the whole image, resizing of objects, changing their colour etc."
"G06F3/0485","Scrolling or panning","","","","","","Scrolling""Dragging"" in some applications, i.e. depicting a user gesture which is not causing a motion of a previously selected object, but rather a motion of a reference within a given context. ","This place covers: Documents dealing with panning control."
"G06F3/0486","Drag-and-drop","","Interaction techniques to control scrolling","G06F3/0485","","","Dragging""Scrolling"", i.e. depicting a user gesture which is not causing a motion of a previously selected object, but rather a motion of a reference within a given context. ","This place covers: Drag and drop operations comprise moving by the user a previously selected object, and finally releasing said object."
"G06F3/0488","using a touch-screen or digitiser, e.g. input of commands through traced gestures","","Constructional details of digitisersDetails of input/output arrangements of navigation systems including use of a touch screen and gestures","G06F3/041|G01C21/3664","","","",""
"G06F3/04883","for inputting data by handwriting, e.g. gesture or text","","3D input gesturesHandwriting per se Digital ink recognition Signature recognition ","G06F3/017|G06V30/1423|G06V30/32|G06V40/30","","","",""
"G06F3/04886","by partitioning the display area of the touch-screen or the surface of the digitising tablet into independently controllable areas, e.g. virtual keyboards or menus","","Arrangements for projecting a virtual keyboard in a portable computersCharacter input methods like chording, prediction or disambiguation used on a keyboard Programmable (hardware) keyboardsEntering handwritten data, e.g. gesture or textConverting codes to words or guess-ahead of partial word inputs","G06F1/1673|G06F3/0233|G06F3/0238|G06F3/04883|G06F40/274","","","","This place covers: Virtual keyboards displayed on a touchscreen or as a template on a tablet."
"G06F3/0489","using dedicated keyboard keys or combinations thereof","","Selecting from displayed items by using keys for character inputAutomatic teller machines (ATM)Adjusting display parameters","G06F3/0236|G07F19/20|G09G5/00","","","","This place covers: The use of keyboard keys dedicated to specific functions, e.g. <Scroll Lock>, <Home>, <PgUp> keys, as well as the use of specific combinations of keyboard keys, e.g. <Ctrl>+<A>, <Ctrl>+<C>, whereby the ""+"" means that the two keys have to be pressed together."
"G06F3/04892","Arrangements for controlling cursor position based on codes indicative of cursor displacements from one discrete location to another, e.g. using cursor control keys associated to different directions or using the tab key  (arrangements for controlling cursor position based on coordinate signals G06F3/038)","G06F3/038","","","","","",""
"G06F3/05","Digital input using the sampling of an analogue quantity at regular intervals of time {, input from a/d converter or output to d/a converter}","","Sample-and-hold arrangementsSampling per se","G11C27/02|H03K17/00","","","",""
"G06F3/06","Digital input from, or digital output to, record carriers {, e.g. RAID, emulated record carriers or networked record carriers}","","Error detection, error correction, monitoring per se regarding storage systemsAccessing or addressing within memory systems or architecturesInformation retrievalRecording or reproducing devices per se","G06F11/00|G06F12/00|G06F16/00|G11B","","","",""
"G06F3/0601","{Interfaces specially adapted for storage systems}","","Error detection, error correction, monitoring per se Accessing, addressing or allocation within memory systemsInterconnection of, or transfer of information between memories, I/O devices, CPUsFile systems; file servers  Recording or reproducing devices per se  - Communication control characterised by a protocol ","G06F11/00|G06F12/00|G06F13/00|G06F16/10|G11B3/00|G11B33/00|H04L29/06","Each document should receive regarding ""invention information"":at least one classification in the range  -  for the technical effect achieved and at least one classification in the range  -  for the technique used andat least one classification in the range  -  for the infrastructure involved.The classification of ""additional information"" is optional. CPC symbols in the range  -  should be used for classifying ""additional information"".","G06F3/0602|G06F3/0626|G06F3/0628|G06F3/0667|G06F3/0668|G06F3/0689|G06F2206/1004|G06F2206/1014","Storage systemAn integrated collection of (a.) storage controllers and/or host bus adapters, (b.) storage devices such as disks, CD-ROMs, tapes, media loaders and robots, and (c.) any required control software, that provides storage services to one or more computers","This place covers:  Physical and/or logical interfaces between a host or a plurality of hosts and a storage device or a plurality of storage devices or storage system related to data/command path and data placement techniques. Storage devices include devices with rotating magnetic and optical storage media as well as solid state devices, or non-volatile electronic storage elements. Interfaces to an emulated rotating storage device in (flash) memory."
"G06F3/0605","{by facilitating the interaction with a user or administrator}","","","","","","","This place covers: Facilitating administration like automating recurrent tasks, selecting and presenting management information to the system user or administrator."
"G06F3/0607","{by facilitating the process of upgrading existing storage systems, e.g. for improving compatibility between host and storage device}","","","","","","","This place covers: Facilitating administration in relation to modification of existing systems, improving compatibility and scalability."
"G06F3/0608","{Saving storage space on storage systems}","","","","This group is often combined with the technique : data de-duplication.","G06F3/0641","","This place covers:  Effects leading to the reduction of the volume of data stored and the storage space requirements e.g. storage efficiency: the ratio of storage system's effective capacity to its raw capacity."
"G06F3/0611","{in relation to response time}","","","","","","","This place covers:  Reducing I/O operation latency time, i.e. the time between the making of an I/O request and the completion of the request's execution."
"G06F3/0613","{in relation to throughput}","","","","","","","This place covers:  Increasing I/O operation throughput, i.e. the number of I/O requests satisfied in a given time e.g. expressed in I/O requests/second (IOPS)."
"G06F3/0614","{Improving the reliability of storage systems}","","Error detection or correction by redundancy in operationRedundancy in hardware using active fault-masking","G06F11/14|G06F11/20","","","","This place covers:  Only reliability effects with a technique specific for   should be classified in this subgroup range."
"G06F3/0616","{in relation to life time, e.g. increasing Mean Time Between Failures [MTBF]}",""," User address space allocation in block erasable memory: Auxiliary circuits for EPROMs: ","G06F12/0246|G11C16/06","The subject covered by this group is often described in relation to non-volatile semiconductor memory (arrays), which are, as peculiar storage infrastructure, also classified in  or ","G06F3/0679|G06F3/0688","","This place covers:  Increasing the life expectancy measured in e.g. Mean Time Between Failures (MTBF)"
"G06F3/0617","{in relation to availability}","","Redundancy in operation:  Redundancy in hardware using active fault-masking: ","G06F11/14|G06F11/20","","","","This place covers:  Increasing availability, i.e. the amount of time the system is available during those time periods it is expected to be available, measured in e.g. hours of downtime in a year."
"G06F3/0619","{in relation to data integrity, e.g. data losses, bit errors}","","Adding special bits or symbols to the coded information in memories: Backing up (Point in time copy), restoring or mirroring files or drives:Redundancy in hardware by mirroring: Error detection or correction in digital recording or reproducing: ","G06F11/1008|G06F11/1446|G06F11/2056|G11B20/18","","","","This place covers:  Avoiding data to be altered or lost in operation or by accident."
"G06F3/062","{Securing storage systems}","","Protecting data against unauthorised access or modificationProtecting computer components used for data storageArrangements for network security","G06F21/60|G06F21/78|H04L29/06551","","","",""
"G06F3/0622","{in relation to access}","","","","","","","This place covers: Securing storage systems by preventing unauthorised access to the storage system, e.g. with a password."
"G06F3/0623","{in relation to content}","","","","","","","This place covers: Securing storage systems by protecting the data content, e.g. by scrambing the content."
"G06F3/0625","{Power saving in storage systems}","","Power saving in a single storage device inside a computerDriving, starting, stopping record carriers","G06F1/3221|G11B19/00","This group is usually combined with the technique  (configuration or reconfiguration of storage systems by changing the state or mode of one or more devices).This group is usually combined with the infrastructure  (disk arrays) or  (distributed storage).","G06F3/0634|G06F3/0689|G06F3/067","","This place covers:  Reducing the power consumption of a storage system, i.e. power efficiency. Power saving in storage systems with a plurality of storage devices external to the computer."
"G06F3/0626","{Reducing size or complexity of storage systems}","","","","This group is often combined with  (controller construction) in order to characterise the technique for the ""invention information"", e.g. System On Chip (SOC) controller.","G06F3/0658","","This place covers:  Reducing the physical size, simplifying the physical integration of storage systems"
"G06F3/0628","{making use of a particular technique}","","","","","","","This place covers: This group is the hierarchical head group for the range   -   related to particular storage techniques and is not used for classification."
"G06F3/0629","{Configuration or reconfiguration of storage systems}","","","","","","","This place covers:  Configuration or reconfiguration aspects. The general management of storage system features and behaviours through the control of changes made to hardware, software, firmware and related resources throughout the life cycle of the storage system."
"G06F3/0631","{by allocating resources to storage systems}","","Management of already existing partitionsAllocation of resources in multiprogramming arrangementsAddressing or allocation","G06F3/0644|G06F9/50|G06F12/02","","","","This place covers:  Allocating physical and/or logical storage resources, including storage elements, storage devices, appliances, virtual devices, disk volume and file resources."
"G06F3/0632","{by initialisation or re-initialisation of storage systems}","","Program loading or initiating ","G06F9/445","","","Discovery of storage device array configurationAssignment of the disks and operating parameters for a disk array by setting parameters such as stripe depth, RAID model, cache allowance, spare disk assignments, etc. The arrangement of disks and operating parameters that results from such an assignment.","This place covers: The startup and initial configuration of a storage device, system, piece of software or network. The process of installing or removing hardware or software components required for a system or subsystem to function.  Assignment of the operating parameters of a system, subsystem or device, such as designating a disk array's member disks or extents and parameters such as stripe depth, RAID model, cache allowance, etc. The collection of a system's hardware and software components and operating parameters."
"G06F3/0634","{by changing the state or mode of one or more devices}","","","","This group is often assigned when there is a power saving effect mentioned see ","G06F3/0625","Massive Array of Idle Disks (MAID)A storage system comprising an array of disk drives that are powered down individually or in groups when not required. MAID storage systems reduce the power consumed by a storage array, at the cost of increased Mean Time To Data.","This place covers: Changing the operating state or mode or parameters of one or more storage devices e.g. changing the rotational speed (measured in RPM) or powering on/off or spinning up/down one or more storage devices."
"G06F3/0635","{by changing the path, e.g. traffic rerouting, path reconfiguration}","","Arrangements and networking functions for distributed storage in a network ","H04L29/08549","This group is usually combined with : improving administration by facilitating the process of upgrading existing storage systems.","G06F3/0607","Access pathThe combination of adapters, addresses and routes through a switching fabric used by a computer to communicate with a storage device.","This place covers: Changing the configuration of a storage system by changing the interconnections in between storage system components or changing the routes over which the data flows from the host to the storage device and vice versa e.g. storage switches, storage ports, routing aspects in storage systems."
"G06F3/0637","{Permissions}","","Protecting computer components used for data storageAccess control in arrangements for network security e.g. Access Control Lists (ACL)","G06F21/78|H04L29/06823"," This group is usually combined with the effect : securing storage system in relation to access","G06F3/0622","","This place covers: Techniques related to the right of a user or host or group of users or group of hosts to access specific parts of a storage system, e.g. zoning, locking , shared access"
"G06F3/0638","{Organizing or formatting or addressing of data}","","Translation of protocol format and protocol data in a data movement Image compressionAudio compressionTime compression or expansion in a recording deviceCompression in generalData compression in computer networksVideo compression","G06F3/0661|G06T9/00|G10L19/00|G11B20/00007|H03M7/30|H04L29/0604|H04N19/00","","","PartitioningPresentation of the usable storage capacity of a disk or array to an operating environment in the form of several virtual disks whose aggregate capacity approximates that of the underlying physical or virtual disk. Partitioning is common in MS-DOS, Windows, and UNIX environments. Partitioning is useful with hosts that cannot support the full capacity of a large disk or array as one device. It can also be useful administratively, for example, to create hard subdivisions of a large virtual disk.","This place covers: Data organising, formatting or addressing, e.g. compression of data in general in a storage interface. Mapping aspects: conversion between two address spaces, such as the conversion between physical disk block addresses and logical disk block addresses of virtual disks presented to operating environments by control software, i.e. by using mapping tables which contain the correspondence between the two address spaces being mapped to each other. Partitioning of storage systems, i.e. the creation of partitions."
"G06F3/064","{Management of blocks}","","","","","","BlockThe unit in which data is stored and retrieved on disk and tape devices; the atomic unit of data recognition (through a preamble and block header) and protection (through a CRC or ECC).Block addressingAn algorithm for uniquely identifying blocks of data stored on disk or tape media by number, and then translating these numbers into physical locations on the media.","This place covers: Techniques related to the management of blocks in storage systems"
"G06F3/0641","{De-duplication techniques}","","Using de-duplication of the data stored as backupFile systems; File serversCompression in general","G06F11/1453|G06F16/10|H03M7/30"," This group is usually combined with : saving storage space","G06F3/0608","","This place covers:  Techniques related to data de-duplication, i.e. the replacement of multiple copies of data - at variable levels of granularity - with references to a shared copy in order to save storage space and/or bandwidth."
"G06F3/0643","{Management of files}","","User address space allocation File systems; file serversProcessing unordered random access data using directory or table look-up Table of contents on record carriers (VTOC)","G06F12/0223|G06F16/10|G06F16/9017|G11B27/327","","","","This place covers: Techniques related to the management of files in storage systems, e.g. low level file system aspects like File Allocation Tables (FAT)"
"G06F3/0644","{Management of space entities, e.g. partitions, extents, pools}","","Creation of space entities (allocating resources to storage systems)User address space allocationFile systems; File serversTable of contents on record carriers (VTOC)Arrangements and networking functions for distributed storage of data in a network, ","G06F3/0631|G06F12/0223|G06F16/10|G11B27/327|H04L29/08549|H04L67/1097","","","","This place covers: Techniques related to the management of space entities in storage systems, e.g. management of partitions, extents, pools"
"G06F3/0646","{Horizontal data movement in storage systems, i.e. moving data in between storage devices or systems}","","","","","","","This place covers: Aspects of horizontal moving of data between storage devices or systems."
"G06F3/0647","{Migration mechanisms}","","",""," HSM and Tiered storage aspect are usually combined with  (hierarchical storage) in order to characterise the infrastructure.","G06F3/0685","Tiered storageStorage that is physically partitioned into multiple distinct classes based on price, performance or other attributes. Data may be dynamically moved among classes in a tiered storage implementation based on access activity or other considerations.Hierarchical Storage Management (HSM)The automated migration of data objects among storage devices, usually based on inactivity. Hierarchical storage management is based on the concept of a cost-performance storage hierarchy. By accepting lower access performance (higher access times), one can store objects less expensively.","This place covers:  Movement of data or information between information systems, formats, or media. Migration is performed for reasons such as possible decay of storage media, obsolete hardware or software (including obsolete data formats), changing performance requirements (see tiered storage), the need for cost efficiencies etc."
"G06F3/0649","{Lifecycle management}","","File systems; File serversDetails of archiving in file system administrationDetails of hierarchical storage management (HSM) systems","G06F16/10|G06F16/113|G06F16/185","","","","This place covers:  Data Lifecycle Management (DLM) comprising the policies, processes, practices, services and tools used to align the business value of data with the most appropriate and cost-effective storage infrastructure from the point in time when data is created through its final disposition. Data is aligned with business requirements through management policies and service levels associated with performance, availability, recoverability, cost, etc. DLM is a subset of Information Lifecycle Management (ILM).  By automatically moving less frequently accessed objects to lower levels in the hierarchy, higher cost storage is freed for more active objects, and a better overall cost to performance ratio is achieved"
"G06F3/065","{Replication mechanisms}","","Backing up (Point in time copy), restoring or mirroring files or drivesRedundancy in hardware by mirroring","G06F11/1402|G06F11/2056"," This group is usually combined with  (improving the reliability of storage systems) and subgroups in order to characterise the effect achieved by the replication mechanism.","G06F3/0614","","This place covers:  Replication is the technique of sharing information so as to ensure consistency between redundant resources, such as software or hardware components, to improve reliability, fault-tolerance, or accessibility."
"G06F3/0652","{Erasing, e.g. deleting, data cleaning, moving of data to a wastebasket}","","File systems; File serversDelete operations in file systems Cleaning, erase control related to flash memory management Clearing memory, e.g. to prevent the data from being stolen ","G06F16/10|G06F16/162|G06F2212/7205|G06F2221/2143"," This group is often combined with  (securing storage systems in relation to content) in order to characterise the effect achieved by the invention","G06F3/0623","Data shreddingThe technique of deleting data that is intended to make the data unrecoverable. One such process consists of repeated overwrites of data on disk. Data shredding is not generally held to make data completely unrecoverable in the face of modern forensic techniques—that requires shredding of the disks themselves.","This place covers: Erasing of data in storage systems including secure erasure. "
"G06F3/0653","{Monitoring storage devices or systems}","","Thermal management in cooling means Power management Monitoring for error detection Verification or detection of system hardware configuration: Monitoring per se of computing systems Intrusion detection Monitoring of control systems Monitoring, i.e. supervising the progress of recording or reproducing Monitoring network traffic for security Network monitoring Monitoring testing in wireless networks ","G06F1/206|G06F1/3203|G06F11/0751|G06F11/2002|G06F11/34|G06F21/566|G05B23/02|G11B27/36|H04L29/06884|H04L43/00|H04W24/00","","","","This place covers:  Monitoring aspects related to storage interfaces, i.e. extra functionality for observing properties of a running storage device or storage system in its normal operating conditions without inputting test data."
"G06F3/0656","{Data buffering arrangements}","","Changing the speed of data flow, e.g. FIFO buffers per se Partitioned buffers Caches for peripheral storage systems, e.g. disk caches Detection or prevention of read or write errors by using a data buffer ","G06F5/06|G06F5/065|G06F12/0866|G11B19/044","","","BufferA region of a physical memory storage used to temporarily hold data while it is being moved from one place to another. It often adjusts timing by implementing a queue algorithm in memory, simultaneously writing data into the queue at one rate and reading it at another rate.","This place covers:  Arrangements using one or more buffers whereby a buffer is a memory device or programming construct, used to hold data momentarily as it moves along an I/O path or between software components.  Typically, a solid state memory device is used as a buffer. However, any storage device with faster access properties in relation to the storage device it is buffering can be used, e.g. a disk drive can act as a buffer for a tape device. "
"G06F3/0658","{Controller construction arrangements}",""," Information transfer on a bus, bus structuresDisposition of constructional parts in recording /reproducing devices Electrical connectors ","G06F13/40|G11B33/12|H01R13/00","","","","This place covers: Constructional details of the storage interface not elsewhere provided for.  Physical connecting arrangements not elsewhere provided for. Hardware arrangements of storage interface components like processors, bridges, offload engines, state machines"
"G06F3/0659","{Command handling arrangements, e.g. command buffers, queues, command scheduling}","","Data buffering","G06F3/0656","","","I/O schedulingTerm used to describe the method computer operating systems decide the order in which block I/O operations will be submitted to storage volumes.","This place covers: Techniques related to command decoding and execution and command transformation and routing including command buffering, command queuing, command scheduling"
"G06F3/0661","{Format or protocol conversion arrangements}","","Information transfer using universal interface adapter:Coupling between buses in general using bus bridges","G06F13/382|G06F13/4027","","","","This place covers:  Techniques related to the conversion of recording formats, e.g. conversion from Count Key Data (CKD) format from a mainframe to Fixed Block Architecture (FBA) format of an open systems computer.  Techniques related to the conversion of storage protocols; bridging hardware e.g. conversion from Small Computer System Interface (SCSI) protocol to an Advanced Technology Attachment (ATA) protocol."
"G06F3/0662","{Virtualisation aspects}","","","","","","","This place covers: Storage virtualisation refers to:  The act of abstracting, hiding, or isolating the internal functions of a storage (sub)system or service from applications, host computers, or general network resources, for the purpose of enabling application and network-independent management of storage or data.  The application of virtualisation to storage services or devices for the purpose of aggregating functions or devices, hiding complexity, or adding new capabilities to lower level storage resources."
"G06F3/0664","{at device level, e.g. emulation of a storage device or system}","","Program control for peripheral devices where the program performs an input/output emulation function","G06F13/105","","","Virtual diskA set of disk blocks presented to an operating environment as a range of consecutively numbered logical blocks with disk-like storage and I/O semantics.Virtual tapeA virtual device with the characteristics of a tape.","This place covers:  Devices presented to an operating environment by control software or by a volume manager. From an application standpoint, a virtual device is equivalent to a physical one. In some implementations, virtual devices may differ from physical ones at the operating system level, e.g., booting from a host based disk array may not be possible. Storage device emulation, e.g. disk emulation.  Storage (sub)system emulation, e. g. Virtual Tape System. Port virtualisation on a storage network switch, storage interface virtualisation."
"G06F3/0665","{at area level, e.g. provisioning of virtual or logical volumes}","","","","","","Thin provisioning (also, dynamic provisioning)A technology that allocates the physical capacity of a volume or file system as applications write data, rather than preallocating all the physical capacity at the time of provisioning.","This place covers: Storage area virtualisation, i.e. the act of applying virtualisation to one or more area based (storage) services for the purpose of providing a new aggregated, higher level—e.g., richer, simpler, more secure—storage area service to clients. Thin provisioning. Dynamic allocation of logical volumes."
"G06F3/0667","{at data level, e.g. file, record or object virtualisation}","","File systems; File servers ","G06F16/10","","","","This place covers:  Object virtualisation: The use of virtualisation to present several underlying objects as one single composite object. The use of virtualisation to present an integrated object interface when object data and metadata are managed separately in the storage system."
"G06F3/0668","{adopting a particular infrastructure}","","","","In this subrange, the physical storage infrastructure should be classified and not the virtualised infrastructure if present. If the virtualised storage infrastructure is important, this should be classified in .","G06F3/0664","",""
"G06F3/067","{Distributed or networked storage systems, e.g. storage area networks [SAN], network attached storage [NAS]}","","Distributed file systems implemented using NAS architectureNetwork related aspects of SANs, NASes, ","G06F16/1824|H04L29/08549|H04L67/1097","","","","This place covers:  Architectures comprising multiple storage systems interconnected by a network allowing access from multiple hosts with emphasis on storage related aspects. Depicted below, an exemplary connection of storage device to a host through a network."
"G06F3/0671","{In-line storage system}","","","","","","","This place covers:  Architectures with a direct host to storage system connection attachment. Depicted below, an exemplary connection of storage device(s) to a host through a direct connection."
"G06F3/0673","{Single storage device}","","","","","","","This place covers: Storage systems comprising a single controller controlling one or more storage media, e.g. drums. Depicted below, an exemplary architecture for a single storage device. "
"G06F3/0674","{Disk device}","","","","","","","This place covers:  Storage devices being a spinning disk drive, i.e. a non-volatile, randomly addressable, data storage device."
"G06F3/0676","{Magnetic disk device}","","","","","","","This place covers:  Storage devices being a magnetic disk drive, e.g. HDD, DASD."
"G06F3/0677","{Optical disk device, e.g. CD-ROM, DVD}","","","","","","","This place covers:  Optical disk drives, e.g. CDROM, DVD, WORM optical disk."
"G06F3/0679","{Non-volatile semiconductor memory device, e.g. flash memory, one time programmable memory [OTP]}",""," Low level flash management such as logical to physical address mapping, erase management and wear levellingAuxiliary circuits for EPROMs ","G06F12/0246|G11C16/06","","","","This place covers: Semiconductor storage devices, e.g. SSD (solid state drive), flash memory, one time programmable memory (OTP)."
"G06F3/068","{Hybrid storage device}","","","","","","","This place covers:  Storage devices comprising a controller and multiple storage medium types, e.g. magnetic and semiconductor mediums sharing the same controller. "
"G06F3/0682","{Tape device}","","Digital recording/reproducing, formatting on tapes","G11B20/1201","","","","This place covers:  Storage devices being spinning tape devices, i.e. a non-volatile, serial addressable data storage device."
"G06F3/0683","{Plurality of storage devices}","","","","","","","This place covers:  Storage systems comprising multiple controllers and a plurality of storage devices. "
"G06F3/0685","{Hybrid storage combining heterogeneous device types, e.g. hierarchical storage, hybrid arrays}",""," User address space allocation in block erasable memoryAuxiliary circuits for EPROMs","G06F12/0246|G11C16/06","","","","This place covers: Storage systems comprising multiple controllers and multiple storage medium types, e.g. SSD, HDD and tapes combined; FC-HDD, SATA-HDD, SCSI-HDD combined. "
"G06F3/0686","{Libraries, e.g. tape libraries, jukebox}","","Control of automated cassette changing arrangementsControl systems for magazines of disc records","G11B15/689|G11B17/22","","","","This place covers:  Storage systems providing automatic access to multiple media cartridges typically via an automatic loading robot, e.g. tape library, media changer, juke box."
"G06F3/0688","{Non-volatile semiconductor memory arrays}","","","","","","","This place covers:  Storage systems comprising multiple controllers and multiple semiconductor storage devices. "
"G06F3/0689","{Disk arrays, e.g. RAID, JBOD}","","Error Correction Coding (ECC) for RAID","G06F11/1076","","","RAIDRedundant Array of Independent Disks (originally: of Inexpensive disks)JBODJust a Bunch Of Drives","This place covers:  Storage systems comprising multiple controllers and multiple spinning disk drives, e.g. RAID, JBOD."
"G06F3/08","from or to individual record carriers, e.g. punched card {, memory card, integrated circuit [IC] card or smart card}","","Information transfer using universal interface adapterMethods or arrangements for sensing record carriersMemory card, integrated circuit (IC) card, smart card, record carriers for use with machines and with at least a part designed to carry digital markingsRecord carriers with integrated circuit chipsCoded identity card or credit card with a coded signalActive credit-cards provided with means to personalise their use","G06F13/382|G06K7/00|G06K19/00|G06K19/07|G07F7/10|G07F7/1008","","","","This place covers: Interfaces between a host or a plurality of hosts and a memory card reader or a plurality of memory card readers in relation to the data/command path and data placement techniques."
"G06F3/09","Digital output to typewriters","","","","Not used for classification of new documents.","","","This place covers: Old technology related to interfaces with typewriters."
"G06F3/12","Digital output to print unit {, e.g. line printer, chain printer}","","Digital output to typewriterArrangements for producing a permanent visual presentation of the output data using printers","G06F3/09|G06K15/02","","","",""
"G06F3/1201","{Dedicated interfaces to print systems}","","","","This group contains older documents (published before the year 2000) from which the majority are not reorganised in the  and its subgroups. No new/recent documents should be classified in .Each new document should receive regarding ""invention information"":at least one class in the sub-groups of  for the technical effect achieved;at least one class in the sub-groups of  for the technique used andoptionally one class in the sub-groups of  for the infrastructure involved.Class in  is added only if the infrastructure plays a major role in the ""invention information"".The classification of ""additional information"" is optional.Indexing Code symbols in the sub-groups of  and/or  and/or  and/or  should be used for classifying ""additional information"".The older documents should be retrieved using Indexing Codes: Printer information exchange with computer; Status or feedback related to information exchange; Buffering means; Printer job scheduling or printer resource handling; Printer code translation, conversion, emulation, compression; Configuration of printer parameters; Printer language recognition, e.g. program control language, page description language.The ""additional information"" can be found by combining the above Indexing Code(s) with the Indexing Code .","G06F3/1201|G06F3/1201|G06F3/1202|G06F3/1223|G06F3/1278|G06F3/1278|G06F3/1202|G06F3/1223|G06F3/1278|G06F2206/15|G06F3/1293|G06F3/1294|G06F3/1295|G06F3/1296|G06F3/1297|G06F3/1298|G06F3/1201","","This place covers: Interfaces between a host or a plurality of hosts and a printer device or a plurality of printer devices. Techniques for preparing the print job, sending it to a printer and printing it."
"G06F3/1202","{specifically adapted to achieve a particular effect}","","","","This group is not used for classifying documents in it, but to introduce one of the three classification criteria mentioned in the ""Special rules for classification"" section of .","G06F3/1201","",""
"G06F3/1203","{Improving or facilitating administration, e.g. print management}","","","","","","","This place covers: All general aspects of printing management which do not fit in the sub-groups."
"G06F3/1204","{resulting in reduced user or operator actions, e.g. presetting, automatic actions, using hardware token storing data}","","","","","","","This place covers: Preventing the user or operator from / avoiding the need for doing complicated and burdensome actions related to the printing of a document."
"G06F3/1205","{resulting in increased flexibility in print job configuration, e.g. job settings, print requirements, job tickets}","","","","This group is usually combined with  and its sub-groups in order to characterise the technique for the ""invention information"".","G06F3/1253","","This place covers: Assisting or helping the user during print job configuration, e.g. increasing granularity in job configuration, achieving more customised settings, proposing suitable settings, preventing selection of incompatible or undesirable print options."
"G06F3/1206","{resulting in increased flexibility in input data format or job format or job type}","","","","","","","This place covers: Assisting or helping the user to send a print job regardless of the format or type of data that should be printed. Facilitating usage of old print systems with new print systems, more specifically when compatibility between old data formats and new data formats should be achieved."
"G06F3/1207","{resulting in the user being informed about print result after a job submission}","","","","This group is usually combined with  and its sub-groups in order to characterise the technique for the ""invention information"".","G06F3/1259","","This place covers: All aspects that make the user aware of what happened with the print job after it being sent."
"G06F3/1208","{resulting in improved quality of the output result, e.g. print layout, colours, workflows, print preview}","","","","This group is usually combined with  and its sub-groups in order to characterise the technique for the ""invention information"".","G06F3/1253","","This place covers: Assisting the user to increase the quality of print output (e.g. matching print output to what was intended by the user, increasing the appeal of the print output), e.g. by using preview screens, test printing. Actions or processing directed to higher fidelity."
"G06F3/1209","{resulting in adapted or bridged legacy communication protocols, e.g. emulation, protocol extension}","","","","","","","This place covers: Facilitating usage of old print systems with new print systems, more specifically when compatibility between protocols should be achieved. Modifying/enhancing legacy communication protocols to extend their use into (additional) printing environments or print-related functionality (e.g. modifying Bluetooth to adapt to printing --> Basic Printing Profile (BPP))."
"G06F3/121","{Facilitating exception or error detection and recovery, e.g. fault, media or consumables depleted}","","Error or fault reporting or storing ","G06F11/0766","","","","This place covers: Assisting or helping the user to predict or deal with faults, e.g. device faults, lack of consumables, communication errors. Recovering from faults."
"G06F3/1211","{Improving printing performance}","","","","","","","This place covers: All aspects of making the job to be printed faster that do not fit in the sub-groups."
"G06F3/1212","{achieving reduced delay between job submission and print start}","","","","","","","This place covers: Decreasing the time between sending a print job (e.g. pressing ""print"" button) and actual start of the same job at the print device."
"G06F3/1213","{at an intermediate node or at the final node}","","","","","","","This place covers: Achieving decreasing the time at the node where the job is either temporarily stored (e.g. computer, server, printer) or actually printed (the printer)."
"G06F3/1214","{at the submitting node}","","","","","","","This place covers: Achieving decreasing the time at the node where the job is initiated from (e.g. computer, server, printer)."
"G06F3/1215","{achieving increased printing speed, i.e. reducing the time between printing start and printing end}","","","","","","","This place covers: Decreasing the time actually spent to print the job, once printing has commenced, at the print device."
"G06F3/1217","{achieving reduced idle time at the output device or increased asset utilization}","","","","","","","This place covers: Decreasing the time during which the printer is doing nothing."
"G06F3/1218","{Reducing or saving of used resources, e.g. avoiding waste of consumables or improving usage of hardware resources}","","","","","","","This place covers: Saving resources of the printer used for printing a job."
"G06F3/1219","{with regard to consumables, e.g. ink, toner, paper}","","","","","","","This place covers: Preventing waste of used consumables (see for example US2011051164)."
"G06F3/122","{with regard to computing resources, e.g. memory, CPU}","","","","","","","This place covers: Optimal usage of system's hardware resources."
"G06F3/1221","{with regard to power consumption}","","","","This group is usually combined with  and its sub-groups in order to characterise the technique for the ""invention information"".","G06F3/1229","","This place covers: Power saving; reducing energy consumption."
"G06F3/1222","{Increasing security of the print job}","","","","This group is usually combined with ,  or  in order to characterise the technique for the ""invention information"".","G06F3/1238|G06F3/1239|G06F3/1234","","This place covers: Adding secure aspects to a print job. Preventing unauthorised printing of a job, limiting the printing based on user credentials."
"G06F3/1223","{specifically adapted to use a particular technique}","","","","This group is not used for classifying documents in it, but to introduce one of the three classification criteria mentioned in the ""Special rules for classification"" section of .","G06F3/1201","",""
"G06F3/1224","{Client or server resources management}","","","","","","","This place covers: All aspects that deal with the software or hardware resources of the client or server which do not fit in the sub-groups (see e.g. US2011013223, US2009007151)."
"G06F3/1225","{Software update, e.g. print driver, modules, plug-ins, fonts}","","","","","","","This place covers: Updating or installing printer drivers on the client or server. Adding additional functionality to existing printer drivers (e.g. installing plug-ins, downloading printer definition files). Support for newly installed printers by replacing/updating existing drivers."
"G06F3/1226","{Discovery of devices having required properties}","","","","","","","This place covers: The client or the server sends requests to find suitable printers for printing based on certain requirements, e.g. colour, double side printing, finishing options, status, location, supported encryption, etc."
"G06F3/1227","{Printer definition files}","","","","","","","This place covers: Printer properties and commands to invoke/execute the printing properties are described in a separate file and can be used by an application program to convert a print job according to certain printer properties without a printer driver. The file can be used by the printer driver as well, e.g. for supporting different printers (see e.g. ""Service Item File"" in US6897974)."
"G06F3/1228","{Printing driverless or using generic drivers}","","","","","","","This place covers: Specific printer drivers are not used but also printer definition files are not used. Usually a thin client with limited resources is involved. Generic drivers normally are designed to support plurality of different types/models of printers and/or different operating systems."
"G06F3/1229","{Printer resources management or printer maintenance, e.g. device status, power levels}","","","","","","","This place covers: Device status when checked only in relation to printing of a job - power-level (e.g. on, off, power saving mode), operating or not, reasons for the malfunctions. Logging of device status. All aspects for managing the device which do not fit in the sub-groups."
"G06F3/123","{Software or firmware update, e.g. device firmware management}","","","","","","","This place covers: Downloading or updating of printer's firmware. Installing new software for supporting newly added hardware or additional functions (e.g. image processing functions, resident fonts, support for new data formats)."
"G06F3/1231","{Device related settings, e.g. IP address, Name, Identification}","","","","","","","This place covers: Update or initialisation of the printer specific properties - IP address, Device name (see e.g. EP1372059, US2005151988)."
"G06F3/1232","{Transmitting printer device capabilities, e.g. upon request or periodically}","","","","","","","This place covers: Transmitting to the requestor printing device capabilities, e.g. double side printing, finishing options, dpi, colour or b/w, ppm (see e.g. EP1435565, EP1178393)."
"G06F3/1234","{Errors handling and recovery, e.g. reprinting  (G06F3/1261 takes precedence)}","G06F3/1261","Error or fault reporting or storing","G06F11/0766","","","","This place covers: How to handle received jobs or the job currently being printed in case of error, e.g. reprint only the portion that was not printed, reprint the full job, delete the job and ask the host to send it again."
"G06F3/1235","{caused by end of consumables, e.g. paper, ink, toner}","","","","","","","This place covers: Specific aspects for recovering from errors caused by end of consumables - paper, ink, toner."
"G06F3/1236","{Connection management}","","","","","","","This place covers: All aspects relating to connection between devices - client<->printer, server<->printer, printer<->printer. (see e.g. US2011019231 or US2011019231)."
"G06F3/1237","{Print job management}","","","","","","","This place covers: General aspects of job management that do no fit in the sub-groups."
"G06F3/1238","{Secure printing, e.g. user identification, user rights for device usage, unallowed content, blanking portions or fields of a page, releasing held jobs}","","","","","","","This place covers: Based on user/content credentials allowing/disabling usage of the printer as a whole."
"G06F3/1239","{Restricting the usage of resources, e.g. usage or user levels, credit limit, consumables, special fonts}","","","","This group is usually combined with  or  in order to characterise the effect achieved by the ""invention information"".","G06F3/1219|G06F3/122","","This place covers: Limiting the use of printing as such (e.g. credit limit) or limiting the use of printers (e.g. time the printer can be used, e.g. only 1 hour a day, only after 17:00). Restricting configuration options, e.g. to plain paper, to black ink only, double-sided or n-up printing, lower resolution, limited image effects."
"G06F3/124","{Parallel printing or parallel ripping}","","","","This group is usually combined with  in order to characterise the effect achieved by the ""invention information"".","G06F3/1215","","This place covers: Printing or ripping several portions of a job at the same time."
"G06F3/1241","{Dividing a job according to job requirements, e.g. black/white and colour pages, covers and body of books, tabs}","","","","","","","This place covers: Print job is divided and different parts are sent to different devices having different properties."
"G06F3/1242","{Image or content composition onto a page}","","2D [Two Dimensional] image generation Image acquisition ","G06T11/60|G06V10/10","","","","This place covers: Composing or overlaying content from different sources, e.g. different documents, onto a page."
"G06F3/1243","{Variable data printing, e.g. document forms, templates, labels, coupons, advertisements, logos, watermarks, transactional printing, fixed content versioning}","","Document retrieval systems Editing, e.g. inserting or deleting","G06F16/93|G06F40/166","","","","This place covers: Print data for a page is generated by combining two sets of content (such as text, graphics and images), one set being constant from page to page (fixed content) and the other set being different (variable content) for every page. The combining of fixed and variable data may take place at any step in a print workflow."
"G06F3/1244","{Job translation or job parsing, e.g. page banding}","","","","","","","This place covers: All aspects of transforming the print job in order to be printed which do not fit in the sub-groups, e.g. parsing in order to eliminate repetitive data, colour transformation, font transformation."
"G06F3/1245","{by conversion to intermediate or common format}","","","","","","","This place covers: Conversion or translation of the initial document or print job to a format which is not yet ready to be handled by a target printer but is useful for certain manipulation, e.g. faster to transmit, more efficient to store, easy to secure. Conversion or translation to a format which, although it could be suitable to certain printers, may not be suitable for the target printer (e.g. converting to a print format before target printer is known)."
"G06F3/1246","{by handling markup languages, e.g. XSL, XML, HTML}","","","","","","","This place covers: Parsing of print jobs written in one of the mark-up languages."
"G06F3/1247","{by conversion to printer ready format}","","","","","","","This place covers: Conversion or translation of the initial print job (or the job in an intermediate format) to a format which is ready to be handled by the target printer."
"G06F3/1248","{by printer language recognition, e.g. PDL, PCL, PDF}","","","","","","","This place covers: Parsing of the job in order to find a certain mark (or keyword) that identify the language of the job."
"G06F3/125","{Page layout or assigning input pages onto output media, e.g. imposition}","","Pagination ","G06F40/114","","","","This place covers: Arrangement of the product's pages (e.g. document pages) on the output medium (e.g. paper sheets or media roll)."
"G06F3/1251","{for continuous media, e.g. web media, rolls}","","","","","","","This place covers: Specifically adapted to when media to be fed by the printer is of long length, e.g. web media, rolls."
"G06F3/1252","{for sheet based media}","","","","","","","This place covers: Specifically adapted to when media to be fed by the printer is of short length, e.g. sheets (regardless of whether said media is to be folded or cut after printing. See e.g.US2010039670)."
"G06F3/1253","{Configuration of print job parameters, e.g. using UI at the client}","","","","","","","This place covers: All aspects of configuring how the job should be printed which do not fit in the sub-groups."
"G06F3/1254","{Automatic configuration, e.g. by driver}","","","","Double classification possible if  also apply.","G06F3/1239","","This place covers: Automatic allocation of (some) print settings by software, e.g. print driver, (on the client or server) when a print job is to be printed."
"G06F3/1255","{Settings incompatibility, e.g. constraints, user requirements vs. device capabilities}","","","","This group is usually combined with  or  in order to characterise the effect achieved by the ""invention information"".","G06F3/1204|G06F3/1208","","This place covers: Limiting the possibilities given to the user at the time of configuring print job, e.g. in b/w printer hide the option for colour printing, hide the option for double side printing if the printer does not support it or if ""transparencies"" is selected as media (see e.g. WO2010016234). Comparing how the job should be printed and what the printer can offer when the job is sent from the client. Automatic adjusting of some of job's settings in order to fit the printer's settings or asking the user to solve the conflict settings manually (see e.g. EP1986410)."
"G06F3/1256","{User feedback, e.g. print preview, test print, proofing, pre-flight checks}","","","","This group is usually combined with  in order to characterise the effect achieved by the ""invention information""","G06F3/1208","","This place covers: Techniques for checking how the job will look like when printed either by using a preview on a display, by checks performed by software (pre-flight, pre-press) or by real print of part of the job."
"G06F3/1257","{by using pre-stored settings, e.g. job templates, presets, print styles}","","","","This group is usually combined with  in order to characterise the effect achieved by the ""invention information"".","G06F3/1204","","This place covers: Previously defined settings are stored (e.g. as a template) and, when configuring a new print job, the stored settings are used instead of selecting a value for each print option."
"G06F3/1258","{by updating job settings at the printer}","","","","","","","This place covers: Changing/updating of settings of a received or currently being created print job using UI of the printer."
"G06F3/1259","{Print job monitoring, e.g. job status}","","","","This group is usually combined with  in order to characterise the effect achieved by the ""invention information"".","G06F3/1207","","This place covers: Supervising of a print job after being sent for printing, e.g. printed, failed, queued. Job status can be requested (by the sending node) or received automatically after job sending."
"G06F3/126","{Job scheduling, e.g. queuing, determine appropriate device}","","","","","","","This place covers: Techniques relating to where and/or when the job should be printed which do not fit in the sub-groups. Queuing the jobs before printing, e.g. waiting a long job to finish. Finding a printer based on the job requirements."
"G06F3/1261","{by using alternate printing}","","","","","","","This place covers: Determining different (alternative) device for printing a job if the designated device can not print the job, e.g. due to failure, lacking of resources or excessive delay expected (see e.g. US7027169)."
"G06F3/1262","{by grouping or ganging jobs}","","","","","","","This place covers: Combining several print jobs in one job (group job), printing print jobs in batches (e.g. jobs requiring same media or same post-processing, jobs submitted by the same user or intended for the same recipient) (see e.g.WO2008039689)."
"G06F3/1263","{based on job priority, e.g. re-arranging the order of jobs, e.g. the printing sequence}","","","","","","","This place covers: Changing the order of print jobs according certain priorities - either user-defined or automatically determined."
"G06F3/1264","{by assigning post-processing resources}","","","","","","","This place covers: Determining resources to perform actions/functions on printed output (i.e. after printing) as specified by the job settings (e.g. folding, cutting, trimming, binding)."
"G06F3/1265","{Printing by reference, e.g. retrieving document/image data for a job from a source mentioned in the job}","","","","","","","This place covers: The print job as submitted does not comprise the document or print data that should be printed but only a reference to it or to its location (e.g. a URL, a file path). The document is later (e.g. when queuing the job or shortly before printing should commence) obtained from its location."
"G06F3/1267","{Job repository, e.g. non-scheduled jobs, delay printing}","","","","","","","This place covers: Storing a print job for a certain time before it being printed (e.g. a job to be printed at or after a certain time) or in case it should be re-printed subsequently. Storing the job until certain condition is fulfilled, e.g. user authorisation, recovering from an error state..."
"G06F3/1268","{Job submission, e.g. submitting print job order or request not the print data itself}","","","","Specific ways to send a request to print a job, e.g. scanning a page with a barcode and receiving printed pages with information identified by the barcode from a remote source.","","","This place covers: Sending a request to print a job. The real job data will be sent or requested later. All aspects of sending a print request (e.g. submitting a document for printing, submitting a print job or a print order) which do not fit in the sub-groups."
"G06F3/1269","{by broadcasting server}","","","","","","","This place covers: Server storing user's desires about receiving printed materials, e.g. subscription, and sending personalized print jobs to all users (or users' printers) accordingly."
"G06F3/127","{by using hot folders, e.g. folder for which print settings or print data management rules are set in advance}",""," Print workflow management ","G06F3/1275","","","","This place covers: Folders with associated printing instructions (e.g. print settings or print-related tasks, such as automatic notifications). When a document or job is sent to a folder it will be processed according to the printing instructions associated with the folder."
"G06F3/1271","{Job submission at the printing node, e.g. creating a job from a data stored locally or remotely  (G06F3/1238 takes precedence)}","G06F3/1238","Printing by reference ","G06F3/1265","","","","This place covers: Using the UI of the printer to configure a new job. The data for the job could be stored on the printer or at a different location, e.g. server."
"G06F3/1272","{Digital storefront, e.g. e-ordering, web2print, submitting a job from a remote submission screen}","","","","","","","This place covers: Configuring and submitting a job using online based resources, e.g. accessing remote print service providers, choosing from web based content."
"G06F3/1273","{Print job history, e.g. logging, accounting, tracking}","","","","","","","This place covers: Creating, managing and using of print job history (see e.g. EP1860546)."
"G06F3/1274","{Deleting of print job}","","","","","","","This place covers: Specifically instructing or managing job deletion based on certain criteria, e.g. memory usage, privacy, avoiding mixing of received jobs (see e.g. US2005275864)."
"G06F3/1275","{Print workflow management, e.g. defining or changing a workflow, cross publishing}","","","","","","","This place covers: Designing or modifying the steps to be performed to a print request from choosing document(s) to be printed to finalising the printed job (e.g. post-processing actions). Adding conditional steps, e.g. what should happen in case of certain events (see e.g.US2008170254)."
"G06F3/1276","{within a printer driver, e.g. driver resides either on a server or on a client}","","","","","","","This place covers: Print workflow management is done by the driver, regardless where it resides - client or server."
"G06F3/1277","{using filter pipeline, e.g. outside the driver, adding traps}","","","","","","","This place covers: No driver is involved in the filter pipeline. Workflow formed by pieces of software, called ""filters"" (see e.g. US2002135800)."
"G06F3/1278","{specifically adapted to adopt a particular infrastructure}","","","","This group is not used for classifying documents in it, but to introduce one of the three classification criteria mentioned in the ""Special rules for classification"" section of .","G06F3/1201","",""
"G06F3/1279","{Controller construction, e.g. aspects of the interface hardware}","","","","","","","This place covers: All aspects of hardware structure of the interface controller of the printer device if the ""invention information"" mainly focuses on them."
"G06F3/128","{Direct printing, e.g. sending document file, using memory stick, printing from a camera}","","","","","","","This place covers: Printing from an USB stick or digital camera directly connected to the printer device."
"G06F3/1281","{Multi engine printer devices, e.g. one entity having multiple output engines}","","Parallel printing or parallel ripping .","G06F3/124","","","","This place covers: Printer device having plurality of print engines in order to increase printing speed."
"G06F3/1289","{in server-client-printer device configuration, e.g. the server does not see the printer}","","","","","","","This place covers: Network configuration where the information from the server to the printer device always goes via the client."
"G06F3/129","{in server-printer device-client configuration, e.g. print flow goes from server to printer and then bidirectional from printer to client, i.e. the client does not communicate with the server}","","","","","","","This place covers: Network configuration where the client accesses the server via the printer."
"G06F3/13","Digital output to plotter {; Cooperation and interconnection of the plotter with other functional units}","","Arrangements for producing a permanent visual presentation of the output data using plotters","G06K15/22","","","",""
"G06F3/14","Digital output to display device {; Cooperation and interconnection of the display device with other functional units}","","Arrangements for producing a permanent visual presentation of the output data Control of display in generalKvm-switches, only linked to one computer as data source Audio-visual communications","G06K15/00|G09G|G09G5/006|H04N7/14","When a standard bus is present, documents will be classified only if they contain details of the standard interface that are peculiar for the display system; ""Non-standard"" bus interfaces include all bus interfaces (SPI, LVDS, MIPI).","","","This place covers: Interfaces between processor and display system (with or without a standard bus). Multiple busses connecting processor, display system and/or other subsystems: e.g. video zoom busses, multimedia busses besides the standard bus. Data being furnished to the display system being generated by a multiplicity of sources. Data of different types being furnished to the system that displays the data (it can be a display system or a complete computer). Interfaces between the host and the display system, especially for system that have a structure different from the structure outlined above (older or special systems). Plurality of symbol or graphics generators cooperating with one display unit. Aspects of the operating system that have impact on the display system and are not related to a particular aspect of the physical construction of the display. Transferring data from an Internet host to the display system. kvm-switches, if they (also) switch between a plurality of data sources (i.e. computers)."
"G06F3/1415","{with means for detecting differences between the image stored in the host and the images displayed on the displays}","","Digital output to display device involving copying of the display data of a local workstation or window to a remote workstation or window so that an actual copy of the data is displayed simultaneously on two or more displays","G06F3/1462","","","",""
"G06F3/1423","{controlling a plurality of local displays, e.g. CRT and flat panel display}","","Using a single graphics controllerUsing more than one graphics controller","G06F3/1431|G06F3/1438","","","","This place covers: Display devices in which more than one display unit is connected to the display system, irrespective of the type of display."
"G06F3/1431","{using a single graphics controller}","","","","Documents are classified in  or  if there is a ""graphics controller"" present in the system, i.e. an interface between the standard bus and the display terminal that contains a graphics processor and a frame bufer. If the plurality of displays are connected to the host processor in a different, non standard, way, or if it is not possible to determine if a graphics controller is present (like for example in the old fashoned ""terminals""), the documents will be classified in .","G06F3/1431|G06F3/1438|G06F3/1423","","This place covers: One single graphics controller (VGA, SVGA or other systems) controls two or more display units. Often one graphics controller card has interface circuitry for interfacing to CRT and to flat panel."
"G06F3/1446","{display composed of modules, e.g. video walls}","","","","See also ","G09G2300/026","","This place covers: Illustrative example of subject matter classified in this group: "
"G06F3/1454","{involving copying of the display data of a local workstation or window to a remote workstation or window so that an actual copy of the data is displayed simultaneously on two or more displays, e.g. teledisplay}","","Interaction techniques specific for application sharing, as now several users may want to interact with the same displayMultiprogramming arrangements; (implementation details of the sharing technique if not framebuffer based, i.e. really the inner workings, exchanged data structures, Office automation, groupwareElectronic classroom, remote teaching, Network arrangements for conferencing, chatrooms, etcNetwork protocol for the sharing technique, , Telephonic multimedia conference systemsVideophones","G06F3/0481|G06F9/46|G06F9/54|G06Q10/10|G09B5/00|G09B7/00|H04L12/18|H04L29/0602|H04L29/06027|H04L29/06034|H04M3/567|H04N7/14","","","","This place covers: Also screen sharing where the framebuffer is sent to remote displays, as is commonly done in application sharing (well known as Virtual Network Computing (VNC)). Examples: Remote display on X-windows terminals: the rendering is done centrally, and only the modified sections of the frame buffers are sent to the remote stations. This is a case of remote local display. There is no teledisplay in this case because the remote display stations are acting as terminals of the host.  Teledisplay: A collaborative work support system that is performed on plural computers each of which is assigned for an operator, and supports collaborative work in which the plural computers display common data and each operator operates the displayed common data through his own computer. Sharing of display panel information between several screens in classrooms with a white board."
"G06F3/1462","{with means for detecting differences between the image stored in the host and the images displayed on the remote displays}","","Digital output to display device with means for detecting differences between the image stored in the host and the images displayed on the displays","G06F3/1415","","","",""
"G06F3/147","using display panels","","Data processing in buying/selling transactions, e.g. when dealing with POS terminalsArrangements of circuits for control of indicating devices using static means to present variable informationServices or facilities specially adapted for wireless communication networksServices making use of the location of users or terminals","G06Q30/06|G09G|H04W4/00|H04W4/02","","","","This place covers: Display panels: LEDs, PDP, LCD, etc. Interconnection of POS (point of sales) terminals. "
"G06F3/1475","{with conversion of CRT control signals to flat panel control signals, e.g. adapting the palette memory}","","with conversion of CRT control signals to flat panel control signals","G09G5/366","","","",""
"G06F3/16","Sound input; Sound output  (speech processing G10L)","G10L","Handling natural language dataCoding of audio signals in musical instrumentsDevices for the storage of speech signalsAmplifiersGain or frequency controlBroadcastingEncoding of compressed speech signals for transmission or storageSpatial sound recordingSpatial sound reproduction","G06F40/00|G10H|G11B27/00|H03F|H03G3/00|H04H|H04L|H04R5/00|H04S","","","","This place covers: General computer sound interfaces for interaction with computer programs or users"
"G06F3/162","{Interface to dedicated audio devices, e.g. audio drivers, interface to CODECs}","","Interfacing to a peripheral in general CODECs per se, ","G06F13/385|G10L19/16|G10L19/24","","","CODECcoding/decoding, compression/decompression of an audio signal","This place covers:  Dedicated hardware or software components for interfacing to an audio device i.e. translating the audio stream from a host into a format accepted by the audio device and vice-versa. Providing hardware emulation for an audio source. Intermediation with OS when receiving audio to preserve sound quality. Connecting a host to a mobile phone to aid processing audio to enhance quality Adapting drivers to different audio source formats"
"G06F3/165","{Management of the audio stream, e.g. setting of volume, audio stream path}","","","","","","","This place covers: Management from a host of the audio device by means of the interface control for modifying the operation of the audio device. Only for control of the audio device/system from the host. Controlling the audio settings such as volume, mute or filters. Controlling the audio stream path (switch output destination). Switch on or off of computer audio devices. Controlling the audio play, pause or replay."
"G06F3/167","{Audio in a user interface, e.g. using voice commands for navigating, audio feedback}","","","","","","","This place covers:  Interface to a computer user by means of an audio device to send commands to the computer or receive feed-back on an action. Limited to the navigation in a menu and sending control commands. Moving a mouse pointer on a screen using audio. Scrolling through a menu using audio. User interface of an audio card. Audio indicators to focus attention."
"G06F5/00","Methods or arrangements for data conversion without changing the order or content of the data handled","","Coding, decoding or code conversion, in generalConversion of the form of the representation of individual digits Code conversionParallel/series conversion","H03M|H03M5/00|H03M7/00|H03M9/00","","","","This place covers: Data format conversions; Conversion between packed and unpacked BCD."
"G06F5/01","for shifting, e.g. justifying, scaling, normalising {(digital stores in which the information is moved stepwise, e.g. shift-registers G11C19/00; digital stores in which the information circulates G11C21/00)}","G11C19/00|G11C21/00","","","Use of Indexing Codes:Indexing Codes , ,  are use for secondary aspects (non-invention information).","G06F7/49905|G06F7/49942|G06F7/49994","","This place covers: Shifting which modifies the value being shifted, e.g. in arithmetic or for implementing shift instructions in processors; in particular the shifting functionality provided and the logic implementing it."
"G06F5/012","{in floating-point computations}","","","","","","","This place covers: Details of the shifting arrangement."
"G06F5/015","{having at least two separately controlled shifting levels, e.g. using shifting matrices  (G06F5/012 takes precedence)}","G06F5/012","","","","","","This place covers: For example, barrel shifter with multiple shifting stages."
"G06F5/06","for changing the speed of data flow, i.e. speed regularising {or timing, e.g. delay lines, FIFO buffers; over- or underrun control therefor  (G06F7/78 takes precedence)}","G06F7/78","Reordering based on contents of data in generalFIFO with priority-controlled output","G06F7/22|G06F13/18","","","","This place covers: Shift registers with certain functionality and logic implementing it. Buffer systems in general. FIFO [First In, First Out] using linked lists. Fifos of the types ""shift-in, individual-out"" or ""individual -in, shift-out"". Effectuating transfer of data between different clock domains"
"G06F5/08","having a sequence of storage locations, the intermediate ones not being accessible for either enqueue or dequeue operations, e.g. using a shift register {(G06F5/065 takes precedence; shift registers per se G11C19/00)}","G06F5/065|G11C19/00","","","","","","This place covers: E.g. physical shifting of data."
"G06F5/10","having a sequence of storage locations each being individually accessible for both enqueue and dequeue operations, e.g. using random access memory {(G06F5/065 takes precedence)}","G06F5/065","Addressing methods of the memory, ","G06F12/02|G11C8/00","","","",""
"G06F5/12","Means for monitoring the fill level; Means for resolving contention, i.e. conflicts between simultaneous enqueue and dequeue operations","","","","","","","This place covers: E.g. signal generated / action taken before buffer runs full/empty."
"G06F5/14","for overflow or underflow handling, e.g. full or empty flags","","","","","","","This place covers: Signal generated / action taken when buffer is already full/empty."
"G06F5/16","Multiplexed systems, i.e. using two or more similar devices which are alternately accessed for enqueue and dequeue operations, e.g. ping-pong buffers","","Addressing methods of the memory, ","G06F12/02|G11C8/00","","","","This place covers: Alternating address by address, i.e. Odd-even."
"G06F7/00","Methods or arrangements for processing data by operating upon the order or content of the data handled  (logic circuits H03K19/00)","H03K19/00","Logical operations on words in combination with arithmetic operationsArrays of processors with common controlInformation retrieval, or database structures thereforConversion between different representations of Boolean functions, e.g. Boolean formula synthesis from Karnaugh maps, generation of Reed-Muller expansionsComplex mathematical operations","G06F7/57|G06F15/80|G06F16/00|G06F17/00|G06F17/10","Documents classified in  should also be further classified in the appropriate indexing codes  - .","G06F7/00|G06F2207/00|G06F2207/7295","Individual record carriersDesignates physically distinct carriers carrying digital information, e.g. sheets, cards.","This place covers: The methods and arrangements in this main group are one level above logic circuits. Examples of such methods and arrangements are: arithmetic circuits implemented using basic logic gates, implementation of complex logic gates, and implementation at transistor level, specially designed for arithmetic operations. Other examples are: Logical operations on words per se; Finite state machines; Grey System Theory (method of handling uncertainty), Asynchronous digital pipeline = clock-less operation of logical operations."
"G06F7/02","Comparing digital values  (G06F7/06, {G06F7/22,} G06F7/38 take precedence)","G06F7/06|G06F7/22|G06F7/38","Information retrievalComparing pulses","G06F16/00|H03K5/22","","","","This place covers: For example, bit string matching, character string matching."
"G06F7/026","{Magnitude comparison, i.e. determining the relative order of operands based on their numerical value, e.g. window comparator}","","Min or max functions producing one of the two input values ","G06F7/544","","","Window comparatordetermines in which window defined by multiple values a certain value falls","This place covers: Magnitude comparison generating less-than, greater-than, equal-to signals."
"G06F7/06","Arrangements for sorting, selecting, merging, or comparing data on individual record carriers","","Sorting of postal letters Conveying record carriers from one station to another","B07C|G06K13/02","","","",""
"G06F7/22","Arrangements for sorting or merging computer data on continuous record carriers, e.g. tape, drum, disc","","Minimum or maximum of two valuesClassifying in pattern recognition","G06F7/544|G06K9/00","","","","This place covers: Classification of digital data. Maximum, minimum or median value of a set of data."
"G06F7/38","Methods or arrangements for performing computations using exclusively denominational number representation, e.g. using binary, ternary, decimal representation","","","","","","","This place covers: E.g. documents on number representations without dealing with the technical circuit implementation."
"G06F7/544","for evaluating functions by calculation {(G06F7/4824 takes precedence)}","G06F7/4824","With a look-up tableComplex mathematical operations","G06F1/02|G06F17/10","","","",""
"G06F7/58","Random or pseudo-random number generators","","Transformation of stochastic functions by table look-upLottery apparatusRandom pulse generators, random bit generatorsSecret telegraphic communication","G06F1/03|G07C15/00|H03K3/84|H04L9/00","Random bit generators: In case of a bit sequence, which could be seen as a random number sequence, classification is done both in the appropriate (sub)group in  and in .Methods both valid for random and pseudo-random number generators should be classified in the head group () and not in a sub-group, even if a specific PRNG/RNG is discussed.Double classification head group / main group onlyon basis of other aspects, e.g. possibly non-trivial PRNG or RNG also disclosedin case it is not sure that the method is valid for both RNG and PRNGUse of keywords Pseudo-random number generators i.e. only deterministic PRNGs;mixed RNGs in  if more than one type of pseudo-random number generator is discussed:- in case these PRNGs are clearly trivial: classify in head group (  ) - in case a PRNG might be non-trivial: classify in relevant sub-group(s)  Using finite field arithmetic, e.g. using a linear feedback shift registergenerators including the 2**n state with all zeroes in  Random number generators, i.e. based on natural stochastic processes also mixed PRNG/RNGs Considered as random ( ) are methods based on - radioactivity, zener, race, chaos- uncertain moment of pressing a key Using non-contact-making devices, e.g. tube, solid state device; using unspecified devicese.g. 2's complementing Using coordinate rotation digital computer (CORDIC)i.e. CORDIC in non-complex environment:  Using signed-digit representationBinary multipliers and dividers often use signed-digit representation internally for one operand or the result; see therefor ""recoded"" or ""Booth"" multipliers in  -  and ""recoded"" or ""SRT"" dividers in  - . Computations with numbers represented by a non-linear combination of denominational numbers, e.g. rational number, logarithmic number system, floating-point numbers (conversion to or from floating-point codes ) ( , , , ,  take precedence)e.g. fused multiply add (FMA) also here, but add  Logarithmic number system mainly for non-trivial operations such as addition.multiplication of binary operands via the log-domain is in Adding; Subtracting ( takes precedence)e.g. floating-point addition Dividingi.e. floating-point division Multiplying i.e. floating-point multiplication If in fact only the mantissa-multiplication is treated, classification should be made in another group, unless special features for switching between fixed and floating point operands are described.Computations with a radix, other than binary, 8, 16 or decimal, e.g. ternary, negative or imaginary radices, mixed radix (non-linear PCM,  takes precedence) N-ary logic Multiplying; Dividing MULTIPLICATION ONLY division goes into , whether it uses 8421 code or not  Mantissa overflow or underflow in handling floating-point numberse.g. exponent adjustment Normalisation mentioned as feature only 'i.e use of normalisationImplementation of floating-point normalisers:  Significance controli.e. number of significant bits Implementation of IEEE-754 StandardNote: The standard uses sign magnitude representationRounding to nearest ( takes precedence)Note: The IEEE-754 way is ""rounding to nearest even"", which is rounds to nearest, and only when exactly in the middle to nearest even. Though rounding to nearest odd may in fact round to an even number, it normally doesn't.Rounding towards zero ( takes precedence)e.g. as in IEEE-754 Rounding away from zeroway of rounding not provided for in IEEE-754 Interval arithmetici.e. computations with intervals as valuesAdding; Subtracting (, ,  - ,  take precedence) only binary, radix 8, radix 16..  using carry switching, i.e. the incoming carry is connected directly to the carry output under control of a carry propagate signal Full adders having in general the form1-bit adder stages (ripple carry) with simultaneous carry generation for or propagation over two or more stages e.g. using group carry signals, e.g. carry skip; all smart carry schemes except carry look-ahead and carry select/ conditional sum are in using selection between two conditionally calculated carry or sum values e.g. carry select, conditional sumfor multiple operands, e.g. digital integrators i.e. operand-parallel addition of 3 or more operands (this is mainly ""3"" or ""a lot"");multipliers in  word-serial, i.e. with an accumulator-registeri.e. OPERAND serial!Multiplying; Dividing (, ,  - ,  take precedence) very rare cases only; normally documents are classified in one of the subgroups (or both) This subgroup does not cover : multiplier-accumulators (f = ∑ a x ), including simple cases f = ax + b, f = ax+ by : vector multipliers, matrix multipliers : binary rate multipliers/dividers : finite field multipliers  In serial-parallel fashion, i.e. one operand being entered serially and the other in parallel ( takes precedence) In old documents these multipliers are often called ""parallel"", in newer documents they are often called ""serial""! with row-wise addition of partial products i.e. adding two rows each cycleIn majority: ""add to accumulator and shift"" In parallel-parallel fashion, i.e. both operands being entered in parallel ( takes precedence) e.g. single cells for cellular array multiplierse.g. arrays of undetermined type Using indirect methods, e.g. quarter-square method, via logarithmic domainif operands stay in the log-domain then  ;quarter-square see XP013079891 in serial-serial fashion, i.e. both operands are entered serially ( takes precedence) e.g. Lyon multipliers (see XP007901470)  with row-wise addition of partial productsi.e. adding two rows each cycle  with column-wise addition of partial productse.g. adding one column each cycle with a parallel counter In parallel-parallel fashion, i.e. both operands being entered in parallel ( takes precedence) e.g. single cells for cellular array multipliers;e.g. arrays of undetermined typeWith row-wise addition of partial products ( takes precedence) cellular array multipliers with ripple carry (=within rows) also skewed arrays of the type ""McCanny & McWhirter""e.g. linear chain of cascaded adders With column-wise addition of partial products, e.g. using Wallace tree, Dadda counters ( takes precedence)e.g. adder trees  Partitioned, i.e. using repetitively a smaller parallel-parallel multiplier or using an array of such smaller multipliers each smaller multiplier larger than 1 bit; multiprecision; also array multipliers A) n × m bit multiplier consisting of an array of k × l multipliers, k being a submultiple of n and l being a submultiple of m respectively, followed by an array or tree of adders, e.g. of Wallace type. B) n × m bit multiplication realised by a single k × l multiplier, k and l as above, used repetitively and followed by an accumulator.The k × l bit multipliers may be single ROM's for example.Not to be confused with multi-bit-scanning, where a selection among precalculated multiples of the multiplicand is made; if the k × l bit multipliers itself are of the latter type, double classification may be appropriate. Reduction of the number of iteration steps or stages, e.g. using the Booth algorithm, log-sum, odd-even for Booth, use the subgroups!Note: the term ""Booth"" is often incorrectly used when intending to say ""modified Booth"". A Booth recoder module inputs some, e.g. two, consecutive bits and sends a 'Booth carry' to a more significant module. A modified Booth recoder module inputs some, at least three, consecutive bits, the most significant of which is also input to the next higher recoder module. In modified Booth the recoder modules are not connected to each other via a carry. By skipping over strings of zeroes or ones, e.g. using the Booth Algorithme.g. using operand processing, e.g. simple (radix-2, 1st order) Booth, also canonical recoding to NAF form (sequential recoding with carry)  By using multiple-bit-scanning, i.e. by decoding groups of successive multiplier bits in order to select an appropriate pre-calculated multiple of the multiplicand as a partial product i.e. processing multiple bits per iteration (radix > 2) without overlap, e.g. using positive precalculated multiples only groups of MR-bits are decoded for selecting multiples of MD e.g. 2-bit groups: 3-bit groups: 00 0 × MD 000 0 × MD 01 1 × MD 001 1 × MD 10 2 × MD 010 2 × MD 11 3 × MD 011 3 × MD 100 4 × MD 101 5 × MD 110 6 × MD 111 7 × MDMultiples,that are not a power of 2(3x,7x, etc)have to be precalcultated or looked up in a table. Each bitgroup having two new bits, e.g. 2nd order MBAi.e. radix-4 modified Booth, i.e. 2nd order modified BoothReduction of the number of iteration steps or stages, e.g. using the Sweeny-Robertson-Tocher (SRT) algorithm (not used, see  or  )NOT USED, non-restoring in general gets the KW non-restoring,SRT in particular goes in Non restoring calculation, where each digit is either negative, zero or positive, e.g. SRT; (WARNING Not complete. Provisionally see  + ) almost empty - everything is in Indexing Code For evaluating functions by calculation (with a look-up table ; complex mathematical operations ; ,  take precedence) e.g. min, max of two operands, absolute value, (sum of) absolute differencefinding a maximum value of a set (e.g. during sorting) is in ; direct table lookup of function values is in  ;table lookup of coefficients during computation goes here, put ""table lookup"" in the TXT field; Sum of products (for applications thereof, see the relevant places, e.g. , ) e.g. MACs; fused multiply add (FMA) for floating point are in  with using crossaddition algorithms, e.g. CORDIC e.g. sin, cos, tan, sinh, cosh, tanh;CORDIC on complex numbers:  Powers or roots, e.g. Pythagorean sumse.g. powers by multiplying the operand by itself (which is not possible with non-integer powers)Arithmetic logic units (ALU), i.e. arrangements or devices for performing two or more of the operations covered by groups -  or for performing logical operations (instruction execution ; ,  take precedence; logic gate circuits )e.g. arrangements for performing more than one operation using the same circuitry Basic arithmetic logic units, i.e. devices selectable to perform either addition, subtraction or one of several logical operations, using, at least partially, the same circuitry: Note: multiplication is not seen as ""basic"" ","G06F7/58|H03K3/84|G06F7/58|G06F7/588|G06F7/582|G06F7/582|G06F7/582|G06F7/584|G06F7/588|G06F7/588|G06F7/48|G06F7/5446|G06F7/4818|G06F7/523|G06F7/5338|G06F7/535|G06F7/5375|G06F7/4824|H03M7/24|G06F7/4806|G06F7/4824|G06F7/49|G06F7/491|G06F7/544|G06F7/5443|G06F7/483|G06F7/5235|G06F7/4833|G06F7/4833|G06F7/485|G06F7/4873|G06F7/4876|G06F7/4824|G06F7/49|G06F7/4915|G06F7/496|G06F7/49915|G06F5/012|G06F7/49936|G06F7/49942|G06F7/49957|G06F7/49957|G06F7/49963|G06F7/49957|G06F7/49978|G06F7/49984|G06F7/49989|G06F7/4806|G06F7/4824|G06F7/483|G06F7/491|G06F7/544|G06F7/50|G06F7/503|G06F7/506|G06F7/506|G06F7/507|G06F7/52|G06F7/509|G06F7/5095|G06F7/4806|G06F7/4824|G06F7/483|G06F7/491|G06F7/544|G06F7/5443|G06F15/347|G06F7/68|G06F7/724|G06F7/52|G06F7/533|G06F7/527|G06F7/5272|G06F7/533|G06F7/53|G06F7/4833|G06F7/5235|G06F7/533|G06F7/525|G06F7/5272|G06F7/5277|G06F7/533|G06F7/53|G06F7/5324|G06F7/5306|G06F7/5324|G06F7/5318|G06F7/5324|G06F7/533|G06F7/5332|G06F7/5334|G06F7/5338|G06F7/535|G06F7/5375|G06F7/5375|G06F7/537|G06F7/535|G06F7/5375|G06F7/5375|G06F7/5375|G06F17/10|G06F17/10|G06F7/4806|G06F7/4824|G06F7/22|G06F1/03|G06F7/544|G06F17/10|H03H17/00|G06F7/483|G06F7/5443|G06F7/5443|G06F7/4818|G06F7/5446|G06F7/552|G06F7/483|G06F7/556|G06F9/30|G06F7/49|G06F7/491|H03K19/00|G06F7/57|G06F7/575","","This place covers: Generation or transformation of stochastic functions; generation of output with certain random characteristics; post processing, e.g. pattern elimination, whitening, reducing auto-correlation or bias; breakdown detection."
"G06F7/60","Methods or arrangements for performing computations using a digital non-denominational number representation, i.e. number representation without radix; Computing devices using combinations of denominational and non-denominational quantity representations {, e.g. using difunction pulse trains, STEELE computers, phase computers  (conversion of digital data to or from non-denominational form H03M5/00, H03M7/00)}","H03M5/00|H03M7/00","","","","","","This place covers: For example, documents concerning ""permutograph""; a ""Negationsnetz""; Fibonacci code representation.Further details of subgroups :  using difunction pulse trains (STEELE computers); phase computers (GAINES). e.g. Delta-Sigma sequences. :  number-of-ones counters, i.e. devices for counting the number of input lines set to ONE among a plurality of input lines, also called bit counters or parallel counters (for applications thereof, see the relevant places, e.g.  ,  ,  ,  ,  ) e.g. number of ones counters (parallel counters), compressors, carry save adders 4-2, 7-3, etc, e.g. used in multipliers. : Digital differential analysers, i.e. computing devices for differentiation, integration or solving differential or integral equations, using pulses representing increments; Other incremental computing devices for solving difference equations (  takes precedence; differential analysers using hybrid computing techniques  ) DDA application in numerical control  .Integration per se:  . : Using pulse rate multipliers or dividers pulse rate multipliers or dividers per se (  takes precedence) (frequency division in electronic watches  ; frequency multiplication or division in oscillators  ; frequency dividing counters per se   -  ) e.g. phased locked loop (PLL) with digital divider (thus achieving pulse rate multiplication); PLLs in general are in  ; pulse rate doubling by adding delayed pulses and correcting the duty cycle are in  ;   -   mostly relate to analogue aspects."
"G06F7/72","using residue arithmetic","","Error detection/correction in computersOptical residue arithmetic devicesError detection/correction for coding in generalError detection/correction in transmissionSecret communication","G06F11/00|G06E1/065|H03M13/00|H04L1/00|H04L9/00","","","","This place covers: A mod N, modulo addition, modulo subtraction Further details of groups : Covers for e.g. modular division; both with composite moduli and in prime number fields. : This subgroup covers RSA [Rivest–Shamir–Adleman ] cryptosystem in general. : Covers mainly (binary) extension fields; prime number fields using modular arithmetic are covered in   -  ,   and  . For this type of arithmetic the term ""Galois field"" and symbols of the type GF(p ) are characteristic, e.g. GF(2 ). : Elliptic curve cryptography [ECC] is classified in this subgroup only if specific adaptations for elliptic curves are present. This subgroup covers rational functions p(x)/q(x) for example and inversion in extension fields is covered in  . Montgomery reduction involves adding of multiples of the modulo, followed by right shifting. This subgroup covers the Chinese Remainder Theorem for non-RSA for example. A residue number system (RNS) is a system in which a number is represented by a series of digits, each of which is the remainder of that number with respect to a different modulus m : e.g.: moduli -> 5 3 2 26  = 1 2 0 The maximum number representable is M = (∏  m ) - 1 e.g.: (2 × 3 × 5) - 1 = 29 in the above case."
"G06F7/74","Selecting or encoding within a word the position of one or more bits having a specified value, e.g. most or least significant one or zero detection, priority encoders {(with shifting G06F5/01)}","G06F5/01","","","","","","This place covers: E.g. leading zero anticipation LZA, priority encoders. With shifting (during/for detection) details: also in  ."
"G06F7/76","Arrangements for rearranging, permuting or selecting data according to predetermined rules, independently of the content of the data","","Arrangements for rearranging, permuting or selecting data according to the content of the data, Parallel / series conversion or vice versa","G06F7/06|G06F7/22|H03M9/00","","","","This place covers: For example, masking, shuffling  covers i.e. serial or parallel generation of all permutations.  covers e.g. endian conversion."
"G06F7/78","for changing the order of data flow, e.g. matrix transposition or LIFO buffers; Overflow or underflow handling therefor","","FIFO-devices Reordering based on contents of data, e.g. sort key Cache-memories FIFO with priority-controlled output ","G06F5/06|G06F7/22|G06F12/08|G06F13/18","","","","This place covers: LIFO [Last In, First Out], also called stack or pushdown store: Reversal of a train of data words. Reversal of a train of data bits. Devices called FIFO [First In, First Out], but having possibilities to extract also other data items than the first one. Matrix transportation devices. Other devices with an output sequence different from the input sequence, but independent of the contents of the data."
"G06F8/00","Arrangements for software engineering  (testing or debugging G06F11/36; administrative, planning or organisation aspects of software project management G06Q10/06)","G06F11/36|G06Q10/06","Execution of a stored programHardware/software co-design","G06F9/06|G06F30/00","","","","This place covers: The engineering discipline of creating software and the assistance of computer tools (CASE tools) in exercising the task of software engineering. The phases, covered by  , range from the initial requirements collection up to and including the delivery of software to the end user, its maintenance and management but exclude the phase of testing and debugging."
"G06F8/10","Requirements analysis; Specification techniques","","Circuit designSpecification of network protocols","G06F30/30|H04L69/03","","","","This place covers: Capturing and formalising user requirements: Graph notations; Diagramming techniques, e.g. Dataflow diagrams; Requirements specifications; Use of modelling languages such as uml; Petri nets."
"G06F8/20","Software design","","Computer-aided design in general","G06F30/00","","","","This place covers: Software design, including the determination of the main structure, the modules that will be created and the relationships between them. The use of design patterns for object-oriented development."
"G06F8/22","{Procedural}","","Declarative","G06F8/313","","","","This place covers: The conventional design paradigm, where a design is defined in terms of a sequence of actions to be performed. An example is the Jackson Structured Programming method."
"G06F8/24","{Object-oriented}","","Object-oriented method resolutionInheritanceObject-oriented databases","G06F9/449|G06F9/4492|G06F16/289","","","","This place covers: The process of planning a system in terms of interacting objects for the purpose of solving a software problem as defined by the (formalised) user requirements. Examples are the design patterns from the book ""Design Patterns: Elements of Reusable Object-Oriented Software"" by Gamma et al."
"G06F8/30","Creation or generation of source code","","Specification techniques for generating programsCompilation, i.e. the process of converting source code into binary code during the task of software engineeringReverse engineering; Extracting design information from a source codePorting source code to a different environmentQuery generation in information retrieval, ","G06F8/10|G06F8/41|G06F8/74|G06F8/76|G06F16/33|G06F16/24","","","","This place covers: The conceptual step of converting an abstract representation (design or specification) of a software system, into a more concrete representation in the form of program code."
"G06F8/31","{Programming languages or programming paradigms}","","Processing or translation of natural language","G06F40/40","","","","This place covers: Programming languages and paradigms that can be used by a programmer in order to create source code."
"G06F8/311","{Functional or applicative languages; Rewrite languages}","","","","","","Functional programmingsoftware development model which expresses algorithms as functions, i.e. as stateless mappings of input values to output valuesDeclarative programmingprogramming paradigm that expresses a computation without describing its control flow","This place covers: Languages designed for functional programming that treats computation as the evaluation of mathematical functions. Examples are Sasl, Miranda and Haskell."
"G06F8/312","{List processing, e.g. LISP programming language}","","","","","","CARFunction that determines the first element of a listCDRFunction that determines the list after its first element","This place covers: List processing languages, e.g. Lisp and Scheme."
"G06F8/313","{Logic programming, e.g. PROLOG programming language}","","","","","","Declarative programmingprogramming paradigm that expresses a computation without describing its control flowHorn clauselogical statement","This place covers: Programming languages expressing a program as a collection of logical statements."
"G06F8/3135","{Unification or backtracking}","","","","","","Unificationfinding an assignment that satisfies all clausesBacktrackingdone on partial unifications that cannot succeed, and to continue to find more possible unifications",""
"G06F8/314","{Parallel programming languages  (G06F8/313 takes precedence)}","G06F8/313","","","","","","This place covers: Programming languages having constructs for expressing parallelism, e.g. Occam."
"G06F8/315","{Object-oriented languages}","","Object-oriented design paradigmsObject-oriented systemsMethod invocationDistributed object-oriented systemsObject-oriented databases","G06F8/24|G06F9/4488|G06F9/449|G06F9/465|G06F16/289","","","Methodthe action to be performed on (attributes of) an object","This place covers: Programming languages expressing algorithms as interacting objects, where an object is an aggregation of data (attributes) and actions (methods). Examples of object oriented languages are Smalltalk, Ruby, Eiffel, C++, C#, Java, Oberon, Modula."
"G06F8/316","{Aspect-oriented programming techniques}","","","","","","Aspect Weavingthe process of merging the different aspectsJoin Pointsthe actual places in the program where the aspects are merged","This place covers: Programming paradigm allowing different, orthogonal, aspects of a program (business rules, security, fault tolerance, data consistency) to be designed independently and to be merged later to produce a final source code product. Aspect-Oriented Software Development foresees a full and independent design for all the secondary aspects of an application like security, persistency, synchronization, logging, etc., carried out at the same time as the design of the core functionality of the application."
"G06F8/33","Intelligent editors","","Text processing","G06F40/10","","","","This place covers: Intelligent editors that help a programmer to write programs, e.g. language-sensitive editors. Examples: Proposing a closing bracket when an opening bracket is typed. Indenting of if-then-else statements. Verification of entered text (e.g. whether variables are already declared)."
"G06F8/34","Graphical or visual programming","","Use of icons for interactionIntelligent editorsDevelopment of GUIs, User Interface Management Systems (UIMS)Web page developmentCreating programs for controlling physical processes by graphically specifying the process to be controlledCreating relay ladder logic program for Programmable Logic controllers (PLC)Multimedia authoring","G06F3/048|G06F8/33|G06F8/38|G06F16/95|G05B19/0426|G05B19/056|G11B27/031","","","","This place covers: P programming techniques whereby a program is created by handling graphical programming objects representing programming constructs/statements rather than writing program text."
"G06F8/35","model driven","","","","","","","This place covers: Automatically generating program code (source code) from a specification/definition/model of what the program should do. Typical examples: WO0108007, WO02086704, EP0737918, WO0177882. Specific topics included: Generating a debugger from a formal specification: EP1071016; Generation of source code for web applications: WO0171566; Convert spreadsheet data into source code: US2003106040, US2004064470; Generate source code from XML: US2003167444; Generate a shader program from a graphics file: US2003179220; OMG's Model driven architecture (MDA)."
"G06F8/355","{Round-trip engineering}","","","","","","","This place covers: Arrangement for keeping a model and the corresponding program code in sync when applying changes to any of them."
"G06F8/36","Software reuse","","Exlining, i.e. finding similar sequences of code to replace them with a procedure invocationVersion control using repositoriesCode clone detection, i.e. detection of identical pieces of code for the purpose of maintenancePlagiarism detection in program code","G06F8/4436|G06F8/71|G06F8/751|G06F21/10","","","","This place covers: Storing and retrieving reusable software modules into and from software repositories; Building, searching and maintaining software repositories containing reusable software parts; Managing repositories of software components, objects; Storing software components into a repository, thereby indicating additional information about the components, e.g. the function performed, what inputs are required, what outputs are generated; Querying the repository to retrieve components that satisfy the particular requirements, e.g. related to its function; Detecting program parts that are candidates for reuse; Design patterns. Using APIs and interfaces, e.g. for components, to make software reusable."
"G06F8/37","{Compiler construction; Parser generation}","","Compilation per se","G06F8/41","","","Compiler Bootstrappingcreating a compiler using the language it is intended to compile","This place covers: Automatically generating a compiler or parser based on a specification of a grammar/syntax, e.g. Lex and Yacc. Generation of lexical analyzers."
"G06F8/38","for implementing user interfaces","","User interaction with graphical user interfacesDetails relating to the actual functioning of (graphical) user interfaces","G06F3/048|G06F9/451","","","","This place covers: The development and generation of source code for user interfaces, in particular GUIs."
"G06F8/40","Transformation of program code","","","","","","","This place covers: The transformation of program code from one form into another."
"G06F8/41","Compilation","","Compiler generatorsRuntime code conversion","G06F8/30|G06F9/455","","","Binary codea representation of a code understood by a machine","This place covers: The process of converting source code into binary code."
"G06F8/42","{Syntactic analysis}","","","","","","","This place covers: Determining grammatical structure of the source code with respect to a given formal grammar."
"G06F8/423","{Preprocessors}","","","","","","","This place covers: Processing language-external elements, e.g. compiler directives, macro definitions and macro expansions, and inclusion of library source files."
"G06F8/425","{Lexical analysis}","","","","","","","This place covers: Converting sequences of characters into tokens, skipping comments."
"G06F8/427","{Parsing}","","Parser generatorsParsing markup language streams","G06F8/37|G06F40/221","","","","This place covers: Checking for correct syntax and building a data structure, e.g. parse tree. Multibox parsers."
"G06F8/43","{Checking; Contextual analysis}","","","","","","","This place covers: Checking context-senstive conditions, e.g. whether variables have been declared."
"G06F8/433","{Dependency analysis; Data or control flow analysis}","","","","","","","This place covers: Determining the dependencies between different program parts (e.g. data dependencies, which variables/values are used in expressions, and control dependencies, which statements have influence on other statements), in particular to determine whether such program parts should be placed in a certain order."
"G06F8/434","{Pointers; Aliasing}","","","","","","","This place covers: Determining whether references, e.g. pointers, reference variables and indexed array elements, actually refer to the same underlying memory element."
"G06F8/436","{Semantic checking}","","","","","","","This place covers: Checking semantic conditions which can be determined without actual execution of the program, e.g. whether variables are initialized."
"G06F8/437","{Type checking}","","","","","","","This place covers: Checking type compatibility of values, variables, parameters and expressions."
"G06F8/44","{Encoding}","","","","","","","This place covers: Generating an executable implementation of the program for the target machine architecture, usually via an internal form that is independent of the source programming language and that is also independent of the target machine architecture."
"G06F8/441","{Register allocation; Assignment of physical memory space to logical memory space}","","","","","","Coalescingremoving useless copy instructions from a program. This needs information about assigned registers and therefore it is commonly performed as a subtask of register allocation besides spilling and register assignment.","This place covers: Assigning logical registers to variables, assigning physical register to logical registers, coalescing, spilling."
"G06F8/443","{Optimisation}","","Code refactoring","G06F8/72","Whenever an optimisation concerns speed, size, etc, such documents should be classified in the corresponding subgroups. In this group should be classified only special optimision techniques not present in any of the subgroups.Contains optimizations that do not involve a trade off between different factors (speed, size, energy consumptionInvolve a trade-off. They are specifically aimed to optimize one aspect, likely at the cost of another aspect., , ","G06F8/443|G06F8/4432|G06F8/4434|G06F8/4441","","This place covers: Optimisation of the program code; the program code can take any form e.g. source code, assembly code, machine code."
"G06F8/4432","{Reducing the energy consumption}","","Means for Saving Power, Power Management strategies","G06F1/3203","","","","This place covers: Optimisation methods specifically aimed at reducing the energy consumption of program code."
"G06F8/4434","{Reducing the memory space required by the program code}","","Data compression (e.g. PKZIP)","H03M7/30","Note that this group does not cover the compression of program code, which requires a decompression before it can be executed. Compression of program code in this sense does not result in the actual program being smaller; there is only a saving in the secondary storage or transmission via the network.In contrast, the size-reduced code covered by this group is directly executable, so no decompression is needed before execution.","","","This place covers: Optimisation methods specifically aimed at reducing the size of the program code, e.g. by replacing sequences of recurring instructions with a new macro instruction/superinstruction. Requires that the target architecture/virtual machine recognize this new instruction; Cross jumping; Tail Merging."
"G06F8/4435","{Detection or removal of dead or redundant code}","","","","","","Dead codecode that is never executed or that is unreachable.Redundant codecode that produces results that are never used or are irrelevant to the program execution or code that computes values that were already computed before.","This place covers: Detecting and removing of dead or redundant code. Redundancy elimination optimizations avoid repeated computation of the same value by computing the value once, saving it in a temporary variable, and reusing the value from the temporary variable when it is needed again. Examples of redundancy elimination optimizations include common subexpression elimination, loop invariant code motion and partial redundancy elimination."
"G06F8/4436","{Exlining; Procedural abstraction}","","Reuse, i.e. identifying recurring pieces of code for purposes of reuseInliningCode clone detection, i.e. detection of identical pieces of code for the purpose of maintenancePlagiarism detection in a source code","G06F8/36|G06F8/4443|G06F8/751|G06F21/10","","","","This place covers: Detecting recurring sequences of instructions and replacing each of them with a call to a procedure/function that contains those instructions."
"G06F8/4441","{Reducing the execution time required by the program code}","","","","","","","This place covers: Optimisation methods specifically aimed at improving the execution speed of the program."
"G06F8/4442","{Reducing the number of cache misses; Data prefetching  (cache prefetching G06F12/0862)}","G06F12/0862","","","","","","This place covers: Avoiding cache misses at run-time. Cache can be instruction or data cache. Splitting a program into frequently used and not frequently used parts (hot and cold parts) and keeping the hot parts in the cache. Rearranging the individual instructions in order to have data/instructions present in the cache when they are needed."
"G06F8/4443","{Inlining}","","Exlining","G06F8/4436","","","","This place covers: Replacing a procedure invocation with the instructions of the procedure, thus removing the cost of procedure invocation."
"G06F8/445","{Exploiting fine grain parallelism, i.e. parallelism at instruction level  (run-time instruction scheduling G06F9/3836)}","G06F9/3836","","","","","Schedulingreordering of instructions","This place covers: Increasing the Instruction Level Parallelism (ILP) that can be exploited by the hardware at run-time (pipelines, superscalar processors executing multiple instruction streams). Typically this is done by reordering the instructions (scheduling)."
"G06F8/4451","{Avoiding pipeline stalls}","","Hardware aspects of pipelining","G06F9/38","","","","This place covers: Reducing or avoiding run-time pipeline stalls. Pipeline stalls (or bubbles) are caused by control hazards – e.g. branches -, data hazards -one instruction depends on the result of another instruction and must wait for this instruction to finish- or resource hazards -there are not enough resources to serve all the instructions currently in flight - instructions must wait for resources to be freed in order to be fed to the pipeline.Control Hazards can handled by static branch-prediction, speculative execution or delayed branch. Data Hazards can be avoided by rearranging the instructions so that instructions that depend on each other's result are farther separated. In a pipeline, there is only one instruction stream. So the parallelism consists in the overlapping of the instructions of the stream rather than executing the instructions of 2 streams simultaneously."
"G06F8/4452","{Software pipelining}","","Hardware aspects of pipelining","G06F9/38","","","","This place covers: Software pipelining, e.g. Modulo Scheduling, transforms a loop described in a high-level programming language, such as C or FORTRAN, in such a way that the execution of successive iterations of the loop are overlapped rather than sequential. This technique exposes the instruction level parallelism (ILP) available between successive loop iterations to the compiler and to the processor executing the transformed code."
"G06F8/447","{Target code generation}","","Run-time compounding of instructions by the hardware","G06F9/3853","","","","This place covers: Generation of executable code from the optimized compiler-internal representation of the source code, taking the target machine architecture into account."
"G06F8/45","{Exploiting coarse grain parallelism in compilation, i.e. parallelism between groups of instructions}","","Exploiting fine grain parallelism","G06F8/445","","","","This place covers: Speeding up the execution of a single task by subdividing the task into a plurality of subtasks and having the subtasks executed simultaneously on different processors. The subtasks are interdependent and they work together to achieve the same goal as the original task."
"G06F8/451","{Code distribution  (considering CPU load at run-time G06F9/505; load rebalancing G06F9/5083)}","G06F9/505|G06F9/5083","","","","","","This place covers: Distributing the code of each of the subtasks to the available processors."
"G06F8/452","{Loops}","","Software pipeliningAllocation of resources to service a requestTechniques for rebalancing the load in a distributed system at run-time","G06F8/4452|G06F9/5005|G06F9/5083","","","","This place covers: Distributing iterations of parallelizable loops among the processors."
"G06F8/453","{Data distribution}","","","","","","","This place covers: Dividing the data used by the subtasks over the different processors."
"G06F8/454","{Consistency  (cache consistency protocols in hierarchically structured memory systems G06F12/0815)}","G06F12/0815","","","","","","This place covers: Ensuring data consistency between subtasks."
"G06F8/456","{Parallelism detection}","","Techniques and language constructs to create parallel programsData flow analysis, control flow analysis","G06F8/314|G06F8/433","","","","This place covers: Detecting parallelism in sequential programs, e.g. by making use of control flow and data flow information. In this group the burden to detect and extract parallelism is put on the compiler or another software tool. This contrasts with the  , where the burden of indicating parallelism is put on the programmer."
"G06F8/457","{Communication  (intertask communication G06F9/54)}","G06F9/54","","","","","","This place covers: Communication between subtasks, allowing the generated tasks to interact with each other, for example to pass parameters or to return results."
"G06F8/458","{Synchronisation, e.g. post-wait, barriers, locks  (synchronisation among tasks G06F9/52)}","G06F9/52","","","","","","This place covers: Synchronisation between subtasks."
"G06F8/47","{Retargetable compilers}","","Generating code for just one computing platform","G06F8/447","","","Retargetable compilera compiler that can relatively easily be modified to generate code for different CPU architectures.","This place covers: Compiler structure allowing for several source languages (multiple front ends) and/or several target machine architectures (multiple back ends). Some examples of techniques and compilers for this are: Architecture Neutral Data Format (ANDF); UCSD Pascal P-code; Universal Compiler Language (UNCOL); GCC - GNU Compiler Collection."
"G06F8/48","{Incremental compilation  (software reuse G06F8/36)}","G06F8/36","","","","","","This place covers: Recompiling only those parts of source code that are affected by a modification."
"G06F8/49","{Partial evaluation}","","Optimizing a method invocation based on the type of the receiving object","G06F9/4491","","","","This place covers: Specializing a program for some or all of its possible input values. Different flavours are: ""normal"" PE (partial evaluation): specialize program for certain values of its inputs ""predictive"" PE: predict the run-time values of some inputs and specialize the program accordingly. At run-time, check if the prediction was correct. If yes, execute it. If no, recompile using the actual values. ""multi-version"" PE: generate multiple specialized versions of the program corresponding to different inputs. At run-time choose the appropriate version. ""placeholder"" PE: specialize the program for the known inputs. For the unknown inputs, provide placeholders, that will be filled in at run-time."
"G06F8/51","Source to source","","Source to binary translationPreprocessorsOptimisation of source codeBinary to binary translationPorting; modifying the source code of the application in order to adapt it to new/changed requirementsPorting source code to a different environment","G06F8/41|G06F8/423|G06F8/443|G06F8/52|G06F8/76|G06F8/76","","","","This place covers: Translating program code from a first high level programming language to a different second high-level programming language (e.g. from Java to C++). This transformation is independent of the target processor."
"G06F8/52","Binary to binary","","Source to source translationBinary to source translation","G06F8/51|G06F8/53","","","","This place covers: Static translation (i.e. pre-run-time) of binary code from one architecture to a different architecture. This group covers the following forms of static binary code translation: Binary to binary Intermediate bytecode to another intermediate bytecode (e.g. Java bytecode, p-code)"
"G06F8/53","Decompilation; Disassembly","","Reverse engineeringProtecting software against software analysis or reverse engineering, e.g. by code obfuscation","G06F8/74|G06F21/12","","","","This place covers: Transformation of executable code into source code or assembly code."
"G06F8/54","Link editing before load time","","Dynamic linking, i.e. linking at or after load time, during run-time","G06F9/44521","","","","This place covers: Statically linking modules before load-time in order to create executable binary code."
"G06F8/60","Software deployment","","Installation and upgrade of device drivers Network bootingProgram loading or initiatingFault tolerant update or installation. For example when an error occurs during software upgrade, the system is rebooted and restored to the state before installation.Secure aspects of licensing; Try and buy software Arrangements in connection with the implantation of stimulators; Changing the program; Upgrading firmware Downloading information (also software) into vehicles Personalization of smart card applications Download/install/upgrade software in mobile communication devices Multimedia set-top boxes under program control ","G06F9/4411|G06F9/4416|G06F9/445|G06F11/1433|G06F21/10|A61N1/37264|G07C5/008|G07F7/10|H04M1/72406|H04N21/42204","","","","This place covers: Installation and updating of computer software Methods that make the installation/update of software program transparent, automatic and user-friendly, both to the end-user and the network administrator. Methods that automatically select which programs should be updated, when and how this should happen, and where old and new programs should be located Updating or installing software based on physical location of the target device."
"G06F8/61","Installation","","Loading of device drivers","G06F9/4411","","","Installationsetup, deployment","This place covers: First-time installation of software. Unattended installation, installation scripts (answer file). Installation packages (containing list of files, program image, files itself, install/update instructions). Network installation plans. Type of installations. Silent installation - no display of the progress of the installation. Unattended installation - installation performed without user interaction. Self installation - unattended installation without the need of initial launch of the process. Headless installation - installation performed without using a monitor connected to the destination computer. Clean installation - cleaning up a destination partition (formatting) before actual installation. Flat installation - first copying installation files from a media to a hard disk and then installing them from the hard drive. Network installation - installation of a program from a shared network drive. Virtual installation - performing a virtual installation to check for errors before committing the real installation."
"G06F8/62","{Uninstallation}","","Unloading program code from executable memoryGarbage collection","G06F9/445|G06F12/0253","","","","This place covers: Removing software and all its related components. Uninstallation of software i.e. removing software and all its related components, without interfering with the operation of other software; Undoing installations/update. Rollback, reverting to a previous installation/update status. Requires the use of some kind of log file."
"G06F8/63","{Image based installation; Cloning; Build to order}","","Software billing","G06Q30/00","","","","This place covers: Installation of whole systems by copying disk images to target systems, Cloning installed systems."
"G06F8/64","{Retargetable}","","Retargetable compilationRetargetable program loading","G06F8/47|G06F9/44542","","","","This place covers: Installation or update explicitly taking into account hardware characteristics of the target."
"G06F8/65","Updates  (security arrangements therefor G06F21/57)","G06F21/57","Error handling during software upgradeSynchronizing cachesReplication of documents/filesSoftware upgrading/downloading on mobile terminals","G06F11/1433|G06F12/00|G06F16/184|H04M1/72406","","","","This place covers: Updating of existing software, i.e. modifying already installed software to a desired version. Being informed of new software that has become available in order to update including installation for the update. Synchronization of software of disconnectable devices after their reconnection to the network automatically upgrading software to the correct version. Transparent update (e.g. after boot, after update becomes available, regular check for updates,…) User-initiated update."
"G06F8/654","using techniques specially adapted for alterable solid state memories, e.g. for EEPROM or flash memories","","Update program code stored in non-alterable ROMChanging the capability of a processor by loading new microcode, e.g. representing a different instruction setSecure firmware programmingLow level details of writing to solid-state storage","G06F8/66|G06F9/24|G06F21/572|G11C16/10","","","","This place covers: Updating software stored in non-volatile, alterable, solid-state storage, e.g. flash or EEPROM. In place updating"
"G06F8/656","while running","","Power plants, Industrial process controllersTelecommunication systems","G05B19/042|H04Q3/545","","","","This place covers: Updating software while it is executing or running Specific topics included: Hot-plugging of new software into a running system Run-time adaptation of the functionality of executable code by relinking to new code modules"
"G06F8/658","Incremental updates; Differential updates","","Updating remote displays by only transmitting differencesComparing a list of software actually installed on a device and a list of software that should be installed on a device; identify software not installed that should be installed on install this software on the deviceDelta for version control systemsDelta in the context of file systemsCalculation of difference between filesCompression in general","G06F3/1454|G06F8/61|G06F8/71|G06F16/1767|G06F40/194|H03M7/30","","","","This place covers: Update methods explicitly demonstrating how a new version of software is created from an old version and update instructions and/or differential data. The simplest way to update a piece of software from a first version to a second version is to remove the first version in its entirety and replace it by the entire second version. This method, although conceptually simple, is highly inefficient, especially in the case where the second version differs only slightly from the first version: It is always necessary to provide the target with the entire second version; if a network is involved, this puts a high burden on the network It might take a long time to perform the update because the entire first version has to be deleted and the entire second version has to be written. This group tackles this problem in that the update is performed by using the existing instance of the first version as a basis and to generate the instance of the second version therefrom. The scope of the group can thus be described as dealing with the details of how to modify an existing instance of the first version in order to arrive at the second version. Typically, the second version is created by only changing those parts of the first version that actually change. This can be accomplished by creating a difference file (delta) that describes the differences of the second version with regards to the first version. The delta is provided to the target and applied to the first version thus yielding the second version. This delta can be passive - the delta is applied by an updater - or active -the delta contains instructions to actually perform the update. Incremental update more generally refers to details of the steps involved to convert one piece of software into another. Differential update is more specific and explicitly uses differences between the two pieces of software."
"G06F8/66","{of program code stored in read-only memory [ROM]}","","","","","","","This place covers: Updating software that is stored in non-alterable ROM."
"G06F8/70","Software maintenance or management","","","","","","","This place covers: Adapting the code of a program in response to new requirements, changes to the environment, detection of bugs, etc. When new functionality is required, analysing the code in order to find the points to edit; generating new code, and incorporating it into the application"
"G06F8/71","Version control  (security arrangements therefor G06F21/57); Configuration management","G06F21/57","Dependency analysis in compilersDealing with different versions of software in the context of software updating, Configuration of peripheral devicesConfiguration in the sense of changing parametersVersion control for text documents","G06F8/433|G06F8/65|G06F8/658|G06F9/4411|G06F9/44505|G06F40/197","","","","This place covers: Version control, administering version numbers and releases. Deals with the problem of managing a modular software system: keeping track of the changes and the different version of the modules, the interrelation between the modules, the effects of the changes of one module on the other modules, the problem of multiple users editing different modules. Includes in particular : Make, Build Analysing changes to/conflicts between sources SCCS-like tools Dependency analysis Comparing/obtaining dates of last changes of sources/intermediates/targets; CVS - Concurrent Version Control, SVN, GIT, ..."
"G06F8/72","Code refactoring","","","","","","Code Refactoringthe process of changing software such that the changes do not alter the external behavior of the code, yet improve the internal code structureRe-engineeringIn contrast to reverse engineering","This place covers: Applying any change to a computer program's code which improves its readability or simplifies its structure without changing its results. In software engineering, ""refactoring"" a source code module often means modifying the module without changing its external behavior, and is sometimes informally referred to as ""cleaning it up"". Code refactoring can be considered the design-time equivalent of code optimization ( ). Code refactoring is concerned with improving the structure of the code in view of easier maintenance whereas code optimization is concerned to make the code better for a particular aspect (speed, size, energy)."
"G06F8/73","Program documentation","","","","","","","This place covers: Augmenting program code with additional information in order to increase its understandability in view of easier maintenance. Documenting program code, inserting comments in source code."
"G06F8/74","Reverse engineering; Extracting design information from source code","","When the reverse engineering is performed in the context of binary to binary translationDecompilation and dissassemblyProtecting software against software analysis or reverse engineering, e.g. by code obfuscation","G06F8/52|G06F8/53|G06F21/14","","","","This place covers: Reverse engineering of HLL source code to its underlying design, model."
"G06F8/75","Structural analysis for program understanding","","Analysing program code in order to identify reusable program partsMonitoring program code execution ","G06F8/36|G06F11/34","","","","This place covers: Static analysis of the structure of program code."
"G06F8/751","{Code clone detection}","","Reuse, i.e. identifying recurring pieces of code for purposes of reuseExlining, i.e. finding similar sequences of code to replace them with a procedure invocationPlagiarism detection for source code","G06F8/36|G06F8/4436|G06F21/10","","","","This place covers: Detecting code clones, e.g. introduced as a result of copy & paste by the programmer."
"G06F8/76","Adapting program code to run in a different environment; Porting","","","","","","","This place covers: Adapting program code to run in a different environment, i.e. a different architecture or operating system."
"G06F8/77","Software metrics","","Measuring certain characteristics of a program in view of debugging","G06F11/362","Not to be confused with  , which deals with measuring certain characteristics of a program in view of debugging.","G06F11/362","","This place covers: Measurement of software metrics related to a software development project, such as product metrics and process metrics."
"G06F8/78","{Methods to solve the ""Year 2000"" [Y2K] problem}","","","","","","","This place covers: The Year 2000 problem, i.e. adapting software so as to comply with a not-foreseen date format."
"G06F9/00","Arrangements for program control, e.g. control units  (program control for peripheral devices G06F13/10)","G06F13/10","Arrangements for development of programs; Software engineeringProgram control in regulating or control systems","G06F8/00|G05B","Note for use of these definitions:In the sub-groups of  there are rules of classification which differ from the rules of the IPC, and are specified in this section.The sub-groups mentioned under ""Informative references""; ""Limiting references"" and ""Relationship between large subject matter areas"" are to be taken as indicators as to where the document to be classified may be forwarded or circulated for classifiying.Specific combinations or conventions of classification are mentioned under ""Special rules of classification"".","G06F9/00","","This place covers: Program control for general purpose computers. Runtime execution of programs."
"G06F9/02","using wired connections, e.g. plugboards","","","","Not currently used, as old technology.","","",""
"G06F9/04","using record carriers containing only program instructions  (G06F9/06 takes precedence)","G06F9/06","","","Not currently used, as old technology.","","",""
"G06F9/06","using stored programs, i.e. using an internal store of processing equipment to receive or retain programs","","Program control for machine tools using a digital processor ","G05B19/042","","","","This place covers: Programming arrangements for computers having a stored program. Covers execution of stored programs, and arrangements therefor."
"G06F9/22","Microcontrol or microprogram arrangements","","Execution of machine instructions ","G06F9/30","Precedence and classification rules:The classification rules for subgroups  -  is different from those used in  and subgroups.All aspects disclosed in a document which are deemed useful for search receive a class, not just the subject matter of the invention. Hence multiple subgroups are to be used.There is no distinction made between invention and additional subject matter, and the classes for additional subject matter are not used.A single lower level group is given if appropriate. A higher level group is given for documents having features belonging to multiple subgroups.","G06F9/22|G06F9/28|G06F9/30","Microprogram internal set of instructions used to translate a machine instruction of the stored program into a series of control signals. The microprogram is usually fixed at runtime, and defines the operations of the processor. Changing the microprogram changes the functionality of the processor, i.e. what type of operations it can carry out, and how these are carried out.Nanoinstructionsinstructions of a level lower than microinstructions i.e. multiple nanoinstructions are used to execute a microinstruction.","This place covers: Arrangements for executing microcode in general. A next instruction of the program, when fetched from program store, is translated into lower level microinstructions, usually by using the instruction to index into a microprogram or control memory to fetch a series of microinstructions which are then decoded to obtain control signals to carry out the function of the machine instruction."
"G06F9/223","{Execution means for microinstructions irrespective of the microinstruction function, e.g. decoding of microinstructions and nanoinstructions; timing of microinstructions; programmable logic arrays; delays and fan-out problems}","","","","","","","This place covers: Microinstruction execution aspects independent of the type of microinstruction, e.g. decoding of microinstructions; timing. Includes PLAs used as sequencers for microcode."
"G06F9/226","{Microinstruction function, e.g. input/output microinstruction; diagnostic microinstruction; microinstruction format}","","","","","","","This place covers: Specific types of microinstruction operations. Microinstruction set, microinstruction format."
"G06F9/24","Loading of the microprogram","","","","","","","This place covers: Loading of microcode implying altering the processor functionality; Changing the processor operations by loading or modifying microcode in the control store, thereby altering the way in which instructions are implemented in microcode; Fetching control microcode from ROM into RAM for execution; Patching by loading new microcode. Usually implemented by substituting the microcode at a particular instruction address in the microstore by a correct version during instruction fetching."
"G06F9/26","Address formation of the next micro-instruction  (G06F9/28 takes precedence){; Microprogram storage or retrieval arrangements}","G06F9/28","","","","","","This place covers: microinstruction addressing arrangements; sequencers for microcode; microinstruction storage, and microinstruction retrieval or fetching."
"G06F9/261","{Microinstruction address formation}","","","","","","","This place covers: Formation of the microinstruction address e.g. using lookup table."
"G06F9/262","{Arrangements for next microinstruction selection}","","","","","","","This place covers: Retrieval of the next microinstruction"
"G06F9/264","{Microinstruction selection based on results of processing}","","","","","","","This place covers: Address formation of the next microinstruction by selection according to the results of processing. Next microaddress or microinstruction derived directly from the program flow, e.g. program counter, branch."
"G06F9/265","{by address selection on input of storage}","","","","","","","This place covers: Address formation of the next microinstruction by selection of address on input of storage. Selecting at the input to the control store, which address to use, and therefore which microinstruction is retrieved."
"G06F9/267","{by instruction selection on output of storage}","","","","","","","This place covers: Address formation of the next microinstruction by selection of microinstruction on output of storage. Inputting several addresses into the control store, and selecting at the output of the control store which microinstruction to execute."
"G06F9/268","{Microinstruction selection not based on processing results, e.g. interrupt, patch, first cycle store, diagnostic programs}","","Patching by microcode loadingAddress formation of the next machine instruction for runtime patching","G06F9/24|G06F9/328","","","Patchingrepairing errors of microcode in read-only storage. Usually implemented by substituting the microcode at a particular address in the microstore by a correct version during fetching.Interruptchanging execution flow in response to an (external) event which must be handled with a higher priority.","This place covers: Address formation of the next microinstruction by selection not based on the results of processing. Selecting next microaddress or microinstruction not derived directly from the program flow, e.g. interrupt, patching."
"G06F9/28","Enhancement of operational speed, e.g. by using several microcontrol devices operating in parallel","","","","Takes precedence over other sub-groups of .","G06F9/22","","This place covers: Means to improve speed of microcode execution e.g. dual control stores. Parallel or concurrent execution of microinstructions."
"G06F9/30","Arrangements for executing machine instructions, e.g. instruction decode  (for executing microinstructions G06F9/22)","G06F9/22","","","These rules of classification apply to the group  and subgroups:All aspects disclosed in a document which are deemed useful for search are classified.There is no distinction made between invention and additional subject matter.Note that combinations of subgroups are possible from different hierarchy levels, or from the same level within the hierarchy.The following IPC subclasses are not used in this classification scheme, but are covered by the subgroups listed here:IPC group  covered by CPC group ; IPC group  covered by CPC group ; IPC group  covered by CPC group ; IPC group  covered by CPC group ; IPC group  covered by CPC group ; IPC group  covered by CPC group .","G06F9/30|G06F9/302|G06F9/3001|G06F9/305|G06F9/30029|G06F9/308|G06F9/30018|G06F9/312|G06F9/30043|G06F9/315|G06F9/30032|G06F9/318|G06F9/30181","Machine instructions Executable instructions of the processor, which can be decoded to obtain control signals",""
"G06F9/30003","{Arrangements for executing specific machine instructions}","","Multiple parallel functional units executing instructions","G06F9/3885","In the subclasses of , if the execution of the machine instruction includes special arrangements for the setting of a condition code or flag, then also use .In the case of a single machine instruction which carries out a combination of operations, use a subclass for each operation.In the subclasses hereof, the terms in capitals which are used as examples, refer to well-known types of instructions characteristic to that subclass.","G06F9/30003|G06F9/30094","Machine instructions instructions executable by the processor, which can be decoded to obtain control signals","This place covers: Execution of specific individual machine instructions. Adaptation of hardware, and hardware control, to carry out the execution of a specific machine instruction. Special purpose instructions, being instructions not classifiable under subclasses."
"G06F9/30007","{to perform operations on data operands}","","Specific instruction for operation on memory operands","G06F9/3004","","","","This place covers: Specific instruction to perform operation between input data operands, usually returning an output data operand as the result."
"G06F9/3001","{Arithmetic instructions}","","","","","","","This place covers: Specific arithmetic instruction for example adding, multiplying, multiply accumulate. Includes how to select the specific operation to execute in an ALU."
"G06F9/30014","{with variable precision}","","Multiple arithmetic units executing an instruction in tandem or cascaded","G06F9/3893","","","","This place covers: Arithmetic operation where the bit width operated on may be variable. Bit-sliced arithmetic operation."
"G06F9/30018","{Bit or string instructions; instructions using a mask}","","","","","","","This place covers: Specific instruction for operation on a series of connected bits, bytes or characters, for example using a mask to select certain portions of a data string. Examples include the EDIT instruction which alters a portion of a character string, or a Find-First-One instruction which detects the position of the first '1' in a string of bits. Includes cyclic redundancy check instructions."
"G06F9/30021","{Compare instructions, e.g. Greater-Than, Equal-To, MINMAX}","","","","","","","This place covers: Specific instruction for comparison between two operands. Includes matching, greater/less than, minmax instruction."
"G06F9/30025","{Format conversion instructions, e.g. Floating-Point to Integer, decimal conversion}","","Data re-arranging instruction, e.g. Shuffle, Permute","G06F9/30032","","","","This place covers: Specific instruction for conversion from one data format to another. Includes Endian conversion; Conversion between integer and floating-point; Decimal conversion instructions."
"G06F9/30029","{Logical and Boolean instructions, e.g. XOR, NOT}","","","","","","","This place covers: Specific instruction for logical operation or combination."
"G06F9/30032","{Movement instructions, e.g. MOVE, SHIFT, ROTATE, SHUFFLE}","","Instruction for operation on string operandsInstructions for format conversion operationsInstruction for operation on memory operands","G06F9/30018|G06F9/30025|G06F9/3004","","","Moveinstructions to pass data between memory locations, or between registers, without operating on the data. Shiftinstructions to move data in a serial fashion from one location to another, where the distance moved is usually less than a word, e.g. shifting data within a register by a few bits.Rotateinstructions which are shift instructions where the bits shifted serially out are inserted into the location at the opposite end.Permute or Shuffleinstruction which intermingles parts of a datum to produce a new datum.","This place covers: Specific instruction for moving, rearranging, or operating on data within a register. Examples include : Move instruction which transfers data between registers; Permute instruction which changes the order of data in a register; Rotate or Shift instruction which moves bits or bytes within a register."
"G06F9/30036","{Instructions to perform operations on packed data, e.g. vector operations}","","Multiple functional units executing an instruction in parallel","G06F9/3885","This subclass may be used in combination with other subclasses of , according to the operation performed.","G06F9/30007","","This place covers: Specific instruction operating on multiple data stored in a single register, thereby effecting a SIMD operation. Includes instructions operating on vector data."
"G06F9/3004","{to perform operations on memory}","","Specific instruction for data operation","G06F9/30007","For atomic memory operations use in combination with serialisation control instructions , and possibly  for memory consistency.","G06F9/30087|G06F9/3834","","This place covers: Specific instruction for operation on memory operands in general. Specific instruction for control operation on memory. Memory to memory Move instruction. Stack instructions POP, PUSH Table lookup instructions. A combination of a memory operation and further operation e.g. atomic memory operations such as read-modify-write, test-and-set. Register allocation instructions."
"G06F9/30043","{LOAD or STORE instructions; Clear instruction}","","","","Register reset or clear instructions are also found here.For atomic memory operation use also serialisation control operation .For Load Multiple when executed as an iterative instruction use also .","G06F9/30087|G06F9/30065","","This place covers: Specific instruction to read or write data from a memory location, e.g. LOAD, STORE, Load Multiple. Specific instruction to clear or reset a memory location, e.g. CLEAR. Register reset or clear instructions are also found here. Table look-up instructions. Context saving or restoring instructions."
"G06F9/30047","{Prefetch instructions; cache control instructions}","","","","","","","This place covers: Specific instruction for control data or instruction prefetching from memory, e.g. Hint instruction. Specific instruction to control cache operation, e.g. Cache Flush."
"G06F9/3005","{to perform operations for flow control}","","","","","","","This place covers: Specific instruction to control program flow in general. Execution of an instruction to select a next instruction other than the next sequential instruction, e.g. for branching. Execution of an instruction for facilitating branching, e.g. Prepare-To-Branch instruction. Includes specific instruction for monitoring or tracing program flow e.g. breakpoint instruction; flow signature instruction."
"G06F9/30054","{Unconditional branch instructions}","","","","Only to be used when there is subject matter relating to special adaptations or details of handling of a branch instruction.","","","This place covers: Special adaptations to execute a specific instruction which branches to a target address independent of any condition. Examples of unconditional branch instructions are CALL, GOTO insofar as these are unconditional."
"G06F9/30058","{Conditional branch instructions}","","","","Only to be used when there is subject matter relating to special adaptations or details of handling of a branch instruction.","","","This place covers: Specific instruction which causes branching to a target address dependent on a runtime condition, else continues execution with the next sequential instruction. Includes IF-THEN-ELSE constructions."
"G06F9/30061","{Multi-way branch instructions, e.g. CASE}","","","","","","","This place covers: Specific instruction which causes a branching to one of several alternative target addresses depending on a runtime condition. Instruction which branches to a variable target address, e.g. indirect (register specified) branch target address,"
"G06F9/30065","{Loop control instructions; iterative instructions, e.g. LOOP, REPEAT}","","Address formation for loops, loop detectionLoop buffering ","G06F9/325|G06F9/381","","","","This place covers: Specific instruction used for loop control, e.g. specific loop start or end instructions. Specific instruction which is repeatedly executed, thereby forming a (short) loop."
"G06F9/30069","{Instruction skipping instructions, e.g. SKIP}","","Conditional branch instructionSingle instruction skip as conditional execution.","G06F9/30058|G06F9/30072","","","","This place covers: Specific instruction which causes a number of instructions to be skipped i.e. not executed, thus effecting a (short) forward branch, e.g. SKIP. A skip of a single instruction is regarded as conditional instruction execution, not skipping."
"G06F9/30072","{to perform conditional operations, e.g. using guard}","","Conditional branch instructionMultiple instruction skipping for forward branch.Instruction which executes differently according to a mode","G06F9/30058|G06F9/30069|G06F9/30189"," has precedence.May be used in combination with other sub-groups of the  according to the operation performed by the conditional instruction, e.g. conditional MOVE in combination with .","G06F9/30058|G06F9/30003|G06F9/30032","Conditional dependent on a runtime condition or operational status.Guarda tag indicating a condition which is assigned to an instruction. According to the outcome of the condition evaluation, the instruction is executed or skipped. Often assigned by the compiler to avoid branchesPredicatesame meaning as 'guard'","This place covers: Specific instruction for conditional operation depending on a runtime condition, which are not for control of program flow. The operation carried out depends on a runtime condition, for example ADD or SUBTRACT depending on the value of the sign bit. Another example is a MOVE which is executed or not depending on a runtime condition. Includes instructions which are executed conditional on a predicate or guard. Includes conditional instructions in a branch shadow."
"G06F9/30076","{to perform miscellaneous control operations, e.g. NOP}","","Specific instruction for program flow control NOP used as a pipeline delay instruction, ","G06F9/3005|G06F9/30079","","","","This place covers: Specific instruction for operation control in general. Includes mode switching instruction. Specific instruction for instruction execution control in general. Includes mode switching instruction. NOP instructions are here, but multicycle NOPs are considered pipeline delay control instructions, and are in  ."
"G06F9/30079","{Pipeline control instructions}","","","","","","","This place covers: Specific instruction to control an instruction pipeline, e.g. HALT, FLUSH Instructions for variable delay of pipeline or execution, e.g. multicycle NOP."
"G06F9/30083","{Power or thermal control instructions}","","","","","","","This place covers: Specific instruction to control power consumption or thermal aspects of the processor, e.g. SLEEP."
"G06F9/30087","{Synchronisation or serialisation instructions}","","Program synchronisation ; Mutual exclusion ","G06F9/52","For atomic memory operations use also .For barrier or fence instructions use also .For synchronisation instruction which affects the execution of a thread use also .","G06F9/3004|G06F9/3834|G06F9/3009","","This place covers: Specific instruction to control serialisation of instruction execution; to control synchronisation of instruction execution. Includes specific instructions used to implement memory locks; barriers. Includes instructions to facilitate atomic execution."
"G06F9/3009","{Thread control instructions}","","","","","","","This place covers: Specific instruction to control multi-threading; starting and stopping threads, e.g. FORK; JOIN."
"G06F9/30094","{Condition code generation, e.g. Carry, Zero flag}","","Execution mode flags","G06F9/30189","","","","This place covers: Special arrangements for the generation or storage of runtime conditions, e.g. flags; status register."
"G06F9/30098","{Register arrangements}","","Register address space extensionRegister renaming","G06F9/30138|G06F9/384","","","Registerset of one-bit storages, e.g. latches, accessed in parallelRegister fileset of registers. May be implemented in a single or in multiple memories","This place covers: Groups of registers; register files. Register file addressing; addressing partial registers. Accessing register file e.g. contention."
"G06F9/30101","{Special purpose registers}","","Program counter registers","G06F9/321","Only to be used when there is subject matter relating to special adaptations or details of use of a special purpose register.","","","This place covers: Special adaptation of the use of single or multiple registers for a dedicated purpose, not being general purpose registers. May not be part of the register file. Examples include particular use of dedicated address register, control register, status register, condition code register, Top Of Stack register."
"G06F9/30105","{Register structure}","","","","","","","This place covers: Details of the structure of an individual register. Registers having associated bits e.g. valid bits, tags, flags."
"G06F9/30109","{having multiple operands in a single register}","","Multiple registers used for variable length operands","G06F9/30112","","","","This place covers: Registers which are logically partitioned into multiple operands, e.g. for packed data."
"G06F9/30112","{for variable length data, e.g. single or double registers}","","Partitioned registers for multiple operands, e.g. packed data","G06F9/30109","","","","This place covers: Register structure for variable length operands i.e. variable length data can be stored. Use of partial registers for short data. Combinations of registers for longer or higher precision data, e.g. by concatenation. Accessing of variable length registers."
"G06F9/30116","{Shadow registers, e.g. coupled registers, not forming part of the register space}","","","","Use in combination with  for shadow register set used for another context.","G06F9/30123","Register space the address space used by registers i.e. the range of program addressable register locations.","This place covers: Registers which cannot be addressed by an instruction, and hence are invisible to the architecture. Register with an associated copy, e.g. for saving of architectural state."
"G06F9/3012","{Organisation of register space, e.g. banked or distributed register file}","","","","Register banks for register space extension use .Register banks for context data use .","G06F9/30138|G06F9/30123","Register space logical address space for registers, i.e. the range of addresses defined by a register specifier","This place covers: The physical or logical organisation of the register space in general. Includes partitioned, distributed or banked register files, e.g. per execution unit. Local and global register files."
"G06F9/30123","{according to context, e.g. thread buffers}","","","","Use in combination with  for shadow register set used for another context.","G06F9/30116","Context dataoperands and data representing the architectural state of a context, and which needs to be saved on a context switch","This place covers: Organisation of sets of registers used for storing the data of a particular context, e.g. local variables. Includes thread buffers used to hold the context of a thread, and forming part of an instruction stream."
"G06F9/30127","{Register windows}","","","","","","Register windowset of contiguous registers used to implement a window to hold context data","This place covers: Organisation of sets of registers used to implement register windows. May have a pointer to the first window location, which may be used as a base address. Used for example for fast context switching, by moving from a current window to a next window."
"G06F9/3013","{according to data content, e.g. floating-point registers, address registers}","","","","","","","This place covers: Organisation of sets of registers used to store different types of data. Includes address registers, Boolean registers, floating point registers, parameter registers."
"G06F9/30134","{Register stacks; shift registers}","","Special purpose register for TOS pointer","G06F9/30101","","","Register stackcontiguous set of register locations used to implement a stack. May be implemented as a shift registerShift registerregister which shifts its contents in a bit-parallel fashion into an adjacent register.","This place covers: Register stacks are a series of register locations implementing a stack. The register stack is addressable generally using a register containing the Top-of Stack pointer. Writing to the TOS location implies adding an entry to the top of the stack, reading implies removing an entry from the top of the stack. The implementation of stack read/write operation in a register stack may involve physically shifting the entries in the queue up or down using shift registers; or alternatively may involve incrementing or decrementing the TOS pointer to access the next or previous register. Details of shift registers implementing a FIFO buffer are also found here."
"G06F9/30138","{Extension of register space, e.g. register cache}","","","","","","","This place covers: Increasing or decreasing the number of available addressable locations in register address space, e.g. more or less physical registers than logical registers, register cache. Extension of register address length e.g. using indexing."
"G06F9/30141","{Implementation provisions of register files, e.g. ports}","","","","","","Bypass pathdirect connection between a register file input and output.","This place covers: Hardware implementation of register files. Register file port architecture; address or data ports. Internal bypass path of register files. Adaptations of register file hardware for particular problems, e.g. for power saving; for fault tolerance. Includes transposing register file being accessible vertically or horizontally."
"G06F9/30145","{Instruction analysis, e.g. decoding, instruction word fields}","","Runtime instruction translation","G06F9/3017","Runtime instruction translation using a decoder is classified under  and sub-groups, even if this involves decoding, since the purpose is translation.","G06F9/3017","RISC Reduced Instruction Set Computer. Architecture having set of simple instructions which are decoded into direct control signals, and which take a single cycle to execute. CISC Complex Instruction Set Computer. Architecture having set of complex instructions which are decoded into internal (native; microcode) instructions, and which may take multiple cycles to execute. ","This place covers: Decoding of instructions in general, of opcode in particular. Instruction format, instruction encoding. Instruction set as a whole."
"G06F9/30149","{of variable length instructions}","","Instruction pre-fetching when instruction length is variable, e.g. line-crossing fetch; alignment in instruction buffer","G06F9/3816","","","VLIinstructions of varying lengths","This place covers: Decoding of variable length instructions. Includes instruction where the relative length of operation and operand part is variable. Ensuring a whole instruction is decoded. Parsing VLI instructions."
"G06F9/30152","{Determining start or end of instruction; determining instruction length}","","Pre-decoding of instructions","G06F9/382","","","VLIinstructions of varying lengths","This place covers: Arrangements for determining and/or marking the boundaries of a variable length instruction; Special arrangements for determining the length of a variable length instruction other than by decoding the length."
"G06F9/30156","{Special purpose encoding of instructions, e.g. Gray coding}","","Runtime instruction translation for compressed or encrypted instructions","G06F9/30178","Use in combination with  for decompression by translation, or with  for format field decoding for VLIW.","G06F9/30178|G06F9/3822","","This place covers: Instruction encodings to achieve a secondary effect, e.g. power saving, saving memory space, security, fault tolerance."
"G06F9/3016","{Decoding the operand specifier, e.g. specifier format}","","Decoding the opcode of instructions","G06F9/30145","","","","This place covers: Decoding operand fields of instructions; Format of operand fields of instructions."
"G06F9/30163","{with implied specifier, e.g. top of stack}","","","","","","","This place covers: Instruction format which is shorter by having operand specifier field(s) missing but implied, e.g. Top of Stack, accumulator, dedicated register."
"G06F9/30167","{of immediate specifier, e.g. constants}","","","","","","Immediatedata in an instruction to be used directly as an operand, e.g. without storing in a registerConstantsame meaning as 'immediate'","This place covers: Decoding of immediate operand specifiers or constants; Concatenation of immediates; Buffering of immediates."
"G06F9/3017","{Runtime instruction translation, e.g. macros}","","Decoding of instructions","G06F9/30145","","","MacroAn opcode which is an alias for a series of instructions, i.e. a function; Non-native instruction; An instruction which is not executable in the architecture of the processor.","This place covers: Runtime translation of an instruction by decoding an instruction which is non-native, to produce an executable instruction or set of instructions. The decoding of instructions into microinstructions, being of a lower level, is not meant. Includes altering the format or encoding of the input instruction, e.g. length of fields. Includes translating a single instruction into multiple executable instructions, or the reverse (macro formation)."
"G06F9/30174","{for non-native instruction set, e.g. Javabyte, legacy code}","","","","","","Non-native instruction setset of instructions intended to execute on a different architecture, which cannot run without translation or reformatting. Legacy code may be considered non-native.Non-native instructionan instruction which is not executable in the architecture of the processor.","This place covers: Runtime translation of a non-native instruction into an executable instruction using hardware means, e.g. decoder, look-up table."
"G06F9/30178","{of compressed or encrypted instructions}","","Special encoding of instructions for saving memory or power.","G06F9/30156","","","","This place covers: Runtime translation of an encrypted or compressed instruction into an instruction which can be executed."
"G06F9/30181","{Instruction operation extension or modification}","","Execution unit with adaptable datapath for complex operation","G06F9/3897","","","","This place covers: Modification or extension of the execution of an instruction in general. Modifications to the instruction itself, or to the architecture, which increase the number of operations available to the architecture."
"G06F9/30185","{according to one or more bits in the instruction, e.g. prefix, sub-opcode}","","","","","","","This place covers: Modification of the operation of an instruction according to one or more bits comprised in the instruction."
"G06F9/30189","{according to execution mode, e.g. mode flag}","","Mode switching instruction","G06F9/30076","","","","This place covers: Modification of the operation of an instruction according to a mode of operation, e.g. mode flag."
"G06F9/30192","{according to data descriptor, e.g. dynamic data typing}","","","","","","","This place covers: Modification of the operation of an instruction according to a data type descriptor, e.g. dynamic data typing."
"G06F9/30196","{using decoder, e.g. decoder per instruction set, adaptable or programmable decoders}","","","","","","","This place covers: Modification of the operation of an instruction using more than one decoder, or a decoder which is adaptable. Extension of the instruction set using multiple decoders for multiple instruction sets."
"G06F9/32","Address formation of the next instruction, e.g. by incrementing the instruction counter  (G06F9/38 takes precedence)","G06F9/38","Subprogram jump","G06F9/4486","","","","This place covers: Selecting or calculating the next instruction address. Sequencers for machine instructions."
"G06F9/321","{Program or instruction counter, e.g. incrementing}","","","","","","Program countera dedicated register which holds the address of the current instruction in the program sequence","This place covers: Incrementing/decrementing means for the program counter. Selection of next PC from pre-calculated constant values, e.g. +1, +2, 0, -1. PC arrangements, e.g. multiple PCs."
"G06F9/322","{for non-sequential address}","","","","","","PC address formationaddress calculation, i.e. address selection","This place covers: Address formation, or selection, for the next instruction, being a non-sequential address. Address calculation or selection, for the execution of branch instructions in general, e.g. for multiple types of branch. Selection of next instruction address from various alternatives, e.g. PC, a constant, branch target, branch fall-through."
"G06F9/324","{using program counter relative addressing}","","Address formation of the instruction operand or result using PC-relative addressing","G06F9/3557","","","","This place covers: Formation of the next instruction address using an offset from the program counter."
"G06F9/325","{for loops, e.g. loop detection, loop counter}","","Specific loop control instructions or iterative instructionsBuffering of loop instructions","G06F9/30065|G06F9/381","","","","This place covers: Formation of the next instruction address for a loop. Loop formation; loop detection. Loop counters."
"G06F9/327","{for interrupts}","","","","","","","This place covers: Formation of the next instruction address for an interrupt, using hardware means e.g. look-up table."
"G06F9/328","{for runtime instruction patching}","","","","","","Patchingrepairing errors in machine instructions in read-only storage at runtime. Usually implemented by substituting the instruction at a particular address in the memory by a correct version.","This place covers: Formation of the address of a next instruction for the purpose of patching an instruction. Includes detection of program addresses or instructions to be patched."
"G06F9/34","Addressing or accessing the instruction operand or the result {; Formation of operand address; Addressing modes  (address translation G06F12/00)}","G06F12/00","Accessing an operand in a pipelineAddress translation","G06F9/3824|G06F12/00","","","Addressing modetype of operand addressing e.g. indirect, indexed","This place covers: Addressing the instruction operand or the result. Operand addressing modes in general. Endian conversion."
"G06F9/342","{Extension of operand address space}","","Organisation of register space","G06F9/3012","","","","This place covers: Increasing the size of the addressable operand memory space i.e. increasing the number of available addressable locations. Extending the operand address space by increasing the bit length of addresses. Extending the operand address space by use of multiple address spaces; bank pointer."
"G06F9/345","of multiple operands or results {(addressing multiple banks G06F12/06)}","G06F12/06","Prediction of operand addresses for operand prefetchingAddressing multiple banks","G06F9/3832|G06F12/06","May also be classified according to the addressing mode.","","","This place covers: Address formation for a series or group of operands, e.g. for an array. Address formation for pairs of operands at adjacent addresses i.e. addr;addr+1."
"G06F9/3455","{using stride}","","","","","","Strideoffset or displacement which may be a constant.","This place covers: Address formation for a series of operands by adding a stride value to the previous address to form the next address. May be used to predict the next operand address."
"G06F9/35","Indirect addressing {, i.e. using single address operand, e.g. address register}","","","","","","Indirect addressingthe address is the value contained in the register specified in the instruction.Direct addressingthe address is the value specified in the instruction.GPRgeneral purpose register","This place covers: Address formation using a single address operand, e.g. using the contents of an address register or GPR."
"G06F9/355","Indexed addressing {, i.e. using more than one address operand}","","Address space extension","G06F9/342","","","Indexed addressingthe address is the value contained in the base register specified in the instruction summed with the value contained in the index register specified in the instruction. The index part of the address usually consists of less bits than the base part of the address, and is therefore an offset from the base address","This place covers: Operand address formation using more than one address operand, e.g. using base + index/offset registers. Indexed address formation or calculation details. Uses at least two address operands which are added or concatenated. The resulting address may be longer than the base address, hence indexed addressing may be also used for address space extension."
"G06F9/3552","{using wraparound, e.g. modulo or circular addressing}","","","","","","Wraparoundincrementing the maximum address value, e.g. 11111111 leads to wraparound to the lowest address value, e.g. 00000000, so that addressing is continuous, avoiding an overflow errorModulo or circular addressingsame meaning than Wraparound",""
"G06F9/3555","{using scaling, e.g. multiplication of index}","","","","","","Scalingindexed addressing where the index address is multiplied by a factor before adding to the base address",""
"G06F9/3557","{using program counter as base address}","","Next instruction addressing using an offset from the program counter.","G06F9/324","","","","This place covers: Address formation using the program counter as a base for indexed addressing; PC-relative addressing."
"G06F9/38","Concurrent instruction execution, e.g. pipeline, look ahead","","","","","","","This place covers: Simultaneous execution of instructions in general, in parallel or pipelined. Special architectures where instruction execution is concurrent. Includes stack machines."
"G06F9/3802","{Instruction prefetching}","","","","","","","This place covers: Prefetching and fetching of instructions for execution, in general. Instruction buffering; instruction caches"
"G06F9/3804","{for branches, e.g. hedging, branch folding}","","","","","","Hedging Fetching both paths of an unresolved conditional branchBranch folding Removal of a branch instruction from the instruction stream, e.g. by including the branch condition in an instruction as a predicate","This place covers: Prefetching of instructions for branch paths."
"G06F9/3806","{using address prediction, e.g. return stack, branch history buffer}","","Dynamic prediction of branch directionStatic prediction of branch directionHybrid prediction of branch direction","G06F9/3844|G06F9/3846|G06F9/3848","","","BTBbuffer indexed by an instruction fetch address or PC, which returns the predicted target address if the instruction is a taken branch.BHT buffer indexed by a branch instruction address, which returns a prediction of whether the branch is taken or not.BDT buffer indexed by a branch type at decode time, which returns a prediction of whether the branch is taken or not.Return address stack Stack to hold the program address to return to after a Call-type branch. The stack structure allows nesting of Calls.","This place covers: Using a history of previous branch target addresses to predict the address to fetch from, e.g. branch target buffer; Address buffers for predicting next fetch address for a branch, e.g. return address stack."
"G06F9/3808","{for instruction reuse, e.g. trace cache, branch target cache}","","","","","","Branch target cache History buffer of first instruction at a branch target, which returns an instruction rather than an address, thus saving fetch time.Trace cache Cache storing a history of previously executed paths through the program, as sequences of instructions. Accessing the trace cache returns the next predicted instructions in the sequence.","This place covers: Prefetching of instructions intended to be used more than once, thereby saving fetch time; Buffering of instructions for reuse, e.g. trace cache; Branch target caches."
"G06F9/381","{Loop buffering}","","Specific loop control instructionsFormation of the next instruction address for a loop; detection of loops","G06F9/30065|G06F9/325","","","Loopshort backward branchSequence of instructions executing repetitively","This place covers: Prefetching of instructions intended to be used in a loop, thereby saving fetch time; Buffering of instructions for loops."
"G06F9/3812","{with instruction modification, e.g. store into instruction stream}","","","","","","","This place covers: Instruction prefetching in an architecture allowing instruction modification. How to handle store-into-instruction-stream, wherein an instruction in memory is modified, e.g. by writing back a new operand value, hence the prefetched copy of the instruction is stale."
"G06F9/3814","{Implementation provisions of instruction buffers, e.g. prefetch buffer; banks}","","","","","","Prefetch buffer in this subclass, a buffer to hold a recently fetched set of instructions, usually between the instruction memory and the instruction decoder, e.g. cache line buffer.","This place covers: Special arrangements for buffering of prefetched instructions; Prefetch buffers; Banked or partitioned instruction buffers."
"G06F9/3816","{Instruction alignment, e.g. cache line crossing}","","Variable length instructionsPredecoding instructions for alignment information","G06F9/30149|G06F9/382","","","","This place covers: Arrangements for (correct) alignment of instructions in prefetch buffers. Instruction prefetching which crosses a line in memory or cache, for example for variable length instructions."
"G06F9/3818","{Decoding for concurrent execution}","","Decoding of a single instruction","G06F9/30145","","","","This place covers: Decoding for enabling the concurrent execution of instructions."
"G06F9/382","{Pipelined decoding, e.g. using predecoding}","","Instruction alignment using predecode information","G06F9/3816","","","","This place covers: Decoding for enabling the pipelined execution of instructions. Predecoding stage in a pipeline. Partitioned decoding stage."
"G06F9/3822","{Parallel decoding, e.g. parallel decode units}","","Compressed VLIW instructions","G06F9/30156","","","","This place covers: Decoding for enabling the parallel execution of instructions. Special details of decoding multiple instructions in parallel, e.g. decoding of Very Long Instruction Word format field."
"G06F9/3824","{Operand accessing}","","Load, Store instructionsRegister file accessing in general","G06F9/30043|G06F9/30098","","","","This place covers: Retrieving operands for instructions, from memory, registers, other pipeline stages or execution units."
"G06F9/3826","{Data result bypassing, e.g. locally between pipeline stages, within a pipeline stage}","","Transfer of data between Store and Load instructions for memory consistency","G06F9/3834","","","","This place covers: Arrangements for the transfer of an instruction result to a dependent instruction, without first storing in the architected state, e.g. bypassing the register file; Transfer of operand data from the output of a functional unit to the input of another functional unit, without waiting for the completion of the data producing instruction, or without waiting for the data to be stored in the register file."
"G06F9/3828","{with global bypass, e.g. between pipelines, between clusters}","","Parallel execution units organised in clusters","G06F9/3889","","","Cluster Group of execution units and register resources","This place covers: Bypass of an instruction result to a dependent instruction in another pipeline, or group of execution units, e.g. between clusters; Bypass arrangements for global data."
"G06F9/383","{Operand prefetching  (cache prefetching G06F12/0862)}","G06F12/0862","Specific instruction to prefetch data from memoryInstruction prefetchingSpeculative load instructionsPrefetching between higher level memories","G06F9/30047|G06F9/3802|G06F9/3842|G06F12/0862","","","Operand prefetchingLook-ahead fetching of an operand before the execution of the instruction which will use the operand","This place covers: Prefetching of data operands; Software data prefetching; Prefetching from a data cache reduces cache misses during execution of the instruction using the data."
"G06F9/3832","{Value prediction for operands; operand history buffers}","","","","","","","This place covers: Reuse or prediction of the value of an operand; Operand value prediction using a history of the value of an operand; Operand value buffering for reuse; Prediction of the address of an operand."
"G06F9/3834","{Maintaining memory consistency  (cache consistency protocols G06F12/0815)}","G06F12/0815","Specific atomic or synchronisation instructions, e.g. Read-Modify-Write, Operand bypassing between Load and Store instructionsConsistency of architectural stateCache consistency protocols","G06F9/30087|G06F9/3004|G06F9/3826|G06F9/3857|G06F12/0815","","","Memory consistency Keeping data in the memory up-to-date. Read data should not be stale; written data should not be overwritten by older data, which may occur in out-of-order execution.Memory disambiguation Checking stores against earlier executed out-of-order loads, and re-issuing the loads if their data is stale.","This place covers: How to maintain memory consistency during operand accessing for instruction execution. Avoiding errors caused by loads and/or stores to the same memory address being executed out of order or concurrently. Ensuring stored operands and fetched operands are consistent, e.g. memory disambiguation. Ensuring out-of-order loads receive the latest store information by forwarding."
"G06F9/3836","{Instruction issuing, e.g. dynamic instruction scheduling, out of order instruction execution}","","Accessing of operands for issueRe-issuing of faulting instructions","G06F9/3824|G06F9/3861","","","Issuing Runtime selection or scheduling of the instructions to execute.Superscalar Architecture where more than one instruction is selected to be executed in parallel in one cycle.VLIWVery Long Instruction Word being a compound instruction word formed by the compiler, containing multiple sub-instructions to be issued and completed together in one cycle","This place covers: Runtime scheduling or issuing of instructions. Instruction dispatching to execution units or execution buffers. Concurrent execution of instructions. Synchronisation of instruction execution."
"G06F9/3838","{Dependency mechanisms, e.g. register scoreboarding}","","","","","","Data dependency When a first instruction specifies an operand which is also specified in a following second instruction, the second instruction is dependent on the first, and cannot be executed until the dependency is resolved, or the operand is available.Register scoreboard Table of indicators of which instructions use which registers. May be used for dependency checking by detecting two instructions having a matching indicator.","This place covers: Special arrangements to detect or record data dependencies between instruction operands at issue time."
"G06F9/384","{Register renaming}","","Reorder buffers","G06F9/3855","","","Register renaming  Associating a logical register specified in an instruction to a unique physical register. Allows multiple physical registers to be assigned to hold data for multiple instances of a logical register, thus avoiding false dependencies.Relies on the set of physical registers being larger than the set of logical registers.RAW, read-after-write dependencyOccurs when a read to the same location occurs after a write to the same location. If the instructions are not in program order, this may lead to wrong execution.WAW, write-after-write dependencyIt occurs when a write to the same location occurs after another write to the same location. If the instructions are not in program order, this may lead to wrong execution. Pseudo data dependency, false dependency, anti-dependency, output dependencyDependency which may be resolved without wrong execution, e.g. a write followed in program order by another write; a read followed in program order by a write.","This place covers: Special arrangements to carry out register renaming, e.g. as a means of avoiding pseudo dependencies; Rename tables and buffer, which may form part of a reorder buffer."
"G06F9/3842","{Speculative instruction execution}","","Conditional instruction execution, e.g. predicationResult nullification for executed instructionsRecovery after mis-speculation","G06F9/30072|G06F9/3859|G06F9/3861","","","Speculative instructions Executed instructions which may not be on the actual path taken through the program, and therefore may require recovery after execution if mis-speculation occurs.Speculative loads Look-ahead or early execution of load instructions, where recovery would be needed in the case of mis-speculation.","This place covers: Execution of instructions ahead of program order, with the presumption that execution will prove to be correct e.g. speculative loads, boosting. Speculative instructions which are executed e.g. alternative paths of a branch. Execution of instructions dependent on a branch before its outcome is known."
"G06F9/3844","{using dynamic prediction, e.g. branch history table}","","","","","","Dynamic predictionBranch prediction based on runtime conditions, as opposed to compile-time branch prediction.Branch history tableBranch prediction based on runtime conditions, as opposed to compile-time branch prediction.Branch Target BufferBuffer indexed by an instruction fetch address or PC, which returns the predicted target address if the instruction is a taken branchBranch History TableBuffer indexed by a branch instruction address, which returns a prediction of whether the branch is taken or not. Branch Decode TableBuffer indexed by a branch type at decode time, which returns a prediction of whether the branch is taken or not.Branch Prediction Countersaturating counter used to obtain a weighting for a branch prediction based on several branch executions.","This place covers: Speculative execution of instructions using dynamic branch prediction; Using runtime conditions, and the previous behaviour of branches, to predict the outcome of a branch, without having to wait for its execution; Early generation of branch results."
"G06F9/3846","{using static prediction, e.g. branch taken strategy}","","","","","","Static prediction Branch direction is predicted based on compile-time branch prediction.Hint bit Bit in branch instruction inserted by compiler to give an indication whether branch predicted taken or not.","This place covers: Speculative execution of instructions using static branch prediction; Branch prediction performed by compiler, and not dependent on runtime conditions, e.g. hint bits; Static bit may be used to indicate an unconditional branch, if this is not clear from the opcode; Static prediction may be used as default when no dynamic prediction is available."
"G06F9/3848","{using hybrid branch prediction, e.g. selection between prediction techniques}","","","","","","Two-level branch prediction History of the outcome of a set of branches is used to select the predictor for a particular branch.","This place covers: Prediction schemes involving more than one type of predictor; Static and dynamic prediction used alternately; Local and global prediction mechanisms; Two-level branch prediction."
"G06F9/3851","{from multiple instruction streams, e.g. multistreaming  (initiation or dispatching of multiple tasks or threads G06F9/48)}","G06F9/48","Context registers for multiple streamsExecution units or pipeline architectures for executing multiple streams","G06F9/30123|G06F9/3889","","","Instruction stream Architectural aspects, e.g. resources and context, used to execute a thread or series of instructions. Includes at least a program counter, and possibly including dedicated instruction buffers, registers, status register, execution units.","This place covers: Issuing instructions from multiple threads each having a context, including at least a program counter, and possibly registers and execution resources; Includes multiple streams for different threads, or from both directions of a branch; Interleaved execution of threads in a single or in multiple streams; Stream selection."
"G06F9/3853","{of compound instructions}","","Decoding of VLIW format field ","G06F9/3822","","","Compound instructionConsisting of sub-instructions, i.e. contains multiple opcodes, e.g. VLIW instructions.","This place covers: Issuing of compound instructions; Compounding single instructions into a group; Issuing a group of instructions, that must complete in the same cycle; Dispatching aspects of compound instructions, e.g. variable format VLIW instructions."
"G06F9/3855","{Reordering, e.g. using a queue, age tags}","","","","","","Reordering Restoring the program order after instruction execution, ensuring that the instructions complete in the correct order.Age tag An indicator associated with an instruction to indicate its original program order, e.g. in the case of instructions executed out-of-order.","This place covers: Special arrangements for reordering of instructions issued out-of-order. Usually occurs at writeback stage; Queue arrangements include reorder buffers; Age tags include marking the instructions with the original program order."
"G06F9/3857","{Result writeback, i.e. updating the architectural state}","","Recovery of architectural state after an exception","G06F9/3861","","","Architectural state Runtime data in the pipeline resources, including program counter, instruction queue, status register, condition codes, general purpose and special purpose registers, rename data, pipeline registers, etc. The state is updated when one of these resources is written to.","This place covers: Special arrangements to write back results to the architectural state, ensuring correctness of the architectural state; Instruction completion."
"G06F9/3859","{with result invalidation, e.g. nullification}","","Cancellation of an instruction before execution using, for example, predicationRecovery from exceptions ","G06F9/30072|G06F9/3861","","","Nullification In this subgroup, the invalidation of an instruction result. The instruction has already executed, but the results are invalid, and must not update the architectural state.","This place covers: Ensuring correctness of the architectural state by nullifying the results of wrongly executed instructions. Nullifying may use, for example, preventing writeback; tagging the result as invalid; clearing of result."
"G06F9/3861","{Recovery, e.g. branch miss-prediction, exception handling  (error detection or correction G06F11/00)}","G06F11/00","Instruction result nullification ","G06F9/3859","The group is only to be used for the handling of exceptions caused by instruction execution.","","Architectural state The runtime data in the pipeline resources, including program counter, instruction queue, status register, condition codes, general purpose and special purpose registers, rename data, pipeline registers etc.Exception, fault Error caused by the execution of an instruction, e.g. floating point overflow; page fault; mis-speculation.","This place covers: Recovery of correct instruction execution after an exception or fault; Restoring the correct architectural state after an exception, e.g. after branch mis-prediction, arithmetic overflow. May require nullifying wrong results; flushing the instructions in the pipeline; restarting the pipeline from the point of exception."
"G06F9/3863","{using multiple copies of the architectural state, e.g. shadow registers}","","Shadow register structure","G06F9/30116","The subgroup is only to be used for the handling of exceptions caused by instruction execution. In particular, checkpointing for software debugging is not meant.","","Architectural state the runtime data in the pipeline resources, including program counter, instruction queue, status register, condition codes, general purpose and special purpose registers, rename data, pipeline registers etc.","This place covers: Recovery using multiple copies of architectural state; Restoring the architectural state to that previous to an exception using a previous version of the state, e.g. checkpoint, future file, shadow registers."
"G06F9/3865","{using deferred exception handling, e.g. exception flags}","","","","","","","This place covers: Instruction exception handing which does not occur in the cycle in which the exception is detected, but later, e.g. at writeback stage."
"G06F9/3867","{using instruction pipelines}","","Specific instructions for pipeline controlAsynchronous pipeline control, e.g. using handshaking","G06F9/30079|G06F9/3871","","","Pipeline Series of linearly sequential execution stages for executing instructions. The stages have buffers between them for output data which is input into the next stage. The buffers may be clocked so that data from one stage moves into the next stage on a clock signal. All stages move at once, else an asynchronous pipeline.Counterflow pipeline Pipeline in which instructions travel down pipeline, but data travels up pipeline.Cascaded pipeline Parallel pipelines where a group of instructions are issued in successive cycles to produce a staggered execution of the group.","This place covers: Concurrent execution using instruction pipelines; Control of instructions moving through a pipeline of functional stages. A typical pipeline consists of these stages: Instruction fetch; Instruction decode; Operand fetching; Instruction issue; Instruction execution; Instruction completion/Result writeback; Pipeline control, e.g. flushing, halting; Pipeline stages, e.g. type of stage, number of stages; Variable length pipeline, e.g. elastic pipeline; Counterflow pipeline; Cascaded pipelines."
"G06F9/3869","{Implementation aspects, e.g. pipeline latches; pipeline synchronisation and clocking}","","Specific instructions for pipeline control.","G06F9/30079","","","Clock skew lack of synchronicity between instances of a clock signal caused, e.g. by differing clock wire lengths.","This place covers: Instruction pipeline synchronisation; Timing aspects of instruction pipelines, e.g. clock cycle, derating; Clocking of pipeline stages; clock domains; Clock skew problems; Clock gating in pipelines, e.g. for power saving; Latches and buffers between pipelines stages."
"G06F9/3871","{Asynchronous instruction pipeline, e.g. using handshake signals between stages}","","","","","","Asynchronous pipeline Pipeline where not all stages move at once, e.g. execution in a stage starts when a signal is received from previous stage, and ends by sending a done signal to next stage.Handshake signals Exchange of signals between stages, e.g. to inform a next stage when data is available to process, and to inform a previous stage when data may be forwarded.","This place covers: Asynchronous pipeline, e.g. using handshake signals between stages, e.g. ACK, DONE signals. Pipelines where the stages do not all move at the same time."
"G06F9/3873","{Variable length pipelines, e.g. elastic pipeline}","","","","","","Pipeline length The number of pipeline stages.","This place covers: Pipeline with dynamically varying length. Multiple pipelines having different lengths."
"G06F9/3875","{Pipelining a single stage, e.g. superpipelining}","","Pipelined decoding","G06F9/382","","","","This place covers: Pipeline architecture where a single stage is split into sub-stages using pipeline buffer, with higher clocking rate implied for that stage, e.g. pipelined execution unit; pipelined decode unit. Pipeline architecture having multiple stages for the same function, e.g. two execution stages, without higher clock rate."
"G06F9/3877","{using a slave processor, e.g. coprocessor  (peripheral processor G06F13/12; vector processor G06F15/8053)}","G06F13/12|G06F15/8053","Execution units executing under control of a master decoderPeripheral processorVector processor","G06F9/3885|G06F13/12|G06F15/8053","","","Host master processor to which the coprocessor is a slave","This place covers: Concurrent instruction execution using slave processor or coprocessor which controls its own execution i.e. has a decode unit or sequencer; Means and protocol to transfer instructions and data to a slave processor, and to receive results in return; Detection of presence or absence of a slave processor; Reconfigurable coprocessors i.e. not special purpose."
"G06F9/3879","{for non-native instruction execution, e.g. executing a command; for Java instruction set}","","","","","","Non-native instruction setInstructions which cannot be executed on the master processor","This place covers: Slave processors which receive and decode instructions which are not explicit in the instruction set of the host e.g. commands; function calls; using ESC; using memory-mapped commands; Slave processors which are adapted to execute another instruction set, e.g. Java coprocessor."
"G06F9/3881","{Arrangements for communication of instructions and data}","","","","","","","This place covers: Special arrangements or protocols for transfer of instructions or commands, and for exchange of data with a slave processor which executes non-native instructions."
"G06F9/3885","{using a plurality of independent parallel functional units}","","Parallel decode unitsConcurrent execution using a slave processor","G06F9/3822|G06F9/3877","This group is only to be used for special architectural arrangements to enable the concurrent execution of instructions, not for the mere presence of parallel functional units.Parallel functional units does not usually mean parallel processors. Multicore architectures may be found here only if they carry out concurrent execution of instructions from the same program.","","Functional unit Unit within the processor which carries out part of the execution of an instruction.","This place covers: Special arrangements for concurrent instruction execution using parallel functional units, implying the concurrent execution of multiple instructions, one in each of the functional units; Parallel execution pipelines."
"G06F9/3887","{controlled by a single instruction, e.g. SIMD}","","","","","","SIMD Acronym for ""single instruction multiple data"" being an architecture having a set of homogenous execution units which execute the same instruction in any given cycle, but which each have their own operand data, e.g. vector data.","This place covers: Multiple parallel functional units controlled by a single instruction. For SIMD execution, this class contains details relevant to the execution aspects, e.g. executing a global instruction according to local conditions."
"G06F9/3889","{controlled by multiple instructions, e.g. MIMD, decoupled access or execute}","","","","This group is only to be used for special architectural arrangements to enable the concurrent execution of instructions, not for the mere presence of parallel functional units executing multiple instructions.","","MIMD Acronym for ""multiple instruction multiple data"" being an architecture having a set of homogenous execution units which execute different instructions in any given cycle, and which each have their own operand data.VLIW Acronym for ""very long instruction word"" being an architecture having a compound instruction word formed by the compiler, containing multiple sub-instructions to be issued and completed together in one cycle, and having no interdependencies.Hardware stream Hardware resources used for the context and execution of a stream or thread of instructions.","This place covers: Multiple parallel functional units controlled collectively by multiple instructions. Includes special techniques of parallel functional unit control in a superscalar or VLIW architecture. Hardware streams."
"G06F9/3891","{organised in groups of units sharing resources, e.g. clusters}","","","","","","Cluster Group of execution units with shared register resources.Hardware stream Hardware resources used for the context and execution of a stream or thread of instructions.","This place covers: Control of parallel execution by groups of functional units, such as multiple execution units sharing local memory; Partitioned architectures, e.g. for hardware multistreaming."
"G06F9/3893","{controlled in tandem, e.g. multiplier-accumulator}","","","","","","","This place covers: Multiple functional units which are controlled in tandem or cascade to carry out an instruction. Multiple functional units controlled by the same instruction but not in the same cycle."
"G06F9/3895","{for complex operations, e.g. multidimensional or interleaved address generators, macros}","","","","","","","This place covers: Multiple functional units which are controlled in tandem or cascade to carry out an instruction which is a complex operation, possibly over multiple cycles."
"G06F9/3897","{with adaptable data path}","","","","","","","This place covers: Parallel functional units controlled in tandem to execute complex operations using adaptable datapath."
"G06F9/44","Arrangements for executing specific programs","","Program initiating or program switching in the context of multiprogramming","G06F9/48","","","High level language refers to what is commonly known in the art, i.e. a language containing human readable constructs intended to be used by a human programmer and to be translated to binary code for execution.The fact that it is theoretically possible to read, understand and directly program binary code does not qualify this type of code as HLL. Low-level languagelanguage that provides little or no abstraction from a computer's instruction set architecture","This place covers: Execution of a single program."
"G06F9/4401","Bootstrapping  (security arrangements therefor G06F21/57)","G06F21/57","Low level details of resetting meansCompiler bootstrappingInstallation of computer softwareFault tolerant bootingDetails of Power-On Self Test (POST)","G06F1/24|G06F8/37|G06F8/61|G06F11/1417|G06F11/2284","","","Bootstrapa simple program that begins initialisation of the computer's operating system","This place covers: Starting up or shutting down a computer system and loading of the operating system."
"G06F9/4403","{Processor initialisation}","","Loading microcode per seConfiguring of multiprocessors","G06F9/24|G06F15/177","","","","This place covers: Initialisation of the processor and the processor's direct environment immediately after the initial reset signal. This group deals with local issues - there is no network involved. Includes: Initial microcode loading; Selecting the very first instructions to be executed after a hardware reset; Processor address boot facilities; I/O channel initialisation; Making BIOS ROM invisible after booting; Means to shadow BIOS from ROM to (faster) RAM."
"G06F9/4405","{Initialisation of multiprocessor systems}","","Configuring of multiprocessors","G06F15/177","","","","This place covers: Initialisation of processors in a multiprocessor system immediately after the initial reset signal."
"G06F9/4406","{Loading of operating system}","","","","","","","This place covers: Loading of the operating system and the preparatory steps for loading the OS. Also includes the launching of application programs once the OS has been loaded, and OS formats on storage devices."
"G06F9/4408","{Boot device selection}","","","","","","","This place covers: Searching and selecting a bootable boot device."
"G06F9/441","{Multiboot arrangements, i.e. selecting an operating system to be loaded}","","Emulating one OS using anotherTwo active OSs, where one OS (the guest OS) is running as an application in the other OS (the host OS)Multiple OSs running simultaneously in the context of a VMMWhen one of this plurality of OSs serves as a backup OS in case of failure, recovery OS","G06F9/45504|G06F9/45545|G06F9/45558|G06F11/00","","","","This place covers: Computer systems having more than one bootable OS Choosing one of the available bootable OSs and booting from that OS (dual-boot or multi-boot); Providing mechanical means to switch between the OSs (see US2006107029); When a computer is switched on for the first time, the user is required to choose one of the OSs available on the computer. Once an OS is chosen, the other OSs are made unavailable. The next time the computer is started, it will boot only the selected OS (see EP0794484)."
"G06F9/4411","{Configuring for operating with peripheral devices; Loading of device drivers}","","Configuration of printer parametersUpdating of firmware in peripheral devicesConfiguring software or OS when this configuration is not related to interacting with the peripheral deviceProgram control for peripheral devices - the inner workings of a device driver, i.e. how the driver performs its job of interfacing between OS & device, how the driver is structured, etc.Electrical details of hot-plugging, plug and playPeripherals with a processor and software running thereon together with the computer's processor can be considered a multiprocessor system. A distinction has to be made between the device driver - i.e. the software that runs on the host to interface with the peripheral - and the software running on the peripheral.Reconfiguration of FPGAs, PLDsHAVi networksConfiguration of network elementsManagement of devices over a network, ","G06F3/1297|G06F8/65|G06F9/44505|G06F13/102|G06F13/4081|G06F15/177|G06F30/34|H04L12/2803|H04L41/0803|H04L67/125|H04L67/025","A device driver is understood to be software used by a computer to control/operate a peripheral device. A peripheral is any kind of device that can be attached to/inserted into a computer in order to expand its functionality (modem, sound card, disk drives). A device driver- i.e. the piece of software that is loaded on a host computer and that enables the host computer to control the operation of an attached peripheral - differs from the peripheral's operating software - i.e. the piece of software that resides on the peripheral itself and executed by the peripheral's processor that allows the peripheral to operate as an independent unit.","","Peripheral Internalan expansion card that is plugged into one of the ISA/PCI slotsPeripheral Externalan external device connected through the serial/parallel port a PC card","This place covers: Initialisation and configuration of peripheral devices, insofar as this configuration is related to the interaction with the operating system. Also deals with the configuration of the operating system in order to be able to interact with peripheral devices. A peripheral device in this class should be understood as a passive entity, i.e. whose functioning is controlled by the host computer to which it is attached. Systems involving a host computer with attached devices that have processing capabilities of their own should be treated as a multiprocessor or a networked distributed system. This initialisation/configuration does not have to occur during booting (although it typically does) - it can also take place e.g. when a device is hot-inserted (plug and play). This group deals with local issues - there is no network involved. Assigning IRQ lines, I/O addresses; Configuring registers on the peripheral; Device discovery: detecting which devices are present; building device trees; Adapting OS for device configuration; Device initialisation; Config.sys peripheral device facilities. Loading or installation of device drivers. This does not necessarily have to occur at boot time."
"G06F9/4413","{Plug-and-play [PnP]}","","","","","","","This place covers: Arrangements for automating the process of device driver loading or configuration of a peripheral device or the operating environment of the computing element hosting the peripheral device in in response to dynamic changes in the peripheral constitution of the computing element (addition or removal of peripheral devices). Plug-and-play in the context of this class occurs either during boot time or during run-time (live addition or removal)."
"G06F9/4415","{Self describing peripheral devices}","","","","","","","This place covers: The peripheral device itself contains all the information (or a reference to a place where the information is stored) required for its configuration and the configuration of the operating environment. In other words, it is the peripheral device and not the operating environment that is burdened with the task of providing configuration information or device drivers."
"G06F9/4416","{Network booting; Remote initial program loading [RIPL]}","","Booting of multiprocessor systems, e.g. where one processor (the master) sends the boot or initialisation code to the other processors (slaves)Wake-on-LAN (WoL)BOOTP, DHCP protocol,  Network protocols involving booting","G06F15/177|H04L12/12|H04L61/2023|H04L61/2015|H04L67/34","Remote booting in the context of a first-time and one-off installation of an OS is also classifed in the .","G06F8/61","","This place covers: Booting of client computers, processors or devices that do not have the necessary boot code locally available but retrieve the boot code from a remote source, e.g. a boot server in a network environment. Specific topics included: Booting of diskless computers (""net"" computers); ""Push"" booting: a server computer boots a client computer by sending a boot program to the client computer; PXE (Preboot Execution Environment) The Preboot Execution Environment (PXE) is an industry standard client/server interface that allows networked computers that are not yet loaded with an operating system to be configured and booted remotely by an administrator. The PXE process consists of the client notifying the server that it uses PXE. If the server uses PXE, it sends the client a list of boot servers that contain the operating systems available. The client finds the boot server it needs and receives the name of the file to download. The client then downloads the file using Trivial File Transfer Protocol and executes it, which loads the operating system. Booting a thin client in a ""client device/data center"" environment (see US2006/161765); Network booting; Booting diskless workstations; Booting thin clients."
"G06F9/4418","{Suspend and resume; Hibernate and awake}","","Low-level, electrical details of suspend and resumePower ManagementNormal Shutdown (without saving state information - the next boot starts from scratch)Suspending a running process and resuming its execution later in the context of process scheduling , Booting a computer system when an error/ fault is involved. Includes Dealing with errors that occur during the boot process itself (e.g. when encountering a corrupt BIOS); * Rebooting the system after a previous irregular shutdown (e.g. due to a power failure), thereby restoring as much as possible the system state that existed before the irregular shutdown occurred. In absence of an emergency power supply, a power failure will cause the computer system to be simply powered down, inevitably resulting in the loss of system state. The next time the computer is booted, the system state will be restored as much as possible.Graceful shutdown: When a power failure is detected, an emergency power supply (e.g. UPS) is activated giving the system enough time to do a proper shutdown (when shutting down a computer system, no state information is saved). Graceful hibernation:When a power failure is detected, an emergency power supply (e.g. UPS) is activated giving the system enough time to do a proper hibernation (thereby saving the system state) before eventually powering down. Dealing with power failures that occur when the system is in suspend mode, i.e. when the RAM is still powered; In battery-powered systems, suspending or hibernating the system when the battery level drops below a predetermined levelWake-on-LAN","G06F1/32|G06F1/3203|G06F9/4401|G06F9/461|G06F9/4881|G06F11/1417|G06F11/1441|H04L12/12","The techniques of Suspension and Hibernation differ from each other in the degree of persistency of saving the system state.With Hibernation, the system state is stored on a non-volatile memory device, e.g. HDD, while in the case of Suspension, the system state is stored in volatile memory (e.g. RAM).In the  we only deal with situations where the reason or the system to suspend or hibernate is controlled/intentional e.g. after user presses power off button, after a preset period of inactivity for power saving purposes. When the reason to suspend or hibernate is the occurrence of a power failure, low battery voltage or another anomaly (e.g. system hang), then the document should be classified in  (see Related Fields). The subsequent restart of the system is classified in .","G06F9/4418|G06F11/1441|G06F11/1417","Hibernationalso known as Suspend-to-Disk (S2D) and is defined as sleeping mode S4 in the ACPI specification.Suspensionalso known as Suspend-to-RAM (STR) and is defined as sleeping mode S3 in the ACPI specification.","This place covers: Suspend/Resume and Hibernate/Wake Up refer to techniques to put a system in a low power, non-operating mode, thereby preserving the system state that existed at the time of going into Suspend or Hibernate. The next time the computer is started, operation continues at the point where it left off, rather than starting from scratch. Speeding up the boot process by restoring persisted data from previous executions rather than going to the whole boot process. Hibernating a system to persistent storage on a first computer, transporting the storage to a second computer and resuming the execution there. Please note that this is not process migration. Multiple removable storage devices, each having a different hibernated system image stored thereon; resuming the different system images on one computer by switching the storage devices. Quickly bringing a computer into an operational state by copying a memory image from persistent storage to RAM, thereby bypassing the lengthy conventional boot process."
"G06F9/442","{Shutdown}","","","","","","","This place covers: Shutting down the computer, the opposite operation of bootstrapping ( )."
"G06F9/445","Program loading or initiating  (bootstrapping G06F9/4401; security arrangements for program loading or initiating G06F21/57)","G06F9/4401|G06F21/57","Updating of computer softwareLoading of microcodeProcess Migration, Protocols for network applications involving the movement of software and/or configuration parameters, e.g. applets","G06F8/65|G06F9/24|G06F9/4856|G06F9/5088|H04L67/34","","","","This place covers: Preparing a program for execution including the actual launching of the program."
"G06F9/44505","{Configuring for program initiating, e.g. using registry, configuration files}","","Configuration management in the context of software developmentConfiguration of peripheral devicesConfiguration of FPGA, PLAGaming configurePersonalization of smart cardsConfiguration of parameters specifically aimed at networking/communicationProtocols for network applications involving terminal/user profilesDifferentially changing configuration parameters","G06F8/71|G06F9/4411|G06F30/00|G07F|G07F7/10|H04L41/08|H04L67/306|H04L67/34","Configuration wizards that assist a user in configuring a software application, are also classified in  (Help systems).","G06F9/453","","This place covers: Run-time configuration of software and computer applications, for example: Configuring the Windows registry; User profiles: roaming (i.e. restoring the user's settings at a different computer), multiple users (i.e. each user has a different profile)."
"G06F9/4451","{User profiles; Roaming}","","Network-specific arrangements/protocols involving user profiles","H04L67/306","","","","This place covers: Roaming user profiles; migrating configuration settings between computers."
"G06F9/44521","{Dynamic linking or loading; Link editing at or after load time, e.g. Java class loading}","","","","","","","This place covers: Ways to load program code whereby, rather than first loading the entire program code before starting execution, the program code is loaded only when needed. Also includes: Saving memory space and preventing unnecessary processing by only loading the program parts that are actually used; Parts that are never executed are never loaded; Starting execution once certain parts are loaded: no need to wait for the whole program to be loaded; Executing instructions as they are loaded: the idea of streaming; Java constant pool resolution Dynamic linking/loading is also known as: incremental, partial, run-time, lazy; on-demand linking/loading."
"G06F9/44526","{Plug-ins; Add-ons}","","","","","","","This place covers: Dynamically loading special software components to exisitng applications in order to extend their functionality, e.g. Adobe Flash-Player."
"G06F9/44536","{Selecting among different versions}","","","","","","","This place covers: Determining the right version of a software component to be loaded."
"G06F9/44542","{Retargetable}","","Retargetable program installation/update","G06F8/64","","","","This place covers: Program loading explicitly taking into account hardware characteristics of the target."
"G06F9/44547","{Fat binaries}","","","","","","","This place covers: Computer programs containing code native to multiple instruction sets (processor architectures)."
"G06F9/44552","{Conflict resolution, i.e. enabling coexistence of conflicting executables}","","","","","","","This place covers: Mechanisms to allow e.g. different versions of conflicting libraries to be used simultaneously; for example the Windows ""DLL Hell""."
"G06F9/44557","{Code layout in executable memory}","","","","","","","This place covers: How software components should be placed in a RAM, e.g. occupying neigbouring sections."
"G06F9/44563","{Sharing}","","","","","","","This place covers: Sharing program code/data between different applications in order to reduce the memory footprint; Solutions to problems that arise when program code/data is shared (e.g. sharing of global variables and Java static fields), often resulting in the duplication of program code/data."
"G06F9/44568","{Immediately runnable code}","","","","","","","This place covers: Running programs without having to install or load them beforehand. Execute-in-place refers to running without loading (i.e. without copying to RAM), while portable applications more refer to running without installing."
"G06F9/44573","{Execute-in-place [XIP]}","","","","The U3 technology does not fall under the XIP technology, because the program code is not executed directly from the USB stick.","","","This place covers: Skipping or reducing the step of loading and initialization of program code. Techniques used: XIP: eXecute-In-Place: execute programs from where they are persistenly stored. There is no program loading. Pre-initialise modules: program code may be loaded, but it is already partially or totally initialised Romization of program code XIP (Execute In Place) refers to the execution program code directly from the memory where it is stored, without first loading the program code to volatile executable memory (RAM). Where the   relates to the preparatory process of making program code ready for execution - loading, i.e. transferring the code to executable memory; linking, i.e. resolving references; initializing data structures - XIP relates to methods where the program code can be directly executed without having to go through this preparatory process. One definition of XIP, taken from US2002/069342: ""A XIP architecture is defined by a system's ability to execute one or more bytes of code while still resident within non-volatile memory (e.g., read-only memory (ROM)), without first transferring the code to volatile memory (e.g., random access memory (RAM)."" Another definition of XIP, taken from US2004/193864: ""A called execute-in-place (XIP) technology refers to a specific function provided with a storage device, which data or command codes stored in the storage device can be directly accessed by a central processing unit (CPU) in a computer system, without pass through a random access memory (RAM), thus reducing power consumption and data loss, and increasing executing speed."" For program code to be directly executable from the memory where it is stored, it is required that the memory is suitable to directly execute code (read US2002/138702, [0004]-[0008]), and that the code is in such a form that it can be directly executed. Examples of XIP: In normal computer systems, directly executing program code from an externally connected memory device; In embedded systems, executing the software directly from the non-volatile memory where it is stored. Also included: Romization, romizer: processes and tools to generate a directly-executable program image. Semi-directly-executable code: the code is partially prepared for execution, the rest takes place at load time."
"G06F9/44578","{Preparing or optimising for loading}","","","","","","","This place covers: Specific techniques to make code immediately runnable, e.g. making address adjustments (relocation) to enable immediate execution, or prebinding (Mac OS). General aspects of pre-runtime link editing are however classified in  ."
"G06F9/44584","{Portable applications, i.e. making applications self-contained, e.g. U3 standard}","","","","","","","This place covers: Executing applications without installing them before, for example according to the U3 standard, or portable application packages (""Portable App"") started directly from a USB stick."
"G06F9/44589","{Program code verification, e.g. Java bytecode verification, proof-carrying code  (high-level semantic checks G06F8/43; testing and debugging software G06F11/36)}","G06F8/43|G06F11/36","","","In  group, the question is: does the program do what it is expected to do? In other words, for a given input, does the program produce the expected output? The program is considered as a black box, only the external behaviour is studied. The tests that are performed do not take into account the implementation or the language that is used to write the program. We are here on the level of users/developers/specifications.In , a test is performed to see whether the (compiled) program code does not do anything that is not allowed by the rules of the target machine. In other words, the question is: does the program comply with code specific requirements?The two groups are on a different level. It is possible for a program to respect all code specific requirements and thus to pass  tests, but not to produce the expected output and thus not to pass the  testIn the  (Compile-time checking), source code is checked. In most cases, this is done by the compiler but it can also be performed by a separate program. In contrast, the  tests already compiled code. In the , the verification is performed based on source code specific aspects, whereas in the  this is done on the basis of target machine related aspects","G06F11/36|G06F9/44589|G06F9/44589|G06F11/36|G06F8/43|G06F9/44589|G06F8/43|G06F9/44589","","This place covers: Verification of program code, for example: Java bytecode verification. Proof carrying code. inter instruction consistency checks."
"G06F9/44594","{Unloading}","","","","","","","This place covers: Unloading program components from memory or terminating applications, e.g. when they are not needed anymore. Java class unloading: removing Java classes from memory when they are not used anymore, e.g. because the class has become ""unreachable"". Class unloading is not the same as Garbage Collection: in class unloading, what is removed is program code in executable memory (classes), whereas in Garbage Collection it is data (objects, i.e. class instances) that are removed."
"G06F9/448","Execution paradigms, e.g. implementations of programming paradigms","","","","","","OOObject-oriented","This place covers: Implementations of specific programming paradigms to execute computer programs, the programming paradigms being e.g. object-orientated, procedural, data driven or finite state machine"
"G06F9/4482","{Procedural}","","","","","","","This place covers: Relates to procedural execution, i.e. imperative programming where the program is built from one or more procedures (subroutines)."
"G06F9/4484","{Executing subprograms}","","Hardware implementation of instructions that change the program flow to another address (jumps, branches, goto)Remote procedure calls (RPC)Stack caching","G06F9/30|G06F9/547|G06F12/0875","","","","This place covers: Invocation and execution of subroutines, for example: Implementation of a call stack: creating and deleting activation records, reserving space on the stack to store local variables and to pass the arguments Argument passing Locating variables at higher level in the invocation chain Co-routines Re-entrant functions Function or method overloading: considering the type of all actual arguments/return type of a function to select a proper function instance to execute Calling functions in another programming language Also covered are other combinations of several instructions, for example combinations of instructions to perform (counted) loops."
"G06F9/4486","{Formation of subprogram jump address}","","Static linking, i.e. before load-timeHardware implementation of instructions specifically designed to keep the return address (e.g. branch-and-link, jsr)Branch prediction in a pipelined system , Dynamic linking, i.e. at or after load-time","G06F8/54|G06F9/30|G06F9/3844|G06F9/3846|G06F9/44521","","","","This place covers: Finding the entry address of a subroutine and how to preserve the return address"
"G06F9/4488","{Object-oriented}","","","","","","OOObject-oriented","This place covers: Execution aspects of object-oriented programs"
"G06F9/449","{Object-oriented method invocation or resolution}","","Remote method invocation (RMI)","G06F9/548","","","","This place covers: Object-oriented method resolution, i.e. given a method invocation on a reference (pointer) to an object, how to locate the correct code that implements this method. Typically this is done using virtual function tables. Only deals with the resolution of an object-oriented method."
"G06F9/4491","{Optimising based on receiver type}","","","","","","","This place covers: Speeding up the run-time object-oriented method resolution by predicting the type of the referenced object"
"G06F9/4492","{Inheritance}","","Object-oriented method resolution","G06F9/449","Documents in  deal with Object-oriented method invocation and will inevitably talk about class hierarchies, which is the subject of . However, this alone does not justify classification in : only when the document discloses specific details about class hierarchies, the symbol  is justified.","G06F9/449|G06F9/4492|G06F9/4492|G06F9/4492","Method overridingsubclass provides a specific implementation of a method that is already provided by one of its superclassesPolymorphismcreating a variable, a method or an object that has more than one form ","This place covers: Object oriented class hierarchies including run-time addition of classes to a hierarchy virtual inheritance and/or polymorphism."
"G06F9/4493","{Object persistence}","","Serialization in the context of RPC, RMI, OO databases","G06F9/547|G06F9/548|G06F16/30","","","","This place covers: Making objects persistent and restoring objects from persisted form. Includes: Pointer swizzling Flattening objects"
"G06F9/4494","{data driven}","","Specification techniques, e.g. Petri netsData flow analysis during compilation Architectures for data or demand driven systems","G06F8/10|G06F8/433|G06F15/82","","","","This place covers: Software aspects of data driven systems, i.e. systems where the action is dictated by the presence or availability of data at the inputs of the logical circuits, rather than by sequential instruction execution under supervision of a central clock"
"G06F9/4496","{Unification in logic programming}","","","","","","","This place covers: Unification is one of the main ideas behind logic programming, best known through the language Prolog. It represents the mechanism of binding the contents of variables and can be viewed as a kind of one-time assignment."
"G06F9/4498","{Finite state machines}","","","","","","","This place covers: Program execution implemented by a Finite State Machine. There must be enough technical details about the FSM implementation to allocate the subgroup."
"G06F9/451","Execution arrangements for user interfaces","","Methods for a user to interact with the GUI, e.g. scrolling, drag and drop, menusDigital output to a display deviceDevelopment and generation of source code for user interfacesUser interfaces for portable communication terminals, e.g. mobile phones","G06F3/048|G06F3/14|G06F8/38|H04M1/724","","","User interfaceis the space where interaction between humans and machine occurs","This place covers: The inner working of user interfaces, in particular graphical user interfaces (GUIs), including: Interaction of the GUI with applications and OSs The structure and interaction of software components of GUIs Implementation of GUI concepts typically used in operating systems, e.g. desktop metaphors, widgets or windowing mechanisms Implementation of GUI automation mechanisms, e.g. record/replay of user interactions on the GUI"
"G06F9/452","{Remote windowing, e.g. X-Window System, desktop virtualisation  (protocols for telewriting H04L67/38)}","H04L67/38","Communication between two running processesTerminal emulation","G06F9/54|G06F13/107","","","","This place covers: Methods to execute and interact with an application, whereby the application's program code runs on the server, and the GUI runs on the client (terminal). The user interacts with the remotely running application through the local GUI. GUI events/commands run back and forth between client and server. All processing is done at the server."
"G06F9/453","{Help systems}","","Intelligent code editorsTeaching appliances; GUIs specially adapted for deaf, mute or blind persons","G06F8/33|G09B","","","","This place covers: Customizing the help according to the user's previous actions Getting help by pressing f1 Wizards, application assistants, visual cues Online tutorials"
"G06F9/454","{Multi-language systems; Localisation; Internationalisation}","","Pseudo-localisationProcessing or translation of natural language","G06F11/00|G06F40/40","","","Language localisationinternationalisation (i18n), globalisation","This place covers: User interfaces in multiple human languages, adapting user interfaces to suit a foreign culture Game localisation"
"G06F9/455","Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines","","In-circuit emulationDynamic binary instrumentation may use techniques similar to emulators and binary optimizersVirtual memoryTerminal emulationComputer simulation, in which a model of a system under investigation is beng simulated","G06F11/36|G06F11/3644|G06F12/00|G06F13/105|G06F30/00","","","EmulationIn computing, emulation refers to the duplication and imitation of the functions of one computer system/program by another computer system/program, different from the first one, so that the emulated behaviour fully or closely resembles the behaviour of the original system/program.","This place covers: The emulation of entities, e.g. operating systems, processors, classified under  ."
"G06F9/45504","{Abstract machines for programme code execution, e.g. Java virtual machine [JVM], interpreters, emulators}","","","","","","","This place covers: Software implementation of a machine (computer) that executes programs like a physical machine: Java Virtual Machine (JVM); Microsoft .NET common language runtime (CLR); Smalltalk virtual machines."
"G06F9/45508","{Runtime interpretation or emulation, e g. emulator loops, bytecode interpretation}","","Handling natural language data","G06F40/00","","","","This place covers: Interpretation of high-level language code, e.g. BASIC."
"G06F9/45512","{Command shells}","","","","","","","This place covers: Giving commands to a computer (OS) by means of a (graphical) user interface. These commands can be given via the command line or by performing actions on GUI objects.The commands are typically interpreted by a command interpreter. Scripts, recording and executing GUI command scripts."
"G06F9/45516","{Runtime code conversion or optimisation}","","","","","","","This place covers: The execution of binary code/bytecode that is not native to the current run-time execution environment by translating the non-native binary code/bytecode into native code just before execution and subsequently executing the native code . Subsequently, execution can be optimised as follows: By performing a retranslation of the non-native binary code/bytecode yielding more optimal native binary code e.g. by taking into account run-time information; By directly transforming the native binary code yielding more optimal native binary code . The   also deals with the initial and subsequent run-time transformation of native binary code into more optimal native binary code. For the purpose of completeness, the   also deals with the translation of intermediate bytecode to a different intermediate bytecode (e.g. Java bytecode to UCSD P-code). This however, is a more theoretic possibility and will not occur frequently. The majority of the documents in this class deal with the translation of intermediate bytecode to native binary code and more specifically with the dynamic compilation of Java bytecodes into native code (JIT compilation)."
"G06F9/4552","{Involving translation to a different instruction set architecture, e.g. just-in-time translation in a JVM}","","","","","","","This place covers: Translation of code at runtime prior to executing it natively, e.g. bytecode into native machine code. Dynamic compilation."
"G06F9/45525","{Optimisation or modification within the same instruction set architecture, e.g. HP Dynamo}","","","","","","","This place covers: Optimisations carried out at runtime without changing the instruction set architecture."
"G06F9/45529","{Embedded in an application, e.g. JavaScript in a Web browser}","","Dynamic loading of plugins/add-ons","G06F9/44526","","","","This place covers: Conversions or optimisations, e.g. done by JavaScript engines or similar plugin technologies built into another execution environment."
"G06F9/45533","{Hypervisors; Virtual machine monitors}","","","","","","","This place covers: Simultaneously executing multiple operating systems using a Virtual Machine Monitor (VMM). The following passage, taken from US2004230794, provides a good definiton of a VMM: 'A VMM enables plural operating systems to run on a single machine by ""virtualizing"" the entire machine. Conventionally, an operating system controls the use of the physical hardware resources of a machine (e.g., the memory, the processor, etc.), and thus the actual hardware of the machine is exposed to the operating system. When a VMM is used, however, the machine's hardware (e.g., devices) are only exposed to the VMM. The VMM, then, exposes ""virtual"" machine components to the operating systems'.In  , plural operating systems execute simultaneously as guest and host (without a VMM).. Process switching for virtual machines; Handling of non-implemented instructions; Address trapping for emulating other memory architectures; Host/guest and mode switching instructions; Switching between endian modes (endian conversion on a bus  )."
"G06F9/45537","{Provision of facilities of other operating environments, e.g. WINE  (I/O emulation G06F13/105)}","G06F13/105","","","","","","This place covers: Emulation of one OS by another OS Simultaneously executing first and second operating systems by executing the second OS as a guest OS on top of the first OS (the host OS). No virtual machine monitor (VMM) is needed. The use of guest and host OSs is described in the following passage, taken from US2004230794: ' Certain techniques allow operating systems to exist side-by-side on the same machine without the use of a virtual machine monitor. One such technique is to have one operating system act as a ""host"" for the other operating system. (The operating system that the ""host"" is hosting is sometimes called a ""guest."") In this case, the host operating system provides the guest with resources such as memory and processor time ' Interrupt handling of other OS Non I/O services of other OS, e.g. facilities for emulation of virtual memory Memory mapping and address trapping for emulating I/O"
"G06F9/45541","{Bare-metal, i.e. hypervisor runs directly on hardware}","","","","","","","This place covers: A bare-metal hypervisor runs directly on the host's hardware to control the hardware and to manage guest operating systems, e.g. Citrix XenServer, VMware ESX, Microsoft Hyper-V.."
"G06F9/45545","{Guest-host, i.e. hypervisor is an application program itself, e.g. VirtualBox}","","","","","","","This place covers: Hypervisor runs within a conventional operating system environment."
"G06F9/4555","{Para-virtualisation, i.e. guest operating system has to be modified}","","","","","","","This place covers: Para-virtualisation is a virtualization technique that presents a software interface to virtual machines that is similar but not identical to that of the underlying hardware."
"G06F9/45554","{Instruction set architectures of guest OS and hypervisor or native processor differ, e.g. Bochs or VirtualPC on PowerPC MacOS}","","","","","","","This place covers: Mechanisms to adapt the instruction set of a guest system to the instruction set offered by the underlying hypervisor and/or native processor."
"G06F9/45558","{Hypervisor-specific management and integration aspects}","","","","The following CPC breakdown codes are used for refined classification. Please also consider classification in the main trunk symbols referenced by the breakdown codes.","","","This place covers: Management and integration aspects of hypervisors. Functions needed to manage virtual machines or to integrate them into the execution environment that are specific to a hypervised system, e.g. handling of virtual machine instances, creating, cloning, deleting instances, starting and stopping virtual machines, distributing and migrating instances, managing I/O and storage access, isolating virtual machines for security reasons, managing memory of instances."
"G06F2009/45562","{Creating, deleting, cloning virtual machine instances}","","","","","","","This place covers: Handling single instantations of virtual machines, e.g. creation from template or copy of another instance."
"G06F2009/45566","{Nested virtual machines}","","","","","","","This place covers: Virtual machines running within other virtual machines."
"G06F2009/4557","{Distribution of virtual machine instances; Migration and load balancing}","","","","","","","This place covers: Managing the placement of virtual machine instances."
"G06F2009/45575","{Starting, stopping, suspending or resuming virtual machine instances}","","Program initiatingTask life-cycle in general","G06F9/445|G06F9/485","","","","This place covers: Specifics about start/stop in the context of virtual machines."
"G06F2009/45579","{I/O management, e.g. providing access to device drivers or storage}","","Loading of device driversInternal functioning of device drivers","G06F9/4411|G06F13/102","","","","This place covers: Specifics about input/output within virtual machines, e.g. accessing storage, or external devices, using specific drivers."
"G06F2009/45583","{Memory management, e.g. access or allocation}","","Allocation of memory to service a requestMemory management in general","G06F9/5016|G06F12/00","","","","This place covers: Specifics about memory management within virtual machines, e.g. accessing and allocating memory."
"G06F2009/45587","{Isolation or security of virtual machine instances}","","Security arrangements in general","G06F21/00","","","","This place covers: Mechanisms to isolate virtual machine instances from other instances; protection of virtual machines."
"G06F2009/45591","{Monitoring or debugging support}","","Monitoring and debugging in general, ","G06F11/30|G06F11/36","","","","This place covers: Specifics to enable monitoring or debugging within virtual machines."
"G06F2009/45595","{Network integration; Enabling network access in virtual machine instances}","","Network virtualisationNetwork-specific arrangements for supporting networked applications","H04L12/4641|H04L67/00","","","","This place covers: Specifics to enable network access of virtual machines."
"G06F9/46","Multiprogramming arrangements","","Object-oriented software designMulti-threading at the hardware levelSaving and restoring the state of a system, i.e. hibernationBatch processingSuspend and resume task / process / thread execution without details on context saving and restoringSaving and restoring the state of a mobile agent together with additional details on the mobile agent itselfSaving and restoring program state during debuggingAccess rights for memory resources, e.g. access to memory according to privilege ringsAccess rights associated to human beings or documents where the final aim is to enforce protection at the user level without giving technically relevant details on the multiprogramming implementationDocuments just mentioning a multiprocessing / distributed object-oriented systems and which focus on a specific use / application (e.g. e-commerce, monitoring, information retrieval, security) , , , Documents mentioning a transaction but dealing, in fact, with nothing more than techniques involving a request for a service, without any detail on the ACID (Atomicity, Consistency, Isolation, Durability) properties; e.g. e-commerce transactionsNetwork- and protocol-specific aspectsAspects already covered by , , , See special rules of classification of the corresponding classes","G06F8/24|G06F9/3851|G06F9/4418|G06F9/4843|G06F9/485|G06F9/4862|G06F11/3636|G06F12/14|G06F21/30|G06Q30/00|G06F11/00|G06F16/00|G06F21/00|G06Q30/00|H04L29/06|G06F9/48|G06F9/50|G06F9/52|G06F9/54","Rule 1When a document qualifies for one of the groups in the table of rule 2 below, the group  should not be assigned.Rule 2The following table specifies the group to be assigned:Technical details onGroup to be assignedSaving or restoring of program or task context Saving or restoring of program or task context with multiple register sets. This group takes precedence over Program control block organisation. This group takes precedence over Structure and arrangements for distributed object oriented systems, e.g. CORBA, Jini, DCOMTransaction processing, namely transactions involving the ACID (Atomicity, Consistency, Isolation, Durability) propertiesTransactional memory, i.e. transparent support for the definition of regions of code that are considered a transaction, the support being provided either in hardware, software or with hybrid-solutions. This group takes precedence over . For speculative lock acquisition,  takes precedence Specific access rights for resources, e.g. using capability registerRule 3The following text specifies the groups which could be assigned in addition to the groups of rule 2 above, to cover further technical details; the group(s) identified as context information should also be checked and assigned, if relevant:Further technical details on:The structure of bridges between different distributed object-oriented systemsContext information: The lookup of interfaces and/or the structure of lookup servers / repositoriesContext information: The handling of references to remote objects / namespace implementation details within the context of distributed object-oriented systemsContext information: ","G06F9/46|G06F9/461|G06F9/461|G06F9/462|G06F9/461|G06F9/463|G06F9/465|G06F9/466|G06F9/466|G06F9/528|G06F9/467|G06F9/468|G06F9/465|G06F9/465|G06F9/465","","This place covers: aspects of multiprogramming, i.e. where more than one process / task is present and this presence is essential for identifying the problem and / or the solution; a process / task is defined here as a program in execution."
"G06F9/48","Program initiating; Program switching, e.g. by interrupt","","Specific details on power distribution and power savingScheduling of printer jobsInstruction streams within a processor (e.g. hardware threads) and instruction level detailsSuspension and resumption at system level (i.e. involving the bootstrapping)Mere loading of code linked to the initiationDetails on the task context structure as well as on its saving and restoringScheduling in terms of spaceSee special rules of classification for Process migration in the context of load (re-)balancing, without any technically relevant detail on the migration itselfMere starting of a backup application at a certain date/timeLow level (bus-related) details of interrupt handling and interrupt controllersMere starting of an antivirus application at a certain date/timeScheduling of human resources","G06F1/3203|G06F3/1296|G06F9/3836|G06F9/4418|G06F9/445|G06F9/461|G06F9/50|G06F9/5088|G06F11/1461|G06F13/24|G06F21/56|G06Q10/00","Rule 1When a document qualifies for one of the groups in the table of rule 2 below, the group  should not be assigned.Rule 2The following table specifies the group to be assigned:Technical details ongroup to be assignedInitiation of a task by means of an interrupt, i.e. the aspects of handling/servicing an interruptInterruptI interrupt priority mechanisms. This group takes precedence over InitiationI of a task by means of an timer related interrupt. This group takes precedence over InitiationI of a task by means of an interrupt with variable priority. This group takes precedence over Initiation of a task by means of an interrupt with variable priority, said priority being time dependent. This group takes precedence over  and Initiation, transfer and dispatch of a task, i.e. a program in execution, by another program; creation, e.g. fork() system call, and initiation, e.g. exec() system call, of a task / process / thread, virtual machine in the same or different machineTask life-cycle, e.g. stopping, restarting, resuming execution. This group takes precedence over . For scheduling algorithms and internal operation of a scheduler,  takes precedence Resuming the execution of a task on a different machine, i.e. migration. This group takes precedence over . This group takes precedence over . For migration for load balancing purposes,  takes precedence Mobile agents, i.e. tasks specifically designed to migrate. This group takes precedence over . This group takes precedence over . This group takes precedence over . For cloning and replication of mobile agents, only  should be assigned. For migration policy, e.g. auction, contract negotiation, of mobile agents, only  should be assigned. Scheduling strategies for dispatcher, e.g. round robin, multilevel priority queues; internal operation of a scheduler Algorithms for real-time scheduling of processes, i.e. scheduling taking into account the deadlines of the applications being executed. This group takes precedence over . This group takes precedence over .Power and heat aware scheduling of tasks. This group takes precedence over . This group takes precedence over Rule 3The following text specifies the groups which could be assigned in addition to the groups of rule 2 above, to cover further technical details; the group(s) identified as context information should also be checked and assigned, if relevant:Further technical details on:Exception handlingContext information: Application starting, stopping, resuming Context information: Scheduling of tasks on multiprocessor systemsContext information: , , Scheduling of a set of tasks by taking into account precedence and dependency constraints, or time and/or occurrence of eventsContext information: , , Scheduling of a set of tasks by taking into account constraints on resources, resource based scheduling of tasksContext information: , , Internals of a task schedulerContext information: , , ","G06F9/48|G06F9/4812|G06F9/4812|G06F9/4818|G06F9/4812|G06F9/4825|G06F9/4812|G06F9/4831|G06F9/4812|G06F9/4831|G06F9/4837|G06F9/4843|G06F9/4843|G06F9/4881|G06F9/485|G06F9/4843|G06F9/485|G06F9/5088|G06F9/4856|G06F9/4843|G06F9/485|G06F9/4856|G06F9/4868|G06F9/4875|G06F9/4862|G06F9/4881|G06F9/4843|G06F9/4881|G06F9/4887|G06F9/4843|G06F9/4881|G06F9/4893|G06F9/4812|G06F9/485|G06F9/4881|G06F9/4887|G06F9/4893|G06F9/4881|G06F9/4887|G06F9/4893|G06F9/4881|G06F9/4887|G06F9/4893|G06F9/4881|G06F9/4887|G06F9/4893","","This place covers: transfer, initiation or dispatching of tasks, i.e. programs in execution, either locally or within a distributed system"
"G06F9/50","Allocation of resources, e.g. of the central processing unit [CPU]","","","","Rule 1When a document qualifies for one of the classes in the table of rule 2 below, the class  should not be assigned.Rule 2The following table specifies the class to be assigned:Technical details on:Class to be assigned:Allocation of resources to service a requestAllocation of resources to service a request, the resources being hardware resources other than CPUs, Servers and Terminals This class takes precedence over Allocation of memory resources to service a request This class takes precedence over  This class takes precedence over  for documents detailing both the allocation and release of memory resources, the class  should also be assigned Release of resourcesThis class takes precedence over  This class takes precedence over  For documents detailing both the allocation and release of memory resources, the class  should also be assigned Allocation of processing resources, e.g. CPUs, Servers, Terminals, processes, threads, virtual machinesA llocation of processing resources by considering data affinity This class takes precedence over  This class takes precedence over A llocation of processing resources by considering the execution order of a plurality of tasks, e.g. taking priority or time dependency constraints into consideration. Candidates for this group are documents dealing with requests for composite (web) services, where the various components should execute in a certain order and resources for said execution should be assigned accordingly. Also included are documents dealing with ""workflow"" like systems, where a request to ""execute"" a project definition, comprising a set of interrelated actions, is sent to a server This class takes precedence over  This class takes precedence over A llocation of processing resources by considering hardware capabilities This class takes precedence over  this class takes precedence over Allocation of processing resources by considering the load This class takes precedence over  This class takes precedence over Allocation of processing resources by considering software capabilities, namely software resources associated or available to the machine, e.g. Web services offered by a specific machine This class takes precedence over  This class takes precedence over  Partitioning or combining of resources This class should contain also documents dealing with cluster membership, i.e. assignment of a server to a certain group based on some criteria (see exemplary documents WO0156785, EP0805393). Algorithms for mapping a plurality of inter-dependent sub-tasks onto a plurality of physical CPUs This class takes precedence over  Grid computing, cloud computing With the expression grid / cloud computing it is meant an environment where multiple services are offered by the various members of the grid (often making use of idle periods), said members being usually located over a large scale network. Candidate documents should have at least one of the following concepts: i) set up of a grid, e.g. registering a new member, re-organizing the grid; ii) usage of a service in the grid, e.g. locating the member, servicing a request. This class takes precedence over  Logical partitioning of resources; management and configuration of virtualized resources This group deals with the creation and management (e.g. allocation) of logical partitions and resulting virtual machines in multiprocessor systems; it also deals with the concept of virtualization in general, namely the mere management (e.g. creation, deletion) of an abstract, logical representation of a resource and its configuration (e.g. re-definition of its behaviour). This class takes precedence over  For documents detailing the migration of a virtual machine to a different node, the class  should also be assigned Techniques for balancing or rebalancing the load in a distributed system by taking into account the load of the whole system Techniques for balancing or rebalancing the load in a distributed system by migrating tasks / jobs / virtual machines This class takes precedence over  For documents detailing the migration of a task/job/virtual machine to a different node, the class  should also be assigned Allocation of resources based on power and heat considerationsRule 3The following table specifies the classes which could be assigned in addition to the classes of rule 2 above, to cover further technical details; the class(es) identified as Context information should also be checked and assigned, if relevant:Further details on:Allocation based on performance criteriaClass to be assigned: Context information: , , , , , Allocation based on proximityClass to be asigned: Context information: , , , , , Indication of availability of resourcesClass to be assigned: Context information: All groups belonging to Enforcing and/or taking into account lower and/or upper ceilings on resource usage in the context of resource allocationClass to be assigned: Context information: All groups belonging to Cluster membershipClass to be assigned: Context information: Dependency or time-specific aspects which are taken into account during the allocationClass to be assigned: Context information: Allocation of low-level processor resources, e.g. logical units, registers, cache lines, decoding stagesClass to be assigned: Context information: , , Monitoring techniques used in conjunction with the CPU / thread allocationClass to be assigned: Context information: All groups belonging to Offloading computations (e.g. because lacking some of the necessary capabilities)Class to be assigned: Context information: , , , , , Allocation based on priorityClass to be assigned: Context information: , , , , , Creation, use, management of pool of resourcesClass to be assigned: Context information: All groups belonging to Controlling aspects of an already submitted request, e.g. polling for a status, deleting / modifying the requestClass to be assigned: Context information: , , , , , Reservation of resources so as to have them ready at the time of the actual allocationClass to be assigned: Context information: All groups belonging to Selection, by a broker, based on the submitted request, of an appropriate server via a registry or a yellow pages serverClass to be assigned: Context information: , , , , , Session management Class to be assigned: Context information: , , , , , Task decompositionClass to be assigned: Context information:, , , , , Selection of a thread / process within a multithreaded / multiprocessing machine, said selection being aimed to service a requestClass to be assigned: Context information: , , , , , Workload prediction within the context of CPU / process allocation and load rebalancingClass to be assigned: Context information: , Workload threshold within the context of CPU / process allocation and load rebalancingClass to be assigned: Context information: , remote execution techniques whereby program code is executed remotely from the client that initiated the execution and the client provides the code to the remote machineClass to be assigned: Context information: All groups belonging to ","G06F9/50|G06F9/5005|G06F9/5005|G06F9/5011|G06F9/5005|G06F9/5011|G06F9/5022|G06F9/5016|G06F9/5005|G06F9/5011|G06F9/5016|G06F9/5022|G06F9/5027|G06F9/5005|G06F9/5027|G06F9/5033|G06F9/5005|G06F9/5027|G06F9/5038|G06F9/5005|G06F9/5027|G06F9/5044|G06F9/5005|G06F9/5027|G06F9/505|G06F9/5005|G06F9/5027|G06F9/5055|G06F9/5061|G06F9/5061|G06F9/5066|G06F9/5061|G06F9/5072|G06F9/5061|G06F9/4856|G06F9/5077|G06F9/5083|G06F9/5083|G06F9/4856|G06F9/5088|G06F9/5094|S06F209/5001|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|S06F209/5002|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|S06F209/5003|G06F9/50|S06F209/5004|G06F9/50|S06F209/5005|G06F9/5061|S06F209/5006|G06F9/5038|S06F209/5007|G06F9/5011|G06F9/5016|G06F9/5022|S06F209/5008|G06F9/50|S06F209/5009|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5011|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|S06F209/5010|G06F9/50|G06F2209/5013|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5014|G06F9/50|G06F2209/5015|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5016|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5017|G06F9/50A6|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5018|G06F9/5027|G06F9/5033|G06F9/5038|G06F9/5044|G06F9/505|G06F9/5055|G06F2209/5019|G06F9/5083|G06F9/5088|G06F2209/5019|G06F9/5083|G06F9/5088|S06F209/5409|G06F9/50","","This place covers: selection, allocation and de-allocation of hardware and/or software resources, like servers, processes, threads, CPUs, memory; combination and/or partitioning of resources, e.g. cloud computing, hypervisors and logical partitions; mapping of tasks onto parallel / distributed machines; load balancing and re-balancing of resources in distributed systems."
"G06F9/52","Program synchronisation; Mutual exclusion, e.g. by means of semaphores","","Speculative instruction issuing and/or data consistency, Transaction processingArbitration of access on a busConcurrency management in a database","G06F9/3842|G06F9/3834|G06F9/466|G06F13/14|G06F16/2308","Rule 1When a document qualifies for one of the groups in the table of rule 2 below, the group  should not be assignedRule 2The following table specifies the group to be assigned:Technical details onGroup to be assignedBarrier synchronisationAlgorithms to detect and / or avoid deadlocks when tasks interact with each otherMutual exclusion algorithms, specific implementations of locks and other means to ensure a ""correct"" (from the concurrency point of view) access to a shared resourceSpeculative execution beyond synchronisation primitives (e.g. busy lock). This group takes precedence over ; e.g. if a document discloses a mutual exclusion algorithm involving speculative execution beyond busy locks, then it should be classified only in the  and not also in the Rule 3The following text specifies the groups which could be assigned in addition to the groups of rule 2 above, to cover further technical details:Further technical details on:Low level features of atomic instructions (e.g. test & set) used to implement locks / mutual exclusion primitivesContext information: , Tokens (e.g. cooperative locking), token managers and lock managersContext information: , Multi-mode locks, i.e. with locks specifying also a mode (e.g. read-write)Context information: , ","G06F9/52|G06F9/522|G06F9/524|G06F9/526|G06F9/526|G06F9/528|G06F9/526|G06F9/528|G06F9/526|G06F9/528|G06F9/526|G06F9/528|G06F9/526|G06F9/528","","This place covers: Arbitrating access from tasks to shared resources (e.g. mutual exclusion), synchronising the execution of tasks with respect to each others (e.g. producer - consumer) ; a task is defined here as a program in execution."
"G06F9/54","Interprogram communication","","Communication between a device and a CPU without any technically relevant detail on multiprogramming concepts or with device specific details, ,  (for device drivers) Interaction of the user with the system, i.e. the GUI, and not between the Processes / applications subsequent to the user interactionCommunication which does not involve multiprogramming concepts, e.g. invocation of a subroutine Pattern-adaptersNon-remote method invocation between objectsArchitectural details, e.g. interface repositories, object adapters, on distributed object-oriented systems, e.g. CORBA, DCOM Communication-specific details of the remote method invocation should (also) be classified in Allocation of a remote service to a clientCommunication between tasks but predominant aspect peculiar of another field, e.g. monitoring, information retrieval on the web, software download and installation, , Addressing memoryHardware mechanisms for inter-CPU communicationCollaborative editing on a file without any technically relevant details on the event handling aspect, Network- and protocol-specific detailsEvent management relating to network management, e.g. alarms produced by network devices, and no technically relevant details on the multiprocessing aspect is presentMessages being distributed over a network, i.e. e-mails, instant messaging, ","G06F3/00|G06F13/00|G06F13/102|G06F3/048|G06F9/44|G06F9/44|G06F9/449|G06F9/548|G06F9/465|G06F9/50|G06F11/30|G06F16/95|G06F8/65|G06F12/02|G06F15/163|G06F40/10|G06Q10/10|H04L29/06|H04L41/06|H04L51/00|G06Q10/107","Rule 1When a document qualifies for one of the groups in the table of rule 2 below, the group  should not be assigned.Rule 2The following table specifies the group to be assigned:Technical details onGroup to be assignedAdapter mechanisms e.g. between incompatible applicationsCommunication between tasks, either on the same machine or on different ones, by subscribing to events and issuing event notifications when certain events happen, e.g. Event Management Systems, Unix alarms; communication aspects related to the broadcasting of the notificationsUser-generated data transfer from the process / application point of view, e.g. clipboards, dynamic data exchange (DDE), object linking and embedding (OLE)Communication of processes via buffers, shared memory, pipes, sockets and the likeCommunication between tasks residing in different layers e.g. user- and kernel-spaceCommunication of processes via a message passing system, i.e. messaging middleware, and the inherent technicalities, e.g. message structure or queue handling; delivery of messages according to preferences of the recipients (which have to be processes)Implementation of Remote Procedure Calls, e.g. stubs, (un-)marshalling of parameters, namely invocation of a procedure at a remote location; lightweight RPC, i.e. procedure call between protection domains / different address spaces on a single machineImplementation of Remote Method Invocations, i.e. details which are peculiar to RPC between (mainly Java and COM) objects, e.g. object serialization, stub / proxy download. This group takes precedence over .Rule 3The following text specifies the groups which could be assigned in addition to the groups of rule 2 above, to cover further technical details:Further technical details on:Communication aspects related to task execution in a client-server systemContext information: All groups belonging to Interception of communications between tasks / layersContext information: All groups belonging to Handling of events within a single system, e.g. Unix alarmsContext information: Distributed event management systems or handling of events produced in a distributed systemContext information: Event handling related to the execution of a GUI and as long as the event handling aspect is technically relevantContext information: Broadcasting / multicasting and sequence related problems of event related messages and as long as the network aspect, if any, is not predominantContext information: Exchange of messages between processes by using a Message Oriented Middleware, e.g. Java Messaging ServicesContext information: Particular techniques for handling message queues (or similar structures)Context information: Remote execution techniques whereby program code is executed remotely from the client that initiated the execution and the client provides the code to the remote machineContext information: All groups belonging to ","G06F9/54|G06F9/541|G06F9/542|G06F9/543|G06F9/544|G06F9/545|G06F9/546|G06F9/547|G06F9/547|G06F9/548|G06F9/54|G06F9/54|G06F9/542|G06F9/542|G06F9/542|G06F9/542|G06F9/546|G06F9/546|G06F9/54","","This place covers: Communication between tasks, i.e. programs, processes, threads in execution, either on the same machine or on different ones, where the multiprogramming aspect is relevant, e.g. Inter-Process-Communication."
"G06F11/00","Error detection; Error correction; Monitoring  (error detection, correction or monitoring in information storage based on relative movement between record carrier and transducer G11B20/18; monitoring, i.e. supervising the progress of recording or reproducing G11B27/36; in static stores G11C29/00)","G11B20/18|G11B27/36|G11C29/00","Testing of digital circuitsError detection, correction or monitoring in control mechanismsMethods or arrangements for verifying the correctness of marking on a record carrierMonitoring patterns of pulse trainsCoding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codesDigital transmission of dataCounter-measures to a fault","G01R31/00|G05B|G06K5/00|H03K5/19|H03M13/00|H04L|H04L29/14","Implementation details of particular digital data processing techniques applied to error detection, error correction or monitoring are classified in the relevant subgroups of .The error detection/correction process in neural networks is also covered ().","G06F11/00|G06F11/1476","FaultPhysical defect, imperfection, or flaw that occurs within some hardware component, or logical defect of a piece of software. Essentially, the definition of a fault, as used in the fault tolerance community, agrees with the definition found in the dictionary. Faults may be permanent, transient or intermittent.ErrorThe logical manifestation of a fault, observable in terms of incorrect instructions of or corrupted data in a (computer) system. E.g. a fault in a DRAM cell will never be observed if the memory location is never accessed. Specifically, an error is a deviation from accuracy or correctness.FailureThe incorrect functioning of a system as perceivable by a user or the system's environment as a consequence of an error. A failure is the non-performance, the untimely performance or the performance in a subnormal quantity or quality of some action that is due or expected.Redundant hardwareAdditional hardware for performing the same function as another hardware part, provided that in faultless operation you could renounce on either hardware parts of the system without loosing functionality.Data representationA physical or logical encoding (scheme) for data, which allows the latter to be processed, stored or transmitted by a machine.Redundancy in data representationA representation of data using more resources than strictly necessary to encode the desired information such that in the error free situation one could renounce to some of said resources without loosing information.Redundancy in operationPerforming (a set of) operations more than once, or performing sequentially different implementations of a particular function, or performing additional operations which (allow to) restore a system in a state from which its correct operation can be resumed after a failure.Time diversitythe concept to have an redundant system in which one of the redundant components operates with a delay with respect to the other in order to avoid common mode failures that would affect both redundant components in the same way at the same time, thereby not being detectable/correctable.Master-checker setupA redundant configuration in which a master CPU drives the system. The checker CPU is synchronized (often at clock level) with the master. It processes the input data stream as the master (and often also the very same program). Whenever the master drives an output signal, the checker compares its own value with the data written by the master. A mismatch triggers an error signal. The master-checker mode is supported in many modern microprocessors by a comparator integrated into the pin driver circuitry, thus reducing the external logic to a few chips for interfacing the error signals."" The master-checker system generally gives more accurate answers by ensuring that the answer is correct before passing it on to the application requesting the algorithm being completed. It also allows for error handling if the results are inconsistent. Depending on the merit of a correct answer, a checker-CPU may or may not be warranted. In order to alleviate some of the cost in these situations, the checker-CPU may be used to calculate something else in the same algorithm, increasing the speed and processing output of the CPU system."" There are two possible configurations: Master-Listener and Cross-Coupled. The Master-Listener lock step configuration pairs two processors, with one as a complete Master and the other as a complete Listener, the latter having disabled output drivers. In the Cross-Coupled configuration, one of the processors, the SI-Master, drives the system interface bus, while the other processor, the SC-Master, drives the secondary cache bus. The SI-Master has disabled output drivers for the secondary cache interface bus while the SC-Master has disabled output drivers for the system interface busNormal operating modeThe operation of a system or software once it is deployed and provides the desired service as opposed to its development, maintenance, test or idle time.Fault maskingHiding the presence of an fault to the user or the environment of a (computer system by means of some sort of redundancy such that the perceived system functionality is not affected.Active fault maskingTaking particular actions (e.g. reconfiguration, failover) not performed in the error free situation to mask a fault.Passive fault maskingWhen a system operates such that no particular action is necessary to mask a fault because all necessary operations are constantly performed independently of the presence of a fault (e.g. majority voting).Normal operating modethe operation of a system or software once it is deployed and provides the desired service as opposed to its development, maintenance, test or idle time. Interconnections are physical media and may be of point-to-point type or of bus type. Two interconnections are only considered redundant if: they both physically connect the same nodes, wherein nodes are the source producing or the final destination consuming the data to be transmitted, and are configured to perform the same data transmissions.Monitoringmonitoring refers to an extra functionality for observing properties of a running computing system in its normal operating condition without inputting test dataMirrored dataTwo copies of the data where it is supposed that both copies contain the same data at any moment.Backed up dataThe second copy of the data reflects the data of the first copy at a particular moment.","This place covers: Error avoidance ( ) Identification related to error detection / correction or monitoring ( ) Reliability and availability analysis of computing systems ( ) Error detection and/or correction (  and subgroups) Detection or location of defective computer hardware by testing at a time outside of ""normal operating mode"", e.g. during standby, idle time or at power on (  and subgroups) Checking the correct order of processing ( ) Monitoring on computing systems (  and subgroups) Preventing errors by analysing, debugging and testing software (  and subgroups)"
"G06F11/002","{protecting against parasitic influences, e.g. noise, temperatures}","","","","In this group the use of the Indexing Codes  and lower is mandatory.","G06F2201/00","",""
"G06F11/004","{Error avoidance  (G06F11/07 and subgroups take precedence)}","G06F11/07","","","In this group the use of the Indexing Codes  and lower is mandatory.This subgroup is only to be used for subject-matter for which no other technique (like fault-masking based on redundancy) to respond to the occurrence of a fault applies. If techniques corresponding to  and subgroups apply, the subject-matter must be classified there instead.","G06F2201/00|G06F11/07","","This place covers: All measures taken to prevent an error from happening. This can either be by preventing the fault from being present or by ensuring that the presence of the fault will not lead to an error."
"G06F11/006","{Identification  (G06F11/2289 takes precedence)}","G06F11/2289","","","In this group the use of the Indexing Codes  and lower is mandatory.","G06F2201/00","",""
"G06F11/008","{Reliability or availability analysis}","","","","","","ReliabilityThe term refers to the ability of a system or component to perform its required functions under stated conditions for a specified period of time.AvailabilityThe ratio of the total time a functional unit is capable of being used during a given interval to the length of the interval.DowntimeThe term downtime is used to refer to periods when a system is unavailable.UptimePart of active time during which an equipment, machine, or system is either fully operational or is ready to perform its intended function.MTBFMean Time Between failure is the predicted elapsed time between inherent failures of a system during operation.MTTFMean Time to Failure is the time taken for a part or system to fail for the first time.MTTRMean Time To Repair is a basic measure of the maintainability of repairable items. It represents the average time required to repair a failed component or device.MTTRMean Time To Recovery is the average time that a device will take to recover from any failure.","This place covers: Reliability theory describes the probability of a system completing its expected function during an interval of time. In reliability theory availability is the degree to which a system is in a specified functioning condition. In the literature various definitions can be found. One well established defines availability as ""the probability that a system is operating at a specified time t"", Barlow and Proschan: Mathematical Theory of Reliability (1975). A simple representation of availability is a ratio of the expected value of the uptime of a system to the aggregate of the expected values of up and down time. For example in the case of systems having a MTBF (Mean Time Between Failure) and MTTR (Mean Time to Recovery), availability = MTBF/(MTBF + MTTR). Typical terminology that the group contains: error prediction, failure rate, predictive maintenance, longevity, etc. A lot of documents deal with pure theory and propose new formula for better assessing a system in terms of reliability."
"G06F11/07","Responding to the occurrence of a fault, e.g. fault tolerance","","","","","","FaultPhysical defect, imperfection, or flaw that occurs within some hardware component, or logical defect of a piece of software. Essentially, the definition of a fault, as used in the fault tolerance community, agrees with the definition found in the dictionary. Faults may be permanent, transient or intermittent.ErrorThe logical manifestation of a fault, observable in terms of incorrect instructions of or corrupted data in a (computer) system. E.g. a fault in a DRAM cell will never be observed if the memory location is never accessed. Specifically, an error is a deviation from accuracy or correctness.FailureThe incorrect functioning of a system as perceivable by a user or the system's environment as a consequence of an error. A failure is the non-performance, the untimely performance or the performance in a subnormal quantity or quality of some action that is due or expected.Redundant hardwareAdditional hardware for performing the same function as another hardware part, provided that in faultless operation you could renounce on either hardware parts of the system without loosing functionality.Data representationA physical or logical encoding (scheme) for data, which allows the latter to be processed, stored or transmitted by a machine.Redundancy in data representationA representation of data using more resources than strictly necessary to encode the desired information such that in the error free situation one could renounce to some of said resources without loosing information.Redundancy in operationPerforming (a set of) operations more than once, or performing sequentially different implementations of a particular function, or performing additional operations which (allow to) restore a system in a state from which its correct operation can be resumed after a failure.Normal operating modeThe operation of a system or software once it is deployed and provides the desired service as opposed to its development, maintenance, test or idle time.Fault maskingHiding the presence of an fault to the user or the environment of a (computer system by means of some sort of redundancy such that the perceived system functionality is not affected.Active fault maskingTaking particular actions (e.g. reconfiguration, failover) not performed in the error free situation to mask a fault.Passive fault maskingWhen a system operates such that no particular action is necessary to mask a fault because all necessary operations are constantly performed independently of the presence of a fault (e.g. majority voting).Mirrored dataTwo copies of the data where it is supposed that both copies contain the same data at any moment.Backed up dataThe second copy of the data reflects the data of the first copy at a particular moment.","This place covers: Error detection/correction on computing systems using redundancy in data representation (also includes RAID systems involving parity) (  and subgroups). Error detection/correction on computing systems using redundancy in operations (  and subgroups). Error detection/correction on computing systems using redundancy in hardware (  and subgroups). Error or fault processing without redundancy (  and subgroups). Safety measures ( )"
"G06F11/0703","{Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation}","","Exception handling during concurrent executionError/fault detection or recovery by retryError/fault detection by checking the correct order of processing of a system or a programMonitoring per se, reporting or storing of non-error data, Protection against unauthorized use of memoryComputer security, e.g. detection of attacks, malware, unauthorised accessesNetwork security detection/protection against malicious trafficFault management in networks wherein the error/fault is related to the data exchange protocols or to the network equipments (e.g. routers or switches)Monitoring of traffic in a network or of network components (e.g. routers or switches)Monitoring testing in wireless networks","G06F9/3861|G06F11/14|G06F11/28|G06F11/30|G06F11/34|G06F12/14|G06F21/00|H04L29/06877|H04L41/06|H04L43/00|H04W24/00","A document classified in  -  must receive at least one classification for the ""functional aspect"" and at least one classification for the ""architectural context"" according to the two following actions.Action 1 – Classifying the functional aspect (see groups  - ):Classifying the document in a subgroup corresponding to the most relevant functional aspect of the error/fault processing described in the document; and its subgroups for the function of error/fault detection, e.g. comparing data to an error threshold; and its subgroups for the function of error/fault reporting/storing, e.g. performing a memory dump after detecting an error; for the function of root cause analysis, e.g. determining the first error event causing the others; for the function of error/fault remedying, e.g. executing a specific interrupt handler to clear the error/fault;A document can be classified in more than one group of the list defined above based on details of different functional aspects disclosed in the document.Action 2 – Classifying the architectural context (see groups  - ):Classifying the document in a subgroup ) corresponding to the most relevant architectural context described in the document;A document can be classified in more than one group under  based on details of different architectural contexts disclosed in the document;In case the document does not disclose any specific architectural context details or only refers to a general computer, the generic head group, , should be used.","G06F11/0703|G06F11/0793|G06F11/0751|G06F11/0793|G06F11/0751|G06F11/0766|G06F11/079|G06F11/0793|G06F11/0706|G06F11/0748|G06F11/0706|G06F11/0706","","This place covers: The methods for error/fault processing on computing systems in normal operating mode that do not imply the use of any redundancy techniques. The error/fault processing, as it is defined in the subgroup, comprises one or more of the following steps: the error detection step (  and subgroups) the error/fault reporting/storing step (  and subgroups) the root cause analysis step of the error/fault ( ) the remedying step ( ), wherein: the error/fault reporting/storing refers to collecting/storing of information related to the error/fault (e.g. a performing a memory dump after detecting an error). the root cause analysis of an error aims at identifying the initial cause of an error/fault. the remedying step refers to the actions taken on the computing system in order to overcome an error/fault."
"G06F11/0766","{Error or fault reporting or storing}","","Monitoring per se, reporting or storing of non-error data, ","G06F11/30|G06F11/34","","","",""
"G06F11/0796","{Safety measures, i.e. ensuring safe condition in the event of error, e.g. for controlling element}","","If such a system continues to operate albeit with degraded hardware or software functionality, additional classification symbols in the appropriate subgroups may be necessary.","G06F11/142","In this group the use of the Indexing Codes  and lower is mandatory.","G06F2201/00","","This place covers: A safe computer system protects its user(s) and/or environment from hazards whether its intended function is performed correctly or not. This group deals with measures taken to ensure that a computer-based system stays safe (i.e. does not present a danger to persons or its environment) when it is no longer able to provide its normal functionality due to the presence of an error. This requirement typically occurs in many real-time control systems. The subject-matter of is group is different from fault-masking since the latter attempts to maintain the desired functionality of a system in the presence of faults whereas this group relates to ensuring a safe condition when faults cannot be masked, thereby degrading the desired system functionality."
"G06F11/08","Error detection or correction by redundancy in data representation, e.g. by using checking codes","","Redundant storage of data, ","G06F11/1666|G06F11/2053","Generally only 1 class is given. Only invention information is classified.","","","This place covers: Documents where the error detection/correction in a computer system is done by redundancy in the representation of the data. Most often this redundancy arises from the fact that more bits are used to represent the data than strictly necessary. However, these groups cover as well cases where the data is stored twice, but in different formats (e.g. the second time using inverse logic). However, subject-matter where 2 (or more) identical copies of the data are stored, is not treated here (see informative references)"
"G06F11/10","Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's","","Protecting a block of data words","G06F11/1004","As soon as the redundant representation is stored on storage, the subject-matter should be classified in  and subgroups and not in other subgroups. This is independent of how the redundant representation is determined or what representation is used. Group is not used for classification.","G06F11/1076","Memorysolid state devices used as main memory which are either directly addressable by the associated CPU (meaning that they are located on the high speed bus), or are not addressable internal memories (such as registers and buffers). As such, memory is different from storage.Storagemedia from which data needs first to be loaded before it can be used for computing.","This place covers: Subject matter where more bits are used to represent the data than strictly necessary, however without representing the data twice (or more often). Subject-matter dealing with host-to-memory or host-to-host transfers is classified in this group per se, except when the protection is on the level of blocks of data (which is in  )."
"G06F11/1004","{to protect a block of data words, e.g. CRC or checksum  (G06F11/1076 takes precedence; security arrangements for protecting computers or computer systems against unauthorized activity G06F21/00)}","G06F11/1076|G06F21/00","Security arrangements for protecting computers or computer systems against unauthorized activityComputer virus detection or handlingUsing checking codes for detecting unauthorised modificationsUsing checking codes in data communication","G06F21/00|G06F21/00|G06F21/00|H04L1/00","","","","This place covers: The use of checking codes on bigger units of data than a single word to detect the presence of errors in the data. This group does not cover correction of data. In this group, it is irrelevant for what purpose the checking is being used (e.g. for storing the data in memory, for transmission of the data to another component in the computing system, ...) as long as it is related to error detection."
"G06F11/1008","{in individual solid state devices  (G06F11/1004 takes precedence)}","G06F11/1004","Protection of blocks of data being transferred (from memory to memory or between host and memory)Parity RAID in storage","G06F11/10|G06F11/1076"," takes precedence.","G06F11/1004","","This place covers: That subject-matter where the error detection and/or correction is done on data stored in a single solid state device (i.e. the detection/correction is done when reading data from or writing data into the memory). It is independent of what function the solid state device has in the system. The relevant criterium is the type of component on which the data is stored (i.e. solid state devices in contrast to disks, tapes or other storage devices with moving components)."
"G06F11/1012","{using codes or arrangements adapted for a specific type of error  (G06F11/1048 takes precedence)}","G06F11/1048","",""," takes precedence.","G06F11/1048","","This place covers: This group and its subgroups cover specific code arrangements, i.e. documents describing how the ECC codes to be applied to the data are determined. As an example, documents describing row and column parity are classified here"
"G06F11/1016","{Error in accessing a memory location, i.e. addressing error}","","Protection against unauthorized access to memory","G06F12/14","","","",""
"G06F11/1024","{Identification of the type of error}","","","","Not used for classification.","","",""
"G06F11/1032","{Simple parity}","","","","Not used for classification","","",""
"G06F11/1036","{Unidirectional errors}","","","","Not used for classification.","","",""
"G06F11/1044","{with specific ECC/EDC distribution}","","Parity distribution in a Redundant Array of Independent storage devices","G06F11/108","Only classify here when no other group applies. (code arrangements) takes precedence. (hardware arrangements) takes precedence.","G06F11/1012|G06F11/1048","","This place covers: ECC codes where different bits of a data word are stored in different memory modules. Documents classified here, do not deal with calcualtion of ECC/EDC but only on where the data with the corresponding code is stored in the device (e.g. on different modules of the same device)."
"G06F11/1048","{using arrangements adapted for a specific error detection or correction feature}","","Parity in RAID systems","G06F11/1076","","","","This place covers: This group and its subgroups cover coding where the hardware plays a role, e.g. to make the error correction or detection faster, to reduce the power consumption for detecting/correcting errors, ... The hardware involved must be described."
"G06F11/1052","{Bypassing or disabling error detection or correction}","","","","","","","This place covers: This group covers documents in which no error detection/correction by redundant coding is performed at all in the normal situation."
"G06F11/1056","{Updating check bits on partial write, i.e. read/modify/write}","","","","Not used for classification.","","",""
"G06F11/106","{Correcting systematically all correctable errors, i.e. scrubbing}","","Memory refresh tehniques","G11C","","","",""
"G06F11/1064","{in cache or content addressable memories}","","","","","","","This place covers: This group covers ECC when it concerns a feature which is specific to caches or content addressable memories. For instance if an additional ECC is used for the cache with respect to the memory."
"G06F11/1068","{in sector programmable memories, e.g. flash disk  (G06F11/1072 takes precedence)}","G06F11/1072","",""," takes precedenceDocuments classified in this group should be sent to  as well.","G06F11/1072|G11C29/00","",""
"G06F11/1072","{in multilevel memories}","","Architectural details of multilevel memories","G11C","Documents classified in this group should be sent to  as well.","G11C29/00","","This place covers: Covers all subject-matter related to memories of which the cells can store more than 2 values."
"G06F11/1076","{Parity data used in redundant arrays of independent storages, e.g. in RAID systems}","","","","If the document can be classified in a subgroup of the , then it should not appear in the head subgroup. Only those documents which cannot be classified in one or several subgroups (e.g. ,  etc) have to be classified in the head subgroup.It is important to evaluate whether the parity calculation aspect is present and if specifics about fault recovery / rebuilding are present in the document. If such topic is not present of if the document talks about general parity aspects mixed with other topics, the Indexing Code groups should be used.","G06F11/1076|G06F11/108|G06F11/1084","RAIDRedundant Array of Independent Disks is a technique for implementing fault tolerance in storage devices.RebuildAction of regenerating lost data from redundant data present in available drives / memories.JBODJust a Bunch Of Disks represent a group of disks without particular redundant scheme implemented.","This place covers: Redundancy using parity calculation and stripping in redundant arrays of storage devices such as : Hard Drives (e.g. RAID) Semiconductor memories (e.g. RAID of SSD/Flash disks) Optical Drives (e.g. RAID in ODD archives) Tape (e.g. RAIT)"
"G06F11/1084","{Degraded mode, e.g. caused by single or multiple storage removals or disk failures}","","","","","","RAIDRedundant Array of Independent Disks is a technique for implementing fault tolerance in storage devices.","This place covers: Using the parity to reconstruct data which would otherwise have been lost when a storage device is failing or is removed. When the reconstruction takes place once a new disk is available,   subgroup is used. When the reconstruction takes place on a spare disk that was available,   subgroup is used."
"G06F11/14","Error detection or correction of the data by redundancy in operation  (G06F11/16 takes precedence)","G06F11/16","","","In this group the use of the Indexing Codes  and lower is mandatory.","G06F2201/00","","This place covers: Although not fully consistent with the title of this group we consider that prophylactic additional saving-related measures like check-pointing, backing-up or state copying, which are performed before the occurrence of a fault in order to be able to recover or restore (at least partially) in case a fault occurs in the future, and which do not rely on hardware redundancy, are to be classified under this group. The corresponding reverse operations of restoring and/or recovering and/or rolling back fit in naturally, since these are performed after the occurrence of a fault. The same holds for any type of redoing. All these activities are considered particular cases of error correction. Retrying an operation may be part of an error detection mechanism when used in conjunction with a counting or time-out scheme. It may constitute an error correction when it is used to overcome a transient error. In both cases it is a mechanism used after the occurrence of a fault."
"G06F11/1402","{Saving, restoring, recovering or retrying}","","","","Classification of documents relating to snapshots is done as follows :documents describing the use or creation of snapshots to deal with the detection or correction of errors are classified in , and normally in subgroups of .documents describing other uses of snapshots (or creation of snapshots for such purposes) are not classified in . They are classified in  or  unless the specific use is provided for in another classification place.General-purpose treatment of snapshots (e.g. management of valid snapshots, determining not needed snapshots, storage optimisation, ...) is dealt with in  if the snapshots are on file level. If the snapshots are volume-based snapshots, they are dealt with in  since they concern the management of storage space in this case.","G06F11/00|G06F11/1402|G06F11/00|G06F16/00|G06F3/06|G06F16/00|G06F3/00","Persistent dataData which are still relevant after a normal power off/ power on cycle or a logoff/logon procedure. Typically, the user determines when such data should be modified or destroyed (since they are not relevant anymore).Thus, persistent data is not equivalent to data that is stored in a non-volatile manner, the latter merely giving an indication of the type of memory/storage used to save the data. Non-volatile data does not need to be persistent, but persistent data is always non-volatile.","This place covers: The techniques covered by   imply at least an attempt to correct an error. They do not cover the detection as such, which may be found in   or  ."
"G06F11/1405","{at machine instruction level}","","","","","","","This place covers: Measures taken inside the processor or relating to individual processor instructions. To implement these measures, additional hardware (such as registers) can be used. A necessary condition to classify here, is that the operating system is unaware of the measures taken."
"G06F11/1415","{at system level}","","","","","","","This place covers: The solution of a specific problem related to the functioning of the computer system(s) as a whole in contrast to a particular application functionality. It is intended to cover firmware level (e.g. BIOS), OS level, file system level and/or utilities."
"G06F11/1417","{Boot up procedures}","","Booting in generalReboot as part of upgrading to verify the successful upgrade","G06F9/4401|G06F11/1433","","","","This place covers: Restricted to correction (attempt) of errors during or using the boot process."
"G06F11/142","{Reconfiguring to eliminate the error  (group management mechanisms in a peer-to-peer network H04L67/1044)}","H04L67/1044","","","","","","This place covers: Reconfiguration meaning that the system undergoes modification of the components that make up the system or their arrangement in response to an error being detected. The components can be either hardware or software components. Example: The system switches to a minimal video driver in case the normally used video driver does not give any image anymore. Counterexamples: redistributing the load on individual processors of a multiprocessor system in an overload condition masking faults by reconfiguring redundant hardware (e.g. making a standby component primary, changing the role of disks in a mirrored pair, ...)"
"G06F11/1423","{by reconfiguration of paths}","","Isolating a faulty entity in a communication network","H04L41/0659","","","",""
"G06F11/1433","{during software upgrading}","","","","","","","This place covers: Potential to recover from errors during or after software update or upgrade or installation processes. Also applies when this process is performed by a specific update/install software or even by the application itself."
"G06F11/1435","{using file system or storage system metadata}","","File management in general","G06F16/14","","","","This place covers: There is redundancy in the metadata used to access a given stored data item. Examples are : File systems having redundant FATs or redundant tuples Redundant CMOS/BIOS data defining the disk layout Counterexamples are : Retry a read from a disk sector by the disk controller when the read fails. This should be classified  Retrying the disk I/O request by the CPU. This should be classified in ."
"G06F11/1438","{Restarting or rejuvenating}","","","","If the application restart or rejuvenation mechanism is implemented in an OS or middleware layer outside the application, this aspect is to be additionally classified in .","G06F11/1482","","This place covers: The act of restarting a software module (e.g. an application, but not the complete OS, because this would imply a boot process which is covered in  ) either to recover from an error or in order to prevent an error (the latter being rejuvenation). The restarting or rejuvenating may be based on a previous state saving of the software module. Usually, this is based on a previously saved dynamic state of the software module. The dynamic state of a software application or process or task includes at least some of stack, heap, open files, etc. information, from which the application can later continue processing. Continuing from a previously saved state without full application restart is also covered by this group."
"G06F11/1441","{Resetting or repowering}","","Means for saving power","G06F1/3203","If a spare power supply is used, additionally  must be given (either as additional or invention, depending on the circumstances)","G06F11/2015","","This place covers: Measures taken out of a normal operating mode (after boot) but before abnormal termination of the system to enable a machine to continue processing from a defined state after a re-initialisation (reset or re-powering) of the machine. Example: power is monitored, when voltage drop is detected, the RAM is saved to disk. After power restore, RAM is reloaded from disk. Or, battery used to temporarily backup the RAM during a (short) power outage. Without error see  ."
"G06F11/1443","{Transmit or communication errors}","","Detecting errors in the information receivedError detection mechanisms part of a communication protocol, ","H04L1/00|H04L12/00|H04L29/00","Documents should only be classified here when they concern transmit or communication errors and where the mechanisms used are not part of a communication protocol and no other group of  and subgroups or  and subgroups applies.","G06F11/14|G06F11/16","","This place covers: Examples : printer or disk I/O retry by the Operating System. Repeated requests by a client to the server"
"G06F11/1446","{Point-in-time backing up or restoration of persistent data}","","Data replication, , , MirroringData archiving","G06F11/1658|G06F11/2094|G06F11/2097|G06F16/00|G06F11/2056|G06F16/10","","","","This place covers: Backup done either on file or data block level. Covers, backing up of any type of file, independent of the data it contains. Note: Due to considerable overlap in technology, backups and data backup systems frequently are confused with archives and fault-tolerant systems. However: Backups differ from archives in the sense that archives are the primary copy of data whereas backups are a secondary copy of data. Data backup systems differ from fault-tolerant systems in the sense that data backup systems assume that a fault will cause a data loss event, whereas fault-tolerant systems do not. The scope of this group also covers ensuring that the data to be saved (as backup copy) is consistent (i.e. represents a meaningful state), especially if the copy is made of data within a distributed system."
"G06F11/1448","{Management of the data involved in backup or backup restore}","","File management in general","G06F16/14","Documents relating to authorisation control or data security of the backups should also be sent to  for classification","G06F21/00","","This place covers: All operations related to data management which are used for the backup data. Examples of management of the data that is backed up : managing versions of backups formatting for compatibility with different systems consolidation of backed up data"
"G06F11/1451","{by selection of backup contents}","","","","","","","This place covers: any determination of what data should be subjected to backup (e.g. what type of data, which origin of data, according to criticality of the data, ...) determining the necessity to include particular data (e.g. based on whether the data has changed) in what form the data should be backed up (e.g. incremental backup, full backup, differential backup, ...)"
"G06F11/1453","{using de-duplication of the data}","","Redundancy elimination in general","G06F16/174","","","","This place covers: all techniques that are used to detect multiple copies of data items (e.g. files, data blocks, strings of data, ...) and to use this knowledge to optimize the backup (e.g. by not retransmitting the detected item, by not storing the detected item twice,...). This is irrespective of whether the multiple copies are between (backups of) data at different times or between (backups of) different data items having a part in common or between (backups from) different hosts."
"G06F11/1456","{Hardware arrangements for backup}","","","","","","","This place covers: subject-matter where the hardware arrangement is affected by its use as backup system or where a particular system arrangement is proposed for backup. However, this does not imply that a particular hardware component must be physically modified for backup purposes The following are some examples : additional (temporary) memory or storage is used to enable efficient writing on the backup medium storage which is configured to automatically perform a backup, when connected to a system to be backed up. A specific type of hardware being used for backup A distributed architecture where some processing nodes are dedicated to particular backup functions"
"G06F11/1458","{Management of the backup or restore process}","","","","In this group the use of the Indexing Codes  and lower is mandatory.Documents relating to authorisation control or data security of the backups should also be sent to  for classification","G06F2201/00|G06F21/00","","This place covers: All operations related to the management of the backup process. Examples are : management of backup process : how to make the backup process faster avoiding data restoration by unauthorized persons"
"G06F11/1464","{for networked environments}","","","","","","","This place covers: Everything relating to arrangements in which the distributed architecture is of importance for the backup. Examples: Optimizing bandwidth, selecting machines (source or target) for backup, time multiplexed scheduling of backup clients, hierarchical distribution of backup control functionality to different networked machines."
"G06F11/1466","{to make the backup process non-disruptive}","","","","","","","This place covers: All subject-matter dealing with techniques of limiting the impact of the backup process on normal operations, e.g. by minimizing the backup window."
"G06F11/1469","{Backup restoration techniques}","","","","","","","This place covers: Problems relating to restoring data from a backup using a backup/restore application (in contrast to data movement services of an OS). Examples: Finding and ordering the necessary tapes, handling a target format that is no longer the same as the original one, target system configuration has changed and new locations must be determined, improving restore efficiency."
"G06F11/1471","{involving logging of persistent data for recovery}","","Logging in generalLogging in database systems","G06F16/00|G06F16/20","","","Logging recording physical or logical changes to stored persistent data to allow a system to recover from crashes or other errors and maintain the stored persistent data in a consistent state.Journalis a chronological record of data processing operations. It is considered equivalent to logical logging.","This place covers: Logging techniques or the usage thereof for the purpose of attempting to recover from errors. Ensuring that a log contains all necessary data to enable a restore. Maintenance of the logged data (e.g. pruning obsolete entries to reduce the recovery time)."
"G06F11/1474","{in transactions  (G06F16/20 takes precedence)}","G06F16/20","Error recovery for (main) memory accesses implemented as transactionsTransactional file systemsMaking database transactions atomic","G06F11/141|G06F16/10|G06F16/20","Documents being classified here that concern transactions in database management systems should be sent to  for classification as well.","G06F16/20","","This place covers: general recovery techniques of transactional systems; detailed techniques of transaction processing in database systems (e.g. ensuring ACID properties of updates in database systems) are not classified here. Attempting to recover from errors within transactions that create/update/modify data. The term transaction is understood broadly."
"G06F11/1479","{Generic software techniques for error detection or fault masking}","","","","","","","This place covers: All techniques implemented by software means, i.e. where the fault tolerance does not result from the hardware and is not bound to a particular redundant hardware architecture. Software architectures and structural approaches independent of the particular problem solved or function that is achieved. As a consequence, documents describing such technique for a particular purpose or hardware architecture as covered by the subgroups of   and   should be classified there as well. As a particular example for this see the comments under   relating to additional classification in  . Documents where the kind of fault tolerance used (active-active, voting, active-passive, ...) is fixed by the hardware architecture and cannot be influenced by the software, should not be classified in this group. Examples are: Fault-tolerance using data-diversity (e.g. by using different equivalent input data sets for each retry of a function), corrective actions e.g. following a plausibility check. Other examples include measures taken before run time (e.g. duplication of instructions for comparison at compile time) or robust data structures (see XP745785). Counterexample : the operating system for a Tandem Himalaya system will not be classified here, because it is bound to a hardware architecture that provides the fault tolerance and it does not employ any of the generic techniques covered by  ."
"G06F11/1482","{by means of middleware or OS functionality}","","","","If the layer implements an application restart or rejuvenation mechanism, this feature is to be additionally classified in .Documents where there is necessarily some hardware redundancy, get an Indexing Code as well in the HW redundancy groups.Documents which describe said middleware/OS technique in combination with only one redundant hardware architecture always go into the  and subgroups, but where said technique is explicitly suitable for other redundant hardware architectures, they are classified in  as well.The restart related aspect of the second example is to be classified additionally in .Note that  as such does not imply failover mechanisms, although the underlying hardware becomes redundant because of the software layer. Hence, this hardware redundancy aspect requires classification as well, in this particular case in  (example docs: US2003018927, US2003105852).","G06F11/1438|G06F11/16|G06F11/1482|G06F11/1438|G06F11/1482|G06F11/2023","","This place covers: There is a software layer (on top of the operating system or integrated in the operating system) which makes applications which are not fault-tolerant run in a fault tolerant way. Typically, this is done by scheduling requests of the application more than once. A typical example of this is fault tolerant cluster software. Another example is an OS that detects a faulty process and creates a further copy of the same process on the same processor (but potentially in another memory area)."
"G06F11/1487","{using N-version programming}","","","","","","","This place covers: For error detection the output of multiple versions (typically based on different source codes) of the application code or portions thereof are compared or voted (note that this is different from an acceptance test as defined in  ). This can be in different programming languages, different compilers or implementation of alternative algorithms. The versions may be executed sequentially, concurrently or in parallel on different hardware (thereby making the latter redundant)."
"G06F11/1489","{through recovery blocks}","","","","If the other execution is systematically performed on the same hardware, this has to be additionally classified in .","G06F11/1497","","This place covers: For error detection an acceptance test (mostly a plausibility check or a limit on execution time) is performed on critical code blocks. If the test is not passed, the output of another execution of the same or an alternative version of the block is used for recovery. The executions may be sequential or parallel. Note that an acceptance test is performed using the output of only one of the executions."
"G06F11/1492","{by run-time replication performed by the application software}","","Replication implemented at OS- or middleware level is covered byN-modular type Details of time redundant execution on a single processing unit ","G06F11/1482|G06F11/1494|G06F11/1497","","","","This place covers: In contrast with  , here the redundancy is inherent in the application itself. Thus, the application does not rely on any other layer to be fault-tolerant. The redundant portions are necessarily identical, since otherwise the redundancy is not realized at runtime, but is hard coded."
"G06F11/1494","{N-modular type}","","","","","","","This place covers: Using comparison or voting for the concurrently running replicas of the application software."
"G06F11/1497","{Details of time redundant execution on a single processing unit}","","","","","","","This place covers: A piece of software (module, function, complete application, ...) is always executed two or more times sequentially or concurrently (e.g. as threads) on a single processing unit in order to address transient faults. In particular, this groups covers those aspects relating to the provision of the identical input to all executions of the software. When more than two execution are foreseen this can be used for error correction (not only detection). In particular, this group covers the techniques used to instantiate multiple executions of redundant software, the temporary storage of intermediary results or the duplication of contexts for each instance, as well as the measures taken for the subsequent error detection or fault masking. Note that this group also covers (non-redundant) hardware support for time redundant execution and, thus, cannot be a subgroup of  ."
"G06F11/16","Error detection or correction of the data by redundancy in hardware","","","","In this group the use of the Indexing Codes  and lower is mandatory.Documents dealing with replication are classified in  and subgroups (in particular in  and ( or ) only when the purpose of the replication is for error handling or error detection. If the use is another one (e.g. performance or load balancing) or is not disclosed, the document should be classified in  instead.Some systems having a set of equivalent/similar hardware resources all used under normal conditions may be reconfigured in response to an error to use only a subset of these resources while still providing the same full logical functionality, however possibly with degraded performance.In order to decide where such documents are to be classified, the following criteria are used:(A) If a reconfiguration mechanism is used following the error detection, we are in the presence of error correction using active fault masking.(B) If said mechanism is able to correct permanent hardware faults, this implies the presence of some form of redundancy in hardware.If both criteria apply, the subject-matter is for : A AND B => .Note in particular that: (redundancy in operation) provides mechanisms that can ONLY deal successfully with transient faults.","G06F2201/00|G06F11/16|G06F11/2094|G06F11/2097|G06F11/1658|G06F16/10|G06F11/20|G06F11/20|G06F11/14"," Redundant hardwareadditional hardware for performing the same function as another hardware part, provided that in faultless operation you could renounce on either hardware parts of the system without loosing functionality. ","This place covers: Systems where hardware redundancy is used to detect errors or to correct errors based on the output produced by the redundant components."
"G06F11/1604","{where the fault affects the clock signals of a processing unit and the redundancy is at or within the level of clock signal generation hardware}","","Fault-tolerant synchronisation of clocks representing timeError detection by comparing the output signals of redundant hardwareChecking static stores for correct operation is ","G06F11/1479|G06F11/1608|G11C29/00","",""," Clock signaldesignates the common periodic square-waved signal on which synchronous digital components base their operations. This signal does not represent any absolute or relative real, logical or virtual time value (although such time may be derived therefrom by counting periods of this clock signal).","This place covers: Systems with multiple clock generating components with active or passive fault masking, i.e. where the system is continuously clocked even in the presence of failing clock generators. Single clock generators that are fault tolerant in themselves, e.g. by comprising multiple oscillators. Arrangements that only detect clock faults based on redundancy at or in the clock generating level (typically by comparing signals output by two clock generators). The symbols  ,   and   are to be used where appropriate to capture the type of mechanism implementing the clock fault tolerance, if no EC symbol in the respective field is already given. Note that this group does not require, that the clocked system itself is fault-tolerant."
"G06F11/1629","{Error detection by comparing the output of redundant processing systems}","","","","","","","This place covers: This group is intended to contain systems in which the redundant components are programmable (hardware) processors, the runtime behaviour of which is defined by software/firmware. Comparing is understood largely , i.e. it encompasses coherency checks (are the compared results similar enough to be considered the same or equivalent?), not only identity tests."
"G06F11/1633","{using mutual exchange of the output between the redundant processing components}","","","","","","","This place covers: This group is intended to comprise systems in which there is no comparator hardware. Instead, all redundant components send their respective output results to each other and each perform the comparison (in software) between their own output and the one(s) received from the other redundant components. This would cover processors exchanging results via a local (processor) bus as well as distributed system which communicate the results via LAN or other type of network."
"G06F11/1637","{using additional compare functionality in one or some but not all of the redundant processing components}","","","","","","","This place covers: Consists of systems often denoted as master/checker in which there is no separate comparator unit. Instead, one or some of the redundant unit(s) (the checker(s)) do(es) additional work to perform the comparison, thereby detecting erroneous behaviour and checking the system for correct operation. The additional compare functionality may be implemented in hardware on the corresponding processing component(s), or in software executed by the corresponding processing component(s). Master/checker type architectures in which two processors operate in clock lockstep, where the checker compares the values driven by the master with its own corresponding internally present by otherwise disabled outputs. If a discrepancy is detected, the checker produces an error signal. See the glossary for citations of example master-checker structures. Note that this type of architectures also falls in the  . Master/checker architectures where the checker is limited in processing functionality with respect to the master, even though this is not absolutely in line with our definition of hardware redundancy."
"G06F11/1641","{where the comparison is not performed by the redundant processing components}","","","","","","","This place covers: Here one or more hardware units separate from the redundant components are used to compare the results produced by the redundant components. Further details of subgroups  and the comparison itself uses redundant hardware This covers architectures in which there are comparator units (typically but not necessarily respectively associated with but) distinct from each one of the redundant processing components. The comparators are considered redundant when they perform the same comparison on (copies of) the same signals/data."
"G06F11/165","{with continued operation after detection of the error}","","","","Techniques in this group may use active fault masking, passive fault masking (i.e. ignoring the faulty component), or other techniques like retry. If these are described they should get an Indexing Code in the respective field as well.","","","This place covers: Documents in which an additional mechanism is provided to determine which one(s) of the redundant component(s) shall survive after the detection of the error. This may (but need not) involve a determination of which component is correct, in which case this redundant component can be used to correct the error in the other one(s) such that all redundant processing components can finally continue their operation."
"G06F11/1654","{where the output of only one of the redundant processing components can drive the attached hardware, e.g. memory or I/O}","","","","This group should only be used when there effectively is an asymmetry in the role of the redundant processors. On the contrary, the mere statement that a comparator or bridge or the like selects the outputs of one the processors to drive the attached components does not suffice to justify a different role of the processors.","","","This place covers: Here one of the processing components is usually called the ""master"", the other(s) may be denoted as slave(s), checker(s), or shadow(s). The master's: outputs drive the system. The slave's: outputs are used for comparison but are otherwise disabled from reaching other components of the system. Architectures in which both processors have a master and a slave role but for distinct parts of the system, i.e. for different types of output."
"G06F11/1658","{Data re-synchronization of a redundant component, or initial sync of replacement, additional or spare unit}","","","","Documents in this group describing techniques in the context of active/passive systems should additionally have at least one Indexing Code in the  (see also the comments in ).","G06F11/20|G06F11/2097","","This place covers: The following types of data transfer activities (possibly using data replication) from a memory, the content of which is assumed to be good, to a one that is not yet current (note that the concerned memories do not need to be themselves redundant): sporadic resynchronisation processes used to reintegrate a redundant component into an active/active system, such process being started in an attempt to correct a fault for instance by rebooting a failing component or by replacing it. synchronisation processes occurring at start-up of some redundant active/active systems in which the redundant components have to negotiate when they are all ready to enter the lockstep mode of operation. initialisation processes used to make a redundant component ready to work as a stand-by in active/passive systems."
"G06F11/1662","{the resynchronized component or unit being a persistent storage device  (re-synchronization of failed mirror storage G06F11/2082; rebuild or reconstruction of parity RAID storage G06F11/1008)}","G06F11/2082|G06F11/1008","","","","","","This place covers: Initialising data of a (newly activated) spare disk, provided this is not a mirror disk (the latter being in  ). Typical examples for this are the preparation of file system or database replica."
"G06F11/1666","{where the redundant component is memory or memory area}","","","","","","","This place covers: The term memory is meant to comprise solid state devices used as main memory which is directly addressable by the associated CPU, as well as non addressable solid state internal memories (e.g. registers, buffers). It does however not need to be RAM. Redundant caches and main memory mirroring (in which case the Indexing Code   should be given). One of the following Indexing Codes should be used where appropriate to better characterise the fault detection or correction mechanism involved:  ,  . Error detection (or fault masking) using data replicated in different areas of the same memory device is also covered. These documents differ significantly from the other mechanisms in   relating to (main) memory."
"G06F11/167","{Error detection by comparing the memory output}","","","","","","","This place covers: This the appropriate place for comparisons performed on the output of redundant memory (areas)."
"G06F11/1675","{Temporal synchronisation or re-synchronisation of redundant processing components}","","","","","","","This place covers: The 16T groups address the problem of ensuring that corresponding outputs of redundant active components are simultaneously available for error detection or correction at a given time. This does not imply that these outputs are produced simultaneously (see e.g. US2002116662). Such system are frequently said to operate in lockstep (at least at some level of abstraction). Some active/standby systems using active fault masking, where a standby unit is to be maintained in close time synchrony with its primary , the standby unit thereby effectively maintaining itself current to be ready for failover. Documents of this latter type shall also get at least an Indexing Code in  ."
"G06F11/1679","{at clock signal level}","","","","","","","This place covers: Here systems either use a common clock (clock lockstep) or are otherwise synchronised to such an extend that they produce comparable outputs within the same clock cycle, although not necessarily exactly in phase. If not using a common clock , the synchronisation measures taken affect the clock signal."
"G06F11/1683","{at instruction level}","","","","","","","This place covers: Here we have documents where the synchronisation occurs at statically predictable places in the code either after each instruction or after each instruction of a predetermined type (e.g. memory write or I/O operation) or by using explicit synchronisation instructions/operations."
"G06F11/1687","{at event level, e.g. by interrupt or result of polling}","","","","","","","This place covers: Synchronisation mechanisms that are triggered by events asynchronous to the main program. Typical example is synchronisation at the occurrence of an interrupt. Also cases in which the events are I/O operations performed in response to a polling mechanism."
"G06F11/1691","{using a quantum}","","","","In most cases documents should also be classified in one of the other lower subgroups of ","G06F11/1675","QuantumA predetermined count (>1) of units of work","This place covers: Here the synchronisation process is initiated when a predetermined count (>1) of units of work is achieved. This could be clock cycles, (selected types of) instructions, interrupts, I/O-operations, elapsed time units or any other suitable countable unit."
"G06F11/1695","{which are operating with time diversity}","","","","","","","This place covers: Time diversity is the concept to have an active/active system in which one of the redundant components operates with a delay with respect to the other in order to avoid common mode failures that would affect both redundant components in the same way at the same time, thereby not being detectable by comparison. Typically the time delay is a small odd multiple of the half clock period. It has to be taken into account when comparing the outputs in order to compare outputs resulting from the same logical steps, which by definition are not produced simultaneously. (Should time diversity turn out to be a concept useable for active/passive system as well, this group would have to be moved one level up)."
"G06F11/18","using passive fault-masking of the redundant circuits {(error detection by comparing the output of redundant processing systems with continued operation after detection of the error G06F11/165)}","G06F11/165","","","","","","This place covers: Fault masking: hiding the presence of a fault to the user or the environment of a [computer system by means of some sort of redundancy such that the perceived system functionality is not affected. Passive fault masking: when a system operates such that no particular action is necessary to mask a fault because all necessary operations are constantly performed independently of the presence of a fault (e.g. majority voting). In   this is achieved by redundant active hardware components, the output of which is subjected to a (voting) process which ensures that only output considered correct is propagated in the system. Thereby, those redundant components which are in error are simply ignored, this resulting in a correction of the error(s) through the hardware redundancy. Passive fault masking means that a system produces correct behaviour/outputs in the presence of faulty components. Voting is a majority building process, by which the output agreed upon by a majority of the redundant components is selected as the correct one, thereby tolerating any minority number of erroneous outputs."
"G06F11/181","{Eliminating the failing redundant component}","","","","","","","This place covers: Documents including an elimination of a faulty component based on the results of a passive fault masking process, through which those components being in the minority are assumed to be the erroneous ones. They can, thus, be eliminated without the need for a separate fault location process. Note that this group implies that the fault masking as such is passive i.e. the correct system output can be produced before the faulty component is eliminated."
"G06F11/182","{based on mutual exchange of the output between redundant processing components}","","","","","","","This place covers: The voting process when it is performed in software by the redundant components themselves, based on their own output and the ones received from the other redundant components. There is no voter hardware. Processors exchanging results via a local (processor) bus as well as distributed system which communicate the results via LAN or other type of network. Redundant processing while the other groups at the same level are not. A system having only a single redundant processing component performing the voting in software is covered as well."
"G06F11/183","{by voting, the voting not being performed by the redundant components}","","","","","","","This place covers: Here one or more hardware units separate from the redundant components are used to vote the results produced by the redundant components.  where the redundant components implement processing functionality Documents where the outputs of redundant processors / CPUs / microcontrollers are voted to perform the passive fault masking.  and the voting is itself performed redundantly Documents where the voting process itself is implemented using redundant hardware, i.e. where the voter does not constitute a single point of failure. The voter does not need to be implemented in hardware, but could be realised as software processes on dedicated voting processors. Counter-example: each redundant component has a voting module in software, which uses the outputs produced by the other redundant components. This is  ."
"G06F11/187","{Voting techniques}","","","","","","","This place covers: Specifics on how the voting process is performed in contrast to remaining   groups which relate to architectural aspects of the systems."
"G06F11/188","{where exact match is not required}","","","","","","","This place covers: Concerns documents where the majority is formed by outputs which are considered equivalent, although not identical. This is frequent in control applications where inputs of the redundant components do not originate from the same source of information. or where they are gained at (slightly) different times. Tolerances or other plausibility or coherence criteria may be used to determine which outputs form the majority."
"G06F11/20","using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements","","","","A general concept in the field of active fault masking is that a surviving component takes over the load/work of failing one in addition to its own normal work. For such documents the symbol  should be used except for documents getting a dedicated group for this concept (e.g. ).In  there are also documents dealing eliminating a faulty component.  possibly uses active fault masking (to ensure the continued operation, some kind of decision is needed to identify one of both components as failed and this one may completely be removed from the system). However, since in those two groups the active fault masking is rather a consequence of the voting or compare, we decided to take this particular subject-matter out of the .Failover comprises one or more of the following activities:error detection : this is not a failover specific mechanism since there is no link between detection and failover => such docs to be classified according to the used mechanisms but not necessarily in determination of the spare to be usedactivation of the determined sparedeclaration of the activated spare as primaryelimination of the faulty unitThere is failover taking place as soon as any functionality of a hardware component is taken over by another hardware component, whatever the functionality is.","G06F2201/85|G06F11/2035|G06F11/181|G06F11/165|G06F11/20|G06F11/20","Fault maskinghiding the presence of an fault to the user or the environment of a computer system by means of some sort of redundancy such that the perceived system functionality is not affected. Active fault maskingtaking particular actions (e.g. reconfiguration, failover) not performed in the error free situation to mask a fault.","This place covers: Head-group for all documents in which faults are masked actively, i.e. after the masking is done, the fault is not present anymore in the active part of the system. It is to be noted as well that we are talking exclusively about fault masking and not about error masking. The subgroups fall apart in 2 types : ""architectural groups"", i.e. groups that specify the constructional element which is redundant (i.e.  ,   and  ) ""functional groups"", i.e. groups that define a particular functionality that any active fault masking arrangement needs to implement (i.e.  ). This functionality is independent of the particular constructional element which is redundant."
"G06F11/2002","{where interconnections or communication control functionality are redundant  (flexible arrangements for bus networks involving redundancy H04L12/40176)}","H04L12/40176","Flexible arrangements for bus networks involving redundancy Recovering from network faultsFault tolerant routing","H04L12/40176|H04L41/0654|H04L45/28","The subgroups ,  and  are to be used together in order to classify 9 different types of redundancy in this field. Regarding details of communication failover no subgroup is foreseen. This has to be searched using the other architectural criteria.Example: Two PCs connected to a LAN by a respective LAN controller and additionally being connected to each other by a USB cable via respective USB controllers, where the USB connection can be used as alternative path to transmit the same data. This configurations gets all the three subclasses.Remarks:A communication switch implements control logic to realise physical connections between a set of data input ports and a set of data output ports, thus, if not  this is  .Data transfer between processors and memories is not considered communication (rather it is addressing), hence redundant interconnects between processors and memories is  (not ).Examples below illustrate how the scheme should work in some typical situations:","G06F11/2005|G06F11/2007|G06F11/2012|H04L49/00|G06F11/2005|G06F11/2002|G06F11/2007","","This place covers: All cases where architectural components involved in communication are redundant, as long as no communication protocol layer independent of a particular application is involved. Examples pertaining to subgroups of   are: Duplicate connection lines Redundant busses (serial or parallel) Redundant bus controllers (e.g. PCI) Network interface boards describing built-in redundancy A redundant setup of two network adapters which are not redundant in themselves"
"G06F11/2005","{using redundant communication controllers}","","","","","","","This place covers: Communication controllers are nodes as defined under   dedicated to performing communication control logic."
"G06F11/2007","{using redundant communication media}","","","","","","","This place covers: Interconnections are physical media and are of point-to-point type or of bus type. Two interconnections are only considered redundant if: they both physically connect the same nodes, wherein nodes are any components performing processing or control functionality (examples: computers, bridges, storage controllers, communication switches, counter-example: physical repeater has neither processing nor control logic), and are configured to perform the same data transmissions. Only documents fulfilling these criteria are classified here. This group covers as well redundant dedicated interconnection media for I/O functionality as long as it does not use general purpose communication interconnection media (like LAN or USB cables)."
"G06F11/201","{between storage system components}","","","","","","","This place covers: E.g. multiple IBM channels between controller and disk"
"G06F11/2017","{where memory access, memory control or I/O control functionality is redundant  (redundant communication control functionality G06F11/2005; redundant storage control functionality G06F11/2089)}","G06F11/2005|G06F11/2089","","","Redundant dedicated interconnection media for such I/O functionality are to be classified in  as long as it does not use general purpose communication interconnection media (like LAN or USB cables).","G06F11/2002","","This place covers: All cases where memory access, memory control or I/O control functionality is redundant. An example would be redundant configurations having an active and a passive graphics adapter."
"G06F11/202","{where processing functionality is redundant  (redundant communication control functionality G06F11/2005, redundant storage control functionality G06F11/2089)}","G06F11/2005|G06F11/2089","","","This group has 4 types of subgroups. A class in each of the types should be given (as far as disclosed in the document) systematically. Thus, a document classified in these subgroups will normally have 3 or 4 symbols (invention or additional). The four types are : and subgroups -  - ","G06F11/2023|G06F11/2035|G06F11/2041|G06F11/2043|G06F11/2048|G06F11/2051","","This place covers: All subject-matter where the redundancy resides in components that perform processing, i.e. components the runtime functionality of which is controlled by software (or firmware), except for ones dedicated to storage control or communication control (see the precedence rule). For subject-matter to be classified in this group, it is enough that a fault masking is tried when a failure occurs. It is not necessary to have a guarantee that resources will be available to successfully fail over."
"G06F11/2023","{Failover techniques}","","","","","","","This place covers: Details of the failover mechanism Also includes documents describing failback, i.e. reverting to the original or replacement primary processing unit when it becomes operational again. Currently this also covers documents dealing with the determination/selection of the spare to be used for replacing the failing component. There is failover taking place as soon as any functionality of a processing component is taken over by another processing component, whatever the functionality is."
"G06F11/2025","{using centralised failover control functionality}","","","","","","","This place covers: Where a single component implements the control functionality for failover. This may be a distinct hardware module or software implemented on a single one of the redundant processing components."
"G06F11/2028","{eliminating a faulty processor or activating a spare}","","","","On the contrary, eliminating a backup unit that is not active (i.e. not within a failover process) is not  since this is not error correction using redundancy in hardware. This is most likely .""Eliminating a faulty processor"" needs to be understood broadly. E.g. this includes as well :documents describing a complete reconfiguration of the system which results in eliminating not only the faulty processor, but also some functioning components if needed to come to a fault-free system anddocuments dealing with how to determine the fault-free system configuration which eliminates the minimum number of components.","G06F11/20|G06F11/0793","","This place covers: Documents describing how to ensure that a failing and formerly active processing component no longer participates in the system functionality. Similarly, documents describing how to activate a former standby processing component to replace the functionality of a failing one. Example: setting bits identifying a node as active in a configuration file."
"G06F11/203","{using migration}","","","","","","","This place covers: Transferring runtime context of processes, tasks, jobs, threads etc... from a failing processing component to a replacing one."
"G06F11/2033","{switching over of hardware resources}","","","","","","","This place covers: The process of placing resources (other than the redundant processing components) under control of a replacement processing unit instead of a failing one. Example: attaching a RAID or other I/O device to the spare."
"G06F11/2035","{without idle spare hardware}","","","","""Hot spare"" architectures wherein the spares are maintained updated for immediate failover by performing the same processing as the primary (possibly in clock synchronisation with the latter) do not fall in this group, because such spares are considered inactive to the extent they do not perform system functionality beyond what is necessary to function as spare. The same applies to architectures where spares are not completely idle because they monitor the primary to detect whether it is failing. These examples would rather be classified in  or .","G06F11/2038|G06F11/2041","","This place covers: There are no processing components left inactive in failure-free operation. This group contains all subject-matter where the performance is degraded after a failure has occurred, since the same processing needs to be done on less hardware. However, performance degradation is not a necessary condition for this group, since a safety margin can be used in the failure-free operation."
"G06F11/2038","{with a single idle spare processing component}","","Without idle spare hardware","G06F11/2035","","","","This place covers: The spare component can be spare for a single one or for a plurality of active processing components. There may be multiple spares which, however, are each a single spare for distinct sets of active processing components. Also covers the case where the spare component is a hot spare."
"G06F11/2041","{with more than one idle spare processing component}","","Without idle spare hardware","G06F11/2035","","","","This place covers: A processing component has more than one spare. Also covers the case where at least one spare component is a hot spare."
"G06F11/2043","{where the redundant components share a common memory address space}","","","","","","","This place covers: Examples: symmetric multiprocessor; multicomputer with virtual shared memory based on message passing."
"G06F11/2046","{where the redundant components share persistent storage  (G06F11/2043 takes precedence)}","G06F11/2043","","","","","","This place covers: Any architecture where redundant components have (at least temporarily) access to common storage independent of whether or not the shared storage is used for or during failover."
"G06F11/2053","{where persistent mass storage functionality or persistent mass storage control functionality is redundant  (error detection or correction in information storage based on relative movement between record carrier and transducer G11B20/18)}","G11B20/18","","","","","Storagepersistent memory subsystems (typically involving disks), the contents of which are not directly physically addressable as data words by a CPU ",""
"G06F11/2056","{by mirroring}","","Arrangements for replication or mirroring the data, e.g. data synchronisation between network nodes and/or user terminals","H04L29/0854","","","","This place covers: All subject-matter related to mirroring."
"G06F11/2058","{using more than 2 mirrored copies}","","","","Subject-matter combining mirroring and backup should have double classification.","","","This place covers: Each of the more than 2 copies is a mirrored copy, the original (primary) data itself also being considered as one mirrored copy. An intermediate volume used as a buffer but not representing a full copy (suitable for failover) would not be considered a mirrored copy."
"G06F11/2064","{while ensuring consistency}","","","","","","","This place covers: This covers distinct types of consistency problems like write order consistency, consistency between different volumes (broken links problem), consistency groups or writes."
"G06F11/2066","{Optimisation of the communication load}","","","","","","","This place covers: Measures aiming at reducing the amount of data being transferred in the mirror system e.g. from the primary to the mirror site, or between the Host and the primary. Examples: ""write coalescing"", sending record logs instead of full blocks (journaling)."
"G06F11/2079","{Bidirectional techniques}","","","","","","","This place covers: Systems in which updates occur independently on different mirror copies and are simultaneously propagated to the respective other mirror copies."
"G06F11/2082","{Data synchronisation}","","For non-mirroring related disk initialisation","G06F11/1662","","","","This place covers: This covers resynchronisation of a failed or reconnected mirror as well as initial synchronisation to start mirroring."
"G06F11/2089","{Redundant storage control functionality}","","","","","","",""
"G06F11/2092","{Techniques of failing over between control units}","","","","","","","This place covers: This group contains the details about how the faulty storage control element is taken out of operation or how storage control functionality is transferred to other elements. Examples are : changing the system configuration shut down of the controller concerned Counter-example: Eliminating a backup unit that is not active (i.e. not within a failover process) is not   since this is not error correction using redundancy in hardware. This is most likely  ."
"G06F11/2094","{Redundant storage or storage space  (G06F11/2056 takes precedence)}","G06F11/2056","","","","","","This place covers: Architectures and problems involving the use of additional storage (space) intended to be used instead of failing storage (space). Typical problems involve eliminating a failing active storage unit or activating spares (possibly storing replicated data). Also to be used when it is not clear whether an eliminated disk has its data replicated elsewhere."
"G06F11/2097","{maintaining the standby controller/processing unit updated  (initialisation or re-synchronisation thereof G06F11/1658 and subgroups)}","G06F11/1658","","","A symbol to indicate the type of redundancy in Hardware (e.g. ) must be added as additional, when the type of redundancy is not otherwise classified.","G06F11/2038","","This place covers: This group contains details of the measures that are taken to keep the data in memory, and/or persistent storage of a spare/stand-by unit (processor or controller) current in order to be ready for take-over. This is a repetitive process (frequently involving data replication) used before the occurrence of the fault. This group does not contain details of how a component's data is initially made ready to function as backup (this belongs to  +). Examples for the use of this group: replaying message log on standby node: transmission of log (before failure) is  , replaying of log is failover ( ) if performed after the failure. very hot standby using running standby in lockstep without comparison. The lockstep aspect is to be classified in   (Indexing Code or EC according to importance). However, since it addresses the problem of maintaining the standby unit updated   (possibly Indexing Code) should be given. Example: Two redundant disk controllers control a single disk. Host write requests received by one controller are transferred to the second one (including the data) for temporary buffering until the write is performed by the first one. Should the first one crash, the second one is able to perform incomplete writes. Hence, the second one is maintained updated by the first one for potential failover."
"G06F11/22","Detection or location of defective computer hardware by testing during standby operation or during idle time, e.g. start-up testing","","Testing of SoftwareVerification of a hardware designTesting of digital circuits, e.g. of separate computer componentsTesting of computer memories","G06F11/36|G06F30/00|G01R31/317|G11C29/00","General rules for  and subgroupsIn  and subgroups, generally only 1 symbol is allocated. The symbol allocated is the most relevant one for the invention information disclosed.Only if the component being tested and the test itself are important, should the subject-matter be classified in one of the subgroups  together with another group in .Only invention information is classified.If the software testing part is described and is important, the document should also be sent to  for classification.Rules specific to  per se:Documents are only classified in  per se if it can not be established whether the test is marginal checking (classified in ), testing of logical operation (classified in ) or functional testing (classified in ).","G06F11/22|G06F11/22|G06F11/2205|G06F11/22|G06F11/36|G06F11/22|G06F11/22|G06F11/24|G06F11/25|G06F11/26","Computer hardwarea digital circuit which has programmable processing logic incorporated.Testingan execution of the computer hardware which is dedicated to the detection of faults. Thus, the execution of the hardware during the test is not part of the ""useful""processing which contributes to achievement of the intended purpose","This place covers: This group and its subgroups also cover testing at system level, i.e. testing of a combination of hardware and software. This testing occurs at a time outside of ""normal operating mode"", e.g. during standby, idle time or at power on. Next to the testing per se, this group and its subgroups also cover the equipment which is used to test the hardware concerned or to interpret the test results."
"G06F11/2247","{Verification or detection of system hardware configuration}","","","","Group no longer used for classification. See  instead.","G06F11/2289","",""
"G06F11/2252","{using fault dictionaries}","","","","","","","This place covers: Subject-matter where the testing process or test analysis process is guided by a fault dictionary. This is the case when a lookup (based on the test results) is done directly from a list of entries, without any additional processing. Although 90% of the documents use the fault dictionary to determine where the fault is located or what actions to take; the group also covers subject-matter where information is looked up in the fault dictionary to determine the next test."
"G06F11/2257","{using expert systems}","","","","","","Expert system A computer program that contains a knowledge base and a set of algorithms or rules that infer new facts from knowledge and from incoming data.","This place covers: Subject-matter where an error message is correlated with other error messages or parameters. Although 90% of the documents use expert systems to determine where the fault is located or what actions to take; the group also covers subject-matter where the expert system is used to determine the next test."
"G06F11/2263","{using neural networks}","","","","","","","This place covers: Although 90% of the documents use the neural network to determine where the fault is located or what actions to take; the group also covers subject-matter where the neural network is used to determine the next test."
"G06F11/2273","{Test methods}","","","","","","","This place covers: Subject-matter where the focus is on how the test is done instead of on what test is done or what is tested. In general, the documents classified in this subgroup are of a more theoretical nature."
"G06F11/2284","{by power-on test, e.g. power-on self test [POST]}","","","","","","","This place covers: Subject-matter describing what tests are being done on power on. The tests concern the correct functioning of the system as a whole."
"G06F11/2289","{by configuration test}","","Detection of the configuration of a system","G06F8/71","","","",""
"G06F11/25","Testing of logic operation, e.g. by logic analysers","","","","","","","This place covers: All testing where the level of the logical value (e.g. 0 or 1) of the signal is tested, independent of functionality."
"G06F11/261","{by simulating additional hardware, e.g. fault simulation}","","Debugging using additional hardware","G06F11/3648","","","",""
"G06F11/263","Generation of test inputs, e.g. test vectors, patterns or sequences {; with adaptation of the tested hardware for testability with external testers}","","","","","","","This place covers: Subject-matter concerning the generation of test inputs, where this generation is done externally to the system being tested. It covers as well arrangements where both test input generation and test result processing are done externally to the system being tested."
"G06F11/267","Reconfiguring circuits for testing, e.g. LSSD, partitioning","","","","","","","This place covers: All adaptations to the hardware being tested to make the hardware more testable."
"G06F11/27","Built-in tests","","","","","","","This place covers: Those tests which are incorporated in the hardware component itself which is being tested."
"G06F11/273","Tester hardware, i.e. output processing circuits {(G06F11/263 takes precedence)}","G06F11/263","","","","","",""
"G06F11/277","with comparison between actual response and known fault-free response","","","","Group no longer used for classification.","","",""
"G06F11/28","by checking the correct order of processing  (G06F11/08 - G06F11/26 take precedence; monitoring patterns of pulse trains H03K5/19)","G06F11/08|G06F11/26|H03K5/19","","","","","FSM, FSAA finite state machine (FSM) or finite state automata (FSA) is a mathematical abstraction sometimes used to design digital logic or computer programs. It is a behaviour model composed of states and transitions between the states.SignatureA signature is a value resulting from the application of a function to some computer data, for example a hash function.","This place covers: Checking the correct order of processing. the word ""order"" implies the consideration of a sequence. It can be for example the sequence of instructions in a computer program, the sequence of steps to perform when installing a software on a computer, etc. Typically documents dealing with the verification of a system that is specified in terms of state machine (states and transitions between states) based on reachability analysis can be found in the group. Also documents dealing with the verification that a computer program is executing according to the expected sequence of instructions (i.e. there is no unexpected jump that could be the result of a malicious attack) can be found in the group. This can be done for example by computing a current signature while the program is executing and comparing it to a reference signature."
"G06F11/30","Monitoring","","Thermal management in cooling means Power management Monitoring for error detection Verification or detection of system hardware configuration Monitoring intrusion in a computer system Monitoring of control systems Network security. Monitoring network traffic Network monitoring Monitoring testing in wireless networks ","G06F1/206|G06F1/3203|G06F11/0751|G06F11/2002|G06F21/566|G05B23/02|H04L29/06877|H04L43/00|H04W24/00","The classification process in the  and its subgroups has to be carried out performing the following steps:1. If the document contains interesting aspects about the observation of properties of a running computing system over time in its normal operating conditions without inputting test data, then proceed with ALL of the following steps 2, 3, 4.1, 4.2, 4.3, 4.3.1, 4.4, 4.5 and 5 in sequence, otherwise stop because the document is not to be understood to be about monitoring;2. If the document contains interesting aspects about the (visual or acoustical) display of the monitored data, then classify the document in  and its subgroups;3. If the document contains interesting aspects about the monitoring of computer activity, then classify the document according to the FCRs of  and subgroups;4.1. If the document contains interesting aspects about monitoring the configuration of the computing system, then classify the document in ;4.2. If the document contains interesting aspects about monitoring the status of the computing system, then classify the document in ;4.3. If the document contains interesting aspects about the monitoring of environmental parameters of the computing system, then classify the document in  and subgroups;4.3.1. If power consumption is evaluated through the monitoring of computer activity, then also classify the document in  and subgroups according to the FCRs of ;4.4. If the document contains interesting aspects about the reporting of the monitored data, then classify the document in  and its subgroups;4.5. If the document contains interesting aspects about the sensing of the monitored data, then classify the document in  and its subgroups;4.6. If the document has been classified at least once in , , , ,  or their subgroups, then classify the document in  and its subgroups;5. If none of the steps 2-4.6 apply, then classify the document in .","G06F11/30|G06F11/32|G06F11/34|G06F11/3051|G06F11/3055|G06F11/3058|G06F11/34|G06F11/34|G06F11/3065|G06F11/3089|G06F11/3051|G06F11/3055|G06F11/3058|G06F11/3065|G06F11/3089|G06F11/3003|G06F11/30","Computer activityFor this group and its subgroups, computer activity covers the activities performed by the computer system that involve data (e.g. processing, data storage, data transfer). It also includes user activity. Monitoring systemA monitoring system is generally considered to be composed of observing or measuring entities (usually called monitors or observers) and interfaces/probes which link them to the system under observation.Interfaces/probesThe interfaces/probes sense (or access) data relative to the system under observation and report them to the observing/measuring entities.Probe effectThe probe effect is the undesired alteration of a system property caused by the fact that this property is being observed or measured.Environmental parametersEnvironmental parameters of a computing system are: power, currents, temperature, humidity, position, radiation, etc.","This place covers: Monitoring refers to an extra functionality for observing properties of a running computing system in its normal operating conditions without inputting test data."
"G06F11/34","Recording or statistical evaluation of computer activity, e.g. of down time, of input/output operation {; Recording or statistical evaluation of user activity, e.g. usability assessment}","","","","As criterion to decide whether  and subgroups applies, it needs to be considered whether computer activity or user activity is being monitored or not.If the monitoring is done purely to detect when an error occurs,  and subgroups apply instead of  and subgroups.Recording data during software testing or debugging is classified in  and subgroups.The subgroups of  fall apart in 2 blocks : -  and subgroups deal with what is being monitored. -  and subgroups deal with how the monitoring is done.If both aspects are relevant, classes should be given in both ranges. E.g. performance measurement ( or subgroups) where a particular monitoring hardware is used to perform the measurement ( or subgroups) is classified in both ranges.Documents where the monitoring relates to the monitoring of user actions must be systematically classified in  (as invention or additional information), independent of any other classification.Following Indexing Codes must be systematically given for documents classified in  and subgroups : if the monitoring is specific to databases if a threshold influences the monitoring behaviour if the monitoring concerns the effects of virtualisation for all event-based monitoring if software is being monitored if the monitored object is a transaction if the monitored system includes the internet if counts are used if the monitored object includes a cacheIf the document does not describe what is being monitored, its subject-matter should not be classified in , but in  or other subgroups of .","G06F11/34|G06F11/0703|G06F11/34|G06F11/36|G06F11/34|G06F11/3404|G06F11/3442|G06F11/3447|G06F11/3466|G06F11/3409|G06F11/3466|G06F11/3438|G06F11/34|G06F2201/80|G06F2201/81|G06F2201/815|G06F2201/86|G06F2201/865|G06F2201/87|G06F2201/875|G06F2201/88|G06F2201/885|G06F11/34|G06F11/30|G06F11/30","Monitoring Extra functionality for observing properties of a running computing system over time in its normal operating conditions without inputting test data","This place covers: For this group and its subgroups, computer activity covers the activities performed by the computer system that involve data (e.g. processing, data storage, data transfer). It also includes user activity. This group also includes the modeling of the system or its behaviour, or simulating the execution of the system for observing its properties on a theoretical level."
"G06F11/3404","{for parallel or distributed programming}","","","","","","","This place covers: The subject-matter of this group covers monitoring of parallel or distributed programming. Typical issues addressed are : determining the degree of parallelism, optimizing the degree of parallellism, performance of distribution algorithms."
"G06F11/3409","{for performance assessment}","","Monitoring of user actions","G06F11/3438","","","","This place covers: monitoring the performance of the computer system or its components. This group covers not only the monitoring of time, but usage of any (physical or other) resource as well. This group applies whatever the component (e.g. disk, processor, scheduler,...) of which the performance is being monitored is."
"G06F11/3433","{for load management  (allocation of a server based on load conditions G06F9/505; load rebalancing G06F9/5083; redistributing the load in a network by a load balancer H04L67/1029)}","G06F9/505|G06F9/5083|H04L67/1029","Adapting or redistributing the load in a computer systemAdapting or planning the capacity requiredRedistributing the load in a network by a load balancer","G06F9/00|G06F11/3442|H04L67/1029","If time measurement is used to be able to determine the load, documents should be classified as well in .","G06F11/3419","","This place covers: Only the monitoring activities to determine the load of a computer system or the distribution of the load on the different components of the computer system. However it does not cover any actions that are performed in response to the determined load."
"G06F11/3438","{monitoring of user actions  (checking the network activity of the user for network-specific applications H04L67/22)}","H04L67/22","Checking the network activity of the user for network-specific applications","H04L67/22","","","Usability Measure of the ease of use of a specific object or set of objects or of how easy the object or set of objects is to learn to use","This place covers: all documents where actions of the user are monitored (e.g. for productivity or allocation of billable employee time). This includes arrangements to evaluate the usability of a system or component."
"G06F11/3442","{for planning or managing the needed capacity}","","","","","","Measures to allocate resources","This place covers: This group covers all subject-matter where monitoring is done to come to conclusions about the capacity required. It is necessary that this goal is explicit in the document. Capacity should be understood here as relating to how much computer resources are needed. In general these are hardware resources (such as the amount of processing power, memory or storage space). However this can also be software resources emulating such hardware (such as an amount of virtual memory, a number of virtual machines, etc.). In contrast to  , here the load is taken as a given and the goal is to come to conclusions about the resources that need to be available. The actions taken in response will change the configuration of the system."
"G06F11/3447","{Performance evaluation by modeling}","","","","","","Model description of a system using mathematical concepts and language. It may help to explain a system and to study the effects of different components or parameters, and to make predictions about system behaviour","This place covers: This group deals with subject-matter where a model of the system to be monitored (or part of it) is made or modified. This group does not cover the use of the model as monitoring tool (which should be classified according to what is being monitored). E.g. : This group covers the construction of a model to determine monitoring points in the system. However, it does not cover a concrete implementation of the monitoring points (which would be in  ). This group covers the construction of a model to be used in a simulation. However, the use of the model in a simulation is not covered (this would be in  )."
"G06F11/3452","{Performance evaluation by statistical analysis}","","Stochastic model development of the system for monitoring","G06F11/3447","","","","This place covers: Performance evaluation by statistical analysis means that statistics are used to come to a conclusion regarding a system parameter. This may be to evaluate system parameters or predict the future behaviour of the system. It covers as well subject-matter where a relation between different parameter is modelled, based on measured values documenting the relationship (e.g. curve-fitting) Typically, this would involve multiple executions or the analysis of time series observed."
"G06F11/3457","{Performance evaluation by simulation}","","","","","","","This place covers: Simulation means that execution characteristics of the system or component to be monitored are observed without actually executing the real system or without executing the system or component under real conditions. Examples are: Monitoring the execution of the real system but with a fictive workload Applying a real workload to a model or a mockup of the system"
"G06F11/3466","{Performance evaluation by tracing or monitoring}","","","","","","Tracing Observing or making available monitored data using additional hardware or software functionality in the monitored system or component","This place covers: The title of this groups should be read as ""by tracing"". This group and its subgroups are also relevant if the tracing is not explicitly done to evaluate the performance (for instance if no specific purpose is stated for the tracing). This group covers arrangements that describe how monitored data of the physical system is being collected or made available. These arrangements can be internal in the system (i.e. tracing) or external to the system (general monitoring arrangements used for monitoring computer activity)."
"G06F11/3471","{Address tracing}","","","","","","","This place covers: Examples are: Observing the addresses circulating on a computer bus Monitoring memory accesses for certain address ranges"
"G06F11/3476","{Data logging  (G06F11/14, G06F11/2205 take precedence)}","G06F11/14|G06F11/2205","","","","","","This place covers: The scope of this group is not restricted to logging of monitoring data per se. It covers as well the determination of what monitoring data should be logged and how it should be logged (e.g. condensing the logged data, logging statistics, ...) and analysis of logged monitoring data."
"G06F11/3485","{for I/O devices}","","","","Documents describing the monitoring of channels should additionally be classified in .","G06F11/349","Channel An independent hardware component that coordinates all I/O to a set of controllers or devices",""
"G06F11/349","{for interfaces, buses}","","","","Documents describing the monitoring of channels should additionally be classified in .","G06F11/3485","Channel An independent hardware component that coordinates all I/O to a set of controllers or devices",""
"G06F11/3495","{for systems}","","","","","","","This place covers: Applies when communication or interaction between the processing components influences the assessed properties of the whole system. Thus, it is a necessary condition to have a communication medium involved, however not a sufficient condition. If the system which is observed is limited to the communicaiton medium, it should not be classified here (but in   if the medium is a network or in   if the medium is a bus). Examples are: Monitoring arrangements for distributed systems Arrangements for application level response time measurement of web servers Monitoring arrangements in a multiprocessor system"
"G06F11/36","Preventing errors by testing or debugging software","","","","","","BugA bug in a program produces an incorrect or unexpected result, or causes the program to behave in unintended ways.Software analysisSoftware Analysis aims at verifying that a program or its specification satisfies certain properties without involving testing (no test inputs are provided to the program under analysis). It can involve for example scanning the source code and analysing the dependencies between the various components, or the use of certain variables, etc. It can consist in the use of formal methods, like model checking or theorem proving which aim at formally guaranteeing certain properties, for example that the program is well-typed, or deadlock free etc. In principle Software analysis does not require the program to execute (static analysis), but in some cases it does, for example to verify runtime properties.Software testingSoftware testing is the process of executing a program, or a discrete program unit, with the intent of finding errors. Tests can only reveal the presence of errors, but cannot ensure the absence of errors. When errors are detected in a program, one might want to start debugging it, i.e. locating precisely the error and correcting it. In both cases (testing and debugging), the program is executed.Software debuggingSoftware debugging refers to the activity of locating an error.","This place covers: The methods used during software development in order to prevent errors: software Analysis (  and subgroups), which refers to verifying properties of a program (statically or dynamically) software testing (  and subgroups), which refers to the activity of detecting errors (using test inputs) software debugging (  and subgroups), which refers to the activity of locating an error. The class also covers the environments (e.g. GUI, simulators) helping a user to perform software debugging or testing ( )."
"G06F11/3604","{Software analysis for verifying properties of programs  (byte-code verification G06F9/44589)}","G06F9/44589","","","","","","This place covers: Software Analysis aims at verifying that a program or its specification satisfies certain properties without involving testing (no test inputs are provided to the program under analysis). It can involve for example scanning the source code and analysing the dependencies between the various components, or the use of certain variables, etc. It can consist in the use of formal methods, like model checking or theorem proving which aim at formally guaranteeing certain properties, for example that the program is well-typed, or deadlock free etc. In principle Software analysis does not require the program to execute (static analysis), but in some cases it does, for example to verify runtime properties."
"G06F11/3608","{using formal methods, e.g. model checking, abstract interpretation  (theorem proving G06N5/006)}","G06N5/006","","","","","","This place covers: Mathematically-based techniques (model checking, abstract interpretation, formal proof) for the verification of a program."
"G06F11/3612","{by runtime analysis  (performance monitoring G06F11/3466)}","G06F11/3466","","","","","","This place covers: Analysing runtime behaviour to detect errors (e.g. performance bug or infinite loops)."
"G06F11/3616","{using software metrics}","","","","","","","This place covers: A software metric is a measure of some property of a piece of software or its specifications, e.g. number of lines in the code, cyclomatic complexity (number of linearly independent paths through a program's source code), or any measure which aims at evaluating the properties of a program."
"G06F11/362","{Software debugging}","","","","","","","This place covers: Software debugging is the activity of locating and correcting an error."
"G06F11/3624","{by performing operations on the source code, e.g. via a compiler}","","","","","","","This place covers: Manual or compiler assisted instrumentation or by any automatic tool of the source code according to an instrumentation policy."
"G06F11/3628","{of optimised code  (optimisation G06F8/443)}","G06F8/443","","","","","","This place covers: Usually the debugging process is performed on an un-optimised version of a program, and the program is optimised (by the compiler) when fully debugged. However, in some cases one wants to debug the optimised version of a program: for example, some bugs might occur in the optimised version of the code only. An obvious problem that an optimised code will create is when a developer sets a breakpoint in a part of code that has been eliminated by the compiler during optimisation."
"G06F11/3632","{of specific synchronisation aspects}","","","","","","","This place covers: Methods and arrangements for dealing with the synchronisation issues involved with debugging operations (e.g. when inserting a breakpoint in a multithreaded or distributed program). Method and arrangements for investigating synchronisation problems in distributed or multithreaded programs."
"G06F11/3636","{by tracing the execution of the program}","","","","","","","This place covers: Methods and arrangements for generating or analysing traces of a program execution."
"G06F11/364","{tracing values on a bus}","","","","","","","This place covers: Methods and arrangements for gathering or analysing data exchanged on a computer bus (e.g. data bus, memory bus) during the execution of a program."
"G06F11/3644","{by instrumenting at runtime}","","","","","","","This place covers: Instrumenting operations performed on a compiled program directly before execution (e.g. Valgrind). Runtime injection: the code is modified at runtime."
"G06F11/3648","{using additional hardware}","","","","","","","This place covers: Hardware arrangements contributing to the debugging process"
"G06F11/3652","{in-circuit-emulation [ICE] arrangements}","","","","Nowadays, the term ""In-Circuit Emulator"" refers also to a JTAG or BDM based device which provides access to the internal registers of the target microprocessor. Said device can take control of the target microprocessor, start, stop or resume the code execution. The code under debug is executed on the real target microprocessor, in that case. If the technical contribution of a document refers to such a JTAG/BDM based device, this document should be classified in  group (Debug interfaces).","G06F11/3656","","This place covers: The term ""In-Circuit Emulator"" in this group only refers to a device replacing the target microprocessor. The code under debug is not executed on the real target processor but rather on a specific hardware that emulates the target processor and that comprises debug facilities for setting breakpoints or watchpoints."
"G06F11/3656","{using a specific debug interface}","","","","","","JTAGJoint Test Action Group (JTAG) is the common name for what was later standardized as the IEEE 1149.1 Standard Test Access Port and Boundary-Scan Architecture. JTAG refers nowadays to a bus for transferring debug commands from a host to a target and debug data from the target to the host.BDMBackground Debug Mode (BDM) interface is an electronic interface that allows debugging of embedded systems. BDM interface allows a Host to manage and query a target.","This place covers: Aspects related to communication between a host and a target (e.g. JTAG/BDM based ""In-Circuit Emulator"")."
"G06F11/366","{using diagnostics  (G06F11/0703 takes precedence)}","G06F11/0703","","","","","","This place covers: The aim of this group is to be able for example, to classify documents which have to do with software bugs, but not at the software development phase, afterwards. For example, if a system crashes during operation, it might be caused by a software bug. The system is diagnosed after the crash (or the failure) to find out where the bug was. This group might have overlap with the   and subgroups... e.g. analysis of core dumps, post-mortem debugging, memory leaks, and failure analysis."
"G06F11/3664","{Environments for testing or debugging software}","","","","","","","This place covers: Environment, frameworks, Graphical User Interfaces or simulators that aim at supporting or facilitating the task of a user during the various phases of software testing or software debugging (e.g. to navigate into the code, to or remove breakpoints, to visualize execution traces, to edit/maintain/archive test suites). The environment may be comparable to a Software Development Environment but it contains features that are specific to the phases of software testing or debugging."
"G06F11/3668","{Software testing  (software testing in telephone exchanges H04M3/242, testing of hardware G06F11/22)}","H04M3/242|G06F11/22","Testing of hardware","G06F11/22","","","","This place covers: Software testing is the process of executing a program, or a discrete program unit, with the intent of finding errors."
"G06F11/3672","{Test management}","","","","The document should be classified according to the most relevant information concerning one activity of the software testing.if it is possible to identify one relevant piece of information related to one of the identified software testing activities, the document should be in classified in one of the corresponding subgroups:, , , , .If it is not possible to extract any relevant information concerning any of the identified software testing activities, the document should be classified in the test management subgroup ()","G06F11/3676|G06F11/368|G06F11/3684|G06F11/3688|G06F11/3692|G06F11/3672","","This place covers: The different activities of software testing: test case/script/scenario design ( ) test coverage analysis ( ) execution of the test cases/scripts/scenarii ( ) analysis of the test results ( ) maintenance and updates of the test cases/scripts/scenarii in parallel to the software evolution during software development ( )"
"G06F11/3676","{for coverage analysis}","","","","","","","This place covers: Coverage analysis is concerned with the degree to which test cases exercise or cover the logic of the program. Because testing is a time consuming activity that cannot be exhaustive, the key issue is to apply a subset of all possible test cases which has the highest probability of detecting errors. Coverage analysis is therefore an issue at the design stage (strategy for generating test inputs that are effective in terms of coverage) as well as at the execution stage (how to measure coverage). Test coverage can refer to different aspects: path coverage data coverage line coverage"
"G06F11/368","{for test version control, e.g. updating test cases to a new software version}","","","","","","","This place covers: Maintenance and updates of test scripts in parallel to the evolution of the software during software development."
"G06F11/3684","{for test design, e.g. generating new test cases}","","","","","","","This place covers: Generation or updates of test cases, scenarios, scripts. Specific languages for writing tests."
"G06F11/3688","{for test execution, e.g. scheduling of test suites}","","","","","","","This place covers: Scheduling of the tests; recording of test results; regression testing; mutation testing."
"G06F11/3692","{for test results analysis}","","","","","","","This place covers: Comparing the results of the tests with an oracle (assertions, mathematical models, simulations and the like)."
"G06F11/3696","{Methods or tools to render software testable}","","","","","","","This place covers: Arrangements for facilitating the testing of a software unit: Arrangement can be an interface to provide test inputs. Arrangement for simulating missing part of software or hardware that are necessary for performing the execution and the testing of the software unit. Arrangement for performing a time compression in order to simulate a long term execution of a software program in a short time frame Arrangement for performing the test execution on a different platform"
"G06F12/00","Accessing, addressing or allocating within memory systems or architectures  (digital input from, or digital output to record carriers, e.g. to disk storage units, G06F3/06)","G06F3/06","Memory management specially adapted to image processingStatic stores","G06T1/60|G11C","Any classification rules applicable to a specific group also apply to any sub-groups thereof unless overruled by more specific rules.When one or more sub-group definitions are listed in the definition statement of a group no further description of these sub-groups are provided in this FCR.The group  contains no material and should not be used for classification.Use of Indexing Codes:All groups have corresponding  Indexing Code-codes, which should be used for secondary aspects (non-invention information).Indexing Scheme :In November 2011 a new indexing scheme relating to  has been introduced. The Indexing Codes from the range -  are mandatory when applicable. The code range -  is not mandatory but should preferably be used for documents characterized by specific technical effects or applications.Warning: The  indexing scheme is new and has not yet been systematically applied to the existing documentation except when explicitly indicated in this document.","G06F12/00|G06F12/00|G06F2212/00|G06F12/00|G06F2212/20|G06F2212/7211|G06F2212/10|G06F2212/178|G06F2212/00","",""
"G06F12/02","Addressing or allocation; Relocation  (program address sequencing G06F9/00; arrangements for selecting an address in a digital store G11C8/00)","G06F9/00|G11C8/00","",""," should be used only for material not provided for in any of the sub-groups.","G06F12/02","",""
"G06F12/0207","{with multidimensional access, e.g. row/column, matrix}","","","","","","","This place covers: Addressing or accessing memory in two or more dimensions, e.g. for transposing of data. Addressing of rectangular blocks of data."
"G06F12/0215","{with look ahead addressing means}","","Memory controllers","G06F13/16","","","","This place covers: Page mode addressing of DRAM. Speculative addressing of a memory in general."
"G06F12/0223","{User address space allocation, e.g. contiguous or non contiguous base addressing}","","Resource allocation","G06F9/50","","","",""
"G06F12/023","{Free address space management}","","","","","","","This place covers: Dynamic memory allocation. Explicit memory de-allocation. Free space management."
"G06F12/0238","{Memory management in non-volatile memory, e.g. resistive RAM or ferroelectric memory}","","","","","","","This place covers: Memory management in non-volatile memory that is not specific to flash memory, e.g. in emerging memory types such as resistive RAM or ferroelectric memory."
"G06F12/0246","{in block erasable memory, e.g. flash memory}","","Details of block management in an interface arrangement to a storage system Details of file management in an interface arrangement to a storage system Details of the controller in an interface arrangement to a storage system making use of vertical data movement Details of the protocol conversion in an interface arrangement to a storage system making use of vertical data movementInterface arrangements for single solid-state devicesInterface arrangements for hybrid storage devices, e.g. magnetic and semiconductor mediums sharing the same controllerInterface arrangements for storage system comprising multiple controllers and multiple storage medium types, e.g. SSD, HDD and tapes combined Interface arrangements for storage system comprising multiple controllers and multiple semiconductor storage devices, e.g. Hybrid storage array Write caching, Non-volatile memories","G06F3/064|G06F3/0643|G06F3/0658|G06F3/0661|G06F3/0679|G06F3/068|G06F3/0685|G06F3/0688|G06F12/0804|G06F12/0866|G11C16/00","Indexing Codes -  are used in this group. The coding of the existing documentation is mostly complete.","G06F2212/7201|G06F2212/7211","PageThe smallest data unit of read or write access in a NAND flash memory.","This place covers: Addressing of flash memory, e.g. logical to physical address mapping; Allocation within flash memory; Management, e.g. cleaning, compacting, erasing, wear levelling; Temporary storage of data, e.g. within volatile buffers or in buffer blocks."
"G06F12/0253","{Garbage collection, i.e. reclamation of unreferenced memory}","","","","The Indexing Code  should be used for conservative garbage collection. The coding of the existing documentation is mostly complete.","G06F2212/702","","This place covers: Automatic reclamation of heap-allocated memory after last use by a program, i.e. where the allocated memory is not explicitly freed by the program."
"G06F12/0284","{Multiple user address space allocation, e.g. using different base addresses  (interprocessor communication G06F15/163)}","G06F15/163","Virtual address translationInterprocessor communication","G06F12/10|G06F15/163","","","","This place covers: Multi-user or multiprocessor address space allocation. Mapping arrangements therefore, e.g. local to global address space mapping."
"G06F12/0292","{using tables or multilevel address translation means  (G06F12/023 takes precedence; address translation in virtual memory systems G06F12/10)}","G06F12/023|G06F12/10","","","","","",""
"G06F12/04","Addressing variable-length words or parts of words","","Information transfer on a bus","G06F13/38","","","","This place covers: Addressing variable length words. Addressing parts of a word, e.g. bit fields. Addressing unaligned words."
"G06F12/06","Addressing a physical block of locations, e.g. base addressing, module addressing, memory dedication  (G06F12/08 takes precedence)","G06F12/08","Memory controller.Bank or array addressing within individual memory devices., ","G06F13/16|G11C8/00|G11C11/00","","","","This place covers: Addressing or allocation of physical memory modules or banks. Module selection, e.g. using chip selects."
"G06F12/08","in hierarchically structured memory systems, e.g. virtual memory systems","","Hierarchically organised storage systems Virtual address translationReplacement control","G06F3/06|G06F12/10|G06F12/12","","","","This place covers: Hierarchical memory systems. Virtual memory. Paging."
"G06F12/0802","Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches","","Register cache (for register file).Branch history / target cache.Caching of dynamically generated content, e.g. database query cache, web cache.","G06F9/30|G06F9/38|G06F16/00","Indexing Code groups , , ,  are mandatory in this group when applicable.","G06F2212/27|G06F2212/30|G06F2212/45|G06F2212/60","","This place covers: Cache memories being part of a memory hierarchy. Information not provided for in the sub-groups is classified in this group, e.g. aspects relating to cache configuration, error handling or testing."
"G06F12/0804","with main memory updating  (G06F12/0806 takes precedence)","G06F12/0806","Data backup to prevent data loss.Replacement policies ","G06F11/14|G06F12/12","","","","This place covers: Write-back of dirty data to main memory. Saving or preservation of dirty data in case of errors or power failure Write-back policies, e.g. selective write-through / write-back."
"G06F12/0806","Multiuser, multiprocessor or multiprocessing cache systems","","","","Indexing Codes  are mandatory in this group.","G06F2212/62","",""
"G06F12/0815","Cache consistency protocols","","Memory consistency not specific to cache coherency.Locking for the purpose of program synchronization","G06F9/46|G06F9/52","The group  should only be used for material not provided for in any of the subgroups -.","G06F12/0815|G06F12/0817|G06F12/0837","","This place covers: Cache coherency protocols, e.g. snooping, directory based or software controlled.Further details of subgroups : this group is not used for classification of new material, use  ."
"G06F12/0844","Multiple simultaneous or quasi-simultaneous cache accessing","","Pipeline techniques within processorsModule addressing in general","G06F9/38|G06F12/06","","","","This place covers: Simultaneous processing of two or more accesses."
"G06F12/0862","with prefetch","","Compiling techniques to reduce cache missesInstruction or operand prefetching within processors","G06F8/4442|G06F9/38","For prefetching in disk caches this class should be combined with Indexing Code .Indexing Code group  is mandatory in this group. The coding of the existing documentation is mostly complete.","G06F12/0866|G06F2212/602","","This place covers: Prefetching in cache memory using fixed or adaptive prefetch strategies. Software controlled prefetching using prefetch instructions. Use of dedicated prefetch buffer or prefetch cache."
"G06F12/0864","using pseudo-associative means, e.g. set-associative or hashing","","Page mode accessing of cache","G06F12/0882","Indexing Code  is mandatory for material dealing with way prediction. The coding of the existing documentation is mostly complete.","G06F2212/6032","",""
"G06F12/0866","for peripheral storage systems, e.g. disk cache","","Storage adapters, disk storage managementData buffering arrangements for data transfers within storage systemsCaching of dynamically generated data content, e.g. web caching, database query results Temporary data storage in networks","G06F3/06|G06F3/0656|G06F16/00|H04L67/2842","Indexing Code groups , , , ,  and  are mandatory in this group.If the invention information can be fully classified in other group(s) it is recommended to add only Indexing Code .","G06F2212/21|G06F2212/22|G06F2212/26|G06F2212/28|G06F2212/31|G06F2212/46|G06F12/0866","","This place covers: Dedicated cache memory within storage controller or storage device; Caching of network attached storage or remote server content; Disk caching in main memory of host computer, e.g. by operating system."
"G06F12/0868","Data transfer between cache memory and other subsystems, e.g. storage devices or host systems","","Write back control Replacement control ","G06F12/0804|G06F12/12","","","","This place covers: Data transfer control within the cache system, between the cache and the storage devices or between the cache and the host system. E.g. concurrent transfers, internal buffering arrangements, pipelining."
"G06F12/0871","Allocation or management of cache space","","Replacement control","G06F12/12","","","","This place covers: Allocation of cache space. Organisation of cache data, data structures therefore. Free space management within cache."
"G06F12/0873","Mapping of cache memory to specific storage devices or parts thereof","","Set-associative or similar mappings of individual cache entries to storage device locations.","G06F12/0864","","","","This place covers: Selective allocation of (parts of) cache memory space to specific storage devices or parts of such devices. This group is limited to large granularity mapping of cache areas to portions of a storage system, e.g. allocating cache partitions to individual storage devices."
"G06F12/0875","with dedicated cache, e.g. instruction or stack","","Branch history cache, branch target cache","G06F9/38","Indexing Code group  is used in this group.Warning: Except for  these codes have not yet been allocated to the existing documentation.","G06F2212/45|G06F2212/451","","This place covers: Cache memories adapted for particular applications or specific types of data, e.g. stack caches, instruction caches, caches for graphics information."
"G06F12/0877","Cache access modes","","","","","","","This place covers: Special access modes to cache memory, e.g. burst mode access, partial line accessing."
"G06F12/0888","using selective caching, e.g. bypass","","","","","","","This place covers: Selective or conditional caching of data, e.g. based on expected usefulness of caching; Bypassing of cache."
"G06F12/0891","using clearing, invalidating or resetting means","","Main memory updating, e.g. flushing of cache contentInvalidation forming part of a cache coherency protocol Initialisation circuits for static stores, ","G06F12/0804|G06F12/0815|G11C7/20|G11C11/40","","","","This place covers: Invalidation of the entire cache memory content or parts of the cache memory content, e.g. upon initialization or task switching; Hardware techniques for cache memory invalidation."
"G06F12/0893","Caches characterised by their organisation or structure","","Static stores in general","G11C","Indexing Code  is mandatory for memory with integrated cache memory, e.g. cache DRAM. The coding of the existing documentation is mostly complete.Indexing Code groups  and  are used in this group.","G06F2212/305|G06F2212/22|G06F2212/27","","This place covers: Cache topology; Cache structurally integrated within a memory device, e.g. DRAM row cache; Cache employing DRAM or other technology than SRAM."
"G06F12/10","Address translation","","Virtual machines.Logical partitioningAddress mapping within flash memory Multi-user or multiprocessor address space allocationAddress mapping or translation in general, not specific to virtual memory","G06F9/455|G06F9/50|G06F12/0246|G06F12/0284|G06F12/0292","Indexing Codes -  are used in this group. The coding of the existing documentation is mostly complete.","G06F2212/65|G06F2212/657","PageThe unit of paging in virtual memory","This place covers: Virtual to physical address translation; Translation fault handling; Virtual address space management, see provisionally also  ."
"G06F12/1027","using associative or pseudo-associative address translation means, e.g. translation look-aside buffer [TLB]","","","","Indexing Code group - is used in this group. The coding of the existing documentation is mostly complete.Replacement control for TLB's is classified in -. An Indexing Code  should be allocated in such cases.","G06F2212/681|G06F2212/684|G06F12/12|G06F12/128|G06F12/1027","","This place covers: Caching of address translations; TLB miss handling."
"G06F12/1081","for peripheral access to main memory, e.g. direct memory access [DMA]","","","","","","","This place covers: Address translation for peripheral devices, channels, I/O adapters, network adapters, DMA controllers etc. Memory management units within such devices or interfaces."
"G06F12/109","for multiple virtual address spaces, e.g. segmentation  (G06F12/1036 takes precedence)","G06F12/1036","","","Indexing Codes  and  are particularly relevant in this group.","G06F2212/656|G06F2212/657","","This place covers: Translation for multiple virtual address spaces, e.g. identified by an address space identifier; Segmentation based on a segment identifier; Guest address space to host address space translation."
"G06F12/12","Replacement control","","Write back control in cache","G06F12/0804","","","","This place covers: Replacement control in virtual memory, cache memory or TLB. Replacement algorithms."
"G06F12/14","Protection against unauthorised use of memory {or access to memory}","","Multiprogramming arrangementsProgram synchronization, e.g. using locks; mutual exclusionSecurity arrangements in computersCoded identity card or credit cardSecure communication","G06F9/46|G06F9/52|G06F21/00|G07F7/08|H04L9/00","","","","This place covers: Preventing unauthorized access to memory content. Virtual memory access control."
"G06F12/1408","{by using cryptography  (for digital transmission H04L9/00)}","H04L9/00","Secure communication","H04L9/00","","","","This place covers: Address scrambling; Data encryption within a memory, e.g. being dependent on the memory location."
"G06F12/1416","{by checking the object accessibility, e.g. type of access defined by the memory independently of subject rights  (G06F12/1458 takes precedence)}","G06F12/1458","","","","","","This place covers: Memory protection being independent of the subject identity, e.g. physical write protection of a memory."
"G06F12/1458","{by checking the subject access rights}","","Access list protection in general","G06F21/00","","","","This place covers: Memory protection in which the protection depends on the subject identity, e.g. using an access list."
"G06F12/16","Protection against loss of memory contents {(contains no material, see G06F11/00)}","G06F11/00","","","","","",""
"G06F13/00","Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units  (interface circuits for specific input/output devices  G06F3/00; multiprocessor systems  G06F15/16 {multiprogram control therefor  G06F9/46})","G06F3/00|G06F15/16|G06F9/46","Transmission of digital information in generalSynchronisation in transmission of digital information in generalBus networksSelecting","H04L|H04L7/00|H04L12/40|H04Q","","","","This place covers: Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units."
"G06F13/28","using burst mode transfer, e.g. direct memory access {DMA}, cycle steal  (G06F13/32 takes precedence)","G06F13/32","Remote DMA","H04L12/06","","","","This place covers: Handling requests for interconnection or transfer using burst mode transfer, e.g. direct memory access."
"G06F13/38","Information transfer, e.g. on bus  (G06F13/14 takes precedence)","G06F13/14","Bus networks","H04L12/40","","","",""
"G06F13/382","{using universal interface adapter}","","Digital I/O from or to direct access storage devices Wireless network data management","G06F3/0689|H04W","The information transfer is between components in a computer. Therefore, documents classified in this subgroup should relate to a data transfer in, to or from a computer.","","","This place covers: Information transfer, e.g. on bus using universal interface adapter."
"G06F13/4004","{Coupling between buses}","","","","","","",""
"G06F13/4063","{Device-to-bus coupling}","","Booting configuration","G06F9/445","","","",""
"G06F13/4081","{Live connection to bus, e.g. hot-plugging  (current or voltage limitation during live insertion H02H9/004)}","H02H9/004","","","Documents related to detection of presence and/or type of connected peripheral can be classified in this subgroup.","","","This place covers: Bus structure electrical coupling between device and bus; Live connection to bus, e.g. hot plugging."
"G06F13/409","{Mechanical coupling  (back panels H05K7/1438)}","H05K7/1438","Computer enclosureElectrical connector","G06F1/16|H01R13/00","Documents related to mechanical coupling between a computer component and a bus can be classified in this subgroup, e.g. coupling of connectors or boards to a computer bus.","","","This place covers: Bus structure based on a mechanical coupling between device and bus."
"G06F13/42","Bus transfer protocol, e.g. handshake; Synchronisation","","Characterised by a protocol","H04L29/06","","","",""
"G06F15/00","Digital computers in general  (details G06F1/00 – G06F13/00); Data processing equipment in general","G06F1/00|G06F13/00","","","","","",""
"G06F15/02","manually operated with input through keyboard and computation using a built-in program, e.g. pocket calculators","","Constructional details or arrangements for portable computersInput arrangements or combined input and output arrangements for interaction between user and computer","G06F1/1613|G06F3/01","When a document qualifies for one of the groups below,  should not be assigned:For combination with other devices having a different main function, e.g. watches, pens: Constructional details or arrangements: User interface arrangements, e.g. keyboard, display; Interfaces to other computer systems: With printing provisions: Of the IC-card-like type: Adapted to a specific application: For unit conversion: For time management, e.g. calendars, diaries: For measuring: For data storage and retrieval: For reading: ","G06F15/02|G06F15/0208|G06F15/0216|G06F15/0225|G06F15/0233|G06F15/0241|G06F15/025|G06F15/0258|G06F15/0266|G06F15/0275|G06F15/0283|G06F15/0291","","This place covers: Pocket calculators, e-books, PDA."
"G06F15/16","Combinations of two or more digital computers each having at least an arithmetic unit, a program unit and a register, e.g. for a simultaneous processing of several programs {(coordinating program control therefor G06F9/52; in regulating and control system G05B)}","G06F9/52|G05B","Constructional details on portable computers, PDAsInitialization of multiprocessor systems.Partitioning or combining resources in a multiprogramming arrangement.Intertask communicationFault-toleranceMemory protectionMemory access priorityCoupling between bussesMulticore processorsNetwork on chipDigital computing or data processing equipment or methods, specially adapted for data retrieval.Control area networks (CAN)Multiprocessor for program-control systems Data processing systems or methods, specially adapted for administrative, commercial, financial, managerial, supervisory or forecasting purposes; systems or methods specially adapted for administrative, commercial, financial, managerial, supervisory or forecasting purposes. Computer aided management of electronic mailStored and forward switching systemsCommunication control characterized by a protocol.Routing of packets in a LAN/WANFlow Control in a LAN/WANQueue Scheduling in a LAN/WANPacket switches for a LAN/WANElectronic mail systemsCasings, cabinets, racks, chassis, drawers for data centers","G06F1/1613|G06F9/4405|G06F9/5061|G06F9/54|G06F11/20|G06F12/00|G06F13/00|G06F13/4022|G06F15/7807|G06F15/7825|G06F16/00|B60R16/023|G05B19/0421|G06Q|G06Q10/107|H04L12/54|H04L29/06|H04L45/00|H04L47/10|H04L49/00|H04L49/00|H04L51/00|H05K5/00","When a document qualifies for one of the groups below, none of the groups above should be assigned:Computing Infrastructure, e.g. cluster racks: Inter-processor communication: Using a common memory e.g. mailbox, dual port memory, UMA, NUMA architectures: Using an interconnection network e.g. message passing architectures: Direct connection machines e.g. point to point topologies, buses, (partial) crossbars: Being dynamically configurable e.g. loosely coupled nearest neighbour architecture: Indirect interconnection networks (one or several nodes are traversed before reaching destination): Hierarchical e.g. trees, pyramids : Non-hierarchical: On one dimension e.g. linear arrays,rings: On two dimensions e.g. mesh, torus:Topologies not covered by groups  or : Intercommunication techniques specific to parallel machines: Routing: Collective communications e.g. gather/scatter, broadcast, multicast, all to all: Synchronization, hardware support therefore: Distributed shared memory, hardware support therefore e.g. RDMA: Details on network interfaces: Initialisation or configuration control: ","G06F15/161|G06F15/163|G06F15/167|G06F15/173|G06F15/17337|G06F15/17343|G06F15/17356|G06F15/17362|G06F15/17368|G06F15/17375|G06F15/17381|G06F15/17375|G06F15/17381|G06F15/17387|G06F15/17306|G06F15/17312|G06F15/17318|G06F15/17325|G06F15/17331|G06F15/1735|G06F15/177","","This place covers: MIMD, SPMD Architectures."
"G06F15/163","Interprocessor communication","","Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units","G06F13/00","","","",""
"G06F15/76","Architectures of general purpose stored program computers  (with program plugboard G06F15/08; multicomputers G06F15/16)","G06F15/08|G06F15/16","","","Comprising a single central processing unit: System on Board: computer system on one or more PCB e.g. motherboards, daughterboards, blades: System on Chip: computer system on a single chip: System in Package: computer system on a number of chips in a single package: On-chip cache, off-chip memory: Specially adapted for real time processing e.g. comprising hardware timers :Specially adapted for signal processing e.g. Harvard Architectures: Tightly coupled to memory e.g. computational memory, smart memory, processor in memory: Globally asynchronous , locally synchronous e.g. Network on Chip: Reconfigurable architectures: Reconfiguration support e.g. configuration loading, configuration switching (hardware OS): Self reconfiguration:Multiple Contexts: Pipeline reconfiguration: Runtime Interface e.g. data exchange, runtime control: Embedded in CPU as a functional unit:As a coprocessor. Modular architectures e.g. assembled from a number of identical packages: Comprising an array of processing units with common control, e.g. single instruction multiple data processors: SIMD multiprocessors: One dimensional arrays e.g. rings, linear arrays, buses:Two dimensional arrays. i.e. mesh, torus:Other topologies.e.g. hypercubes: Associative processors: Systolic arrays: Vector Processors: Details on exchanging data with memory:Using a cache:Details on exchanging data with registers: Special arrangements thereof.e.g. mask, switch: Array of vector units:Data or demand driven: Dataflow computers: Here are specified the places which could be assigned in addition to the places above to cover further technical details:Indexing Code  finite state machines: controlled by or implementing FSM","G06F15/78|G06F15/7803|G06F15/7807|G06F15/7807|G06F15/781|G06F15/7814|G06F15/7817|G06F15/7821|G06F15/7825|G06F15/7867|G06F15/7871|G06F15/7882|G06F15/7875|G06F15/7878|G06F15/7885|G06F15/7892|G06F15/7889|G06F15/7896|G06F15/80|G06F15/8007|G06F15/8015|G06F15/8023|G06F15/803|G06F15/8038|G06F15/8046|G06F15/8053|G06F15/8061|G06F15/8069|G06F15/8076|G06F15/8084|G06F15/8092|G06F15/82|G06F15/825|G06F3/0604","","This place covers: System on Board, System on Chip, Reconfigurable Architectures, Data-Parallel Architectures (Vector Architectures, SIMD, Systolic Arrays), Dataflow Architectures, Demand Driven Architectures."
"G06F16/00","Information retrieval; Database structures therefor; File system structures therefor","","","","1. For documents dealing with how a given type of data is retrieved or how the database or repository for this particular type of data is organised, classification should generally take place in the indicated subgroup for the data type as follows:In multimedia databases - Geographical information - Still images - Structured information, records - Unstructured text - Audio information (e.g. music, speech) - Video information - Semi-structured information (e.g. XML, CSV) - 2. If, however, more than one particular data type is described in some detail, classification under each of the corresponding subgroups should be considered.3. If no specific data type is indicated at all, or an explicit hint is given that the disclosed mechanism can be used for retrieval of arbitrary data types, e.g. a list of alternative data types, then for ""generic"" data type, use subgroups under .4. In the case of annotated data/metadata-based retrieval, the type of data used for the retrieval is sometimes different from the data type to be finally retrieved (e.g. associated images are used to retrieve text documents).In this case, the classification should be decided according to the level of disclosed details concerning each aspect:According to the data type retrieved if the use of that metadata of different type is only casually described, andAccording to the data type used for retrieval, e.g. type of the metadata if specific details of this use are disclosed.In the cases where both aspects are well-covered, double classification can be warranted.Note: Many problems with generic data types, such as under rule 3, arise for documents describing querying systems/methods using metadata wherein the data type of the data finally retrieved is arbitrary or does not really matter. Using the above approach, these documents simply can be classified under the data type used for the retrieval and in the metadata subgroup under the generic data type subgroup. A similar approach can be applied in case of browsing a data type using a different data type.For example: browsing a set of audio files by browsing through the titles of the files or through images representing the audio files is to be classified under ''browsing of audio data''. In case some interesting aspects also merit a classification under text, respectively image browsing, this should be covered by double classification. Again, classification under ''browsing of generic data'' has to be considered.5. In this technical field, one does not distinguish between invention and additional information in the sense of the IPC Guide § 77-80. Thus, symbols are allocated only as ""invention information"" (INV) type, irrespective of the true nature of the information: invention or additional.","G06F16/40|G06F16/29|G06F16/50|G06F16/20|G06F16/30|G06F16/60|G06F16/70|G06F16/80|G06F16/90","","This place covers: Systems and methods for retrieving digital information stored in databases, data repositories or file systems, locally or remotely. Details of the organisation and preparation of information for use during the retrieving of digital information, e.g. generation of indexing information or query formulation. Details of data structures used for information retrieval, such as trees, lists or hashing. Details of query processing and the presentation of query results, e.g. in textual or graphical form on graphical user interfaces [GUIs]. Details of browsing digital information. Details of architectures of databases, data repositories or file systems, e.g. physical, logical, virtual, central or distributed architectures. Details of managing data stored in databases, data repositories or file systems, e.g. tuning, replication, archiving, synchronisation, concurrency control and interfaces therefor such as GUIs. Details of optimising the storage and retrieval of digital information, e.g. de-duplication of stored data, application-specific caching and pre-fetching in file systems, (distributed) databases or web browsers. Systems and methods for retrieving data from structured databases and for their management. Examples of such structured databases are relational, object-oriented, multidimensional, spatial, temporal and geographical databases. Systems and methods for retrieving semi-structured data, e.g. XML formatted data or comma separated values. Systems and methods for retrieving text, audio, image, video or multimedia data from databases or for managing document libraries. Systems and methods for information retrieval from and browsing in the World Wide Web."
"G06F16/10","File systems; File servers","","Details of block level storage systemsDetails of error detection and correctionAddressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. cachesProtecting data against unauthorised access or modification","G06F3/0604|G06F11/14|G06F12/0802|G06F21/00","The classification system of  is organised in two dimensions. Subgroups  -  define different functional aspects of a standard file system. These functional aspects define the first dimension. The subgroup  defines additional aspects of different file system types. These file system types represent the second dimension. Double classification for functional aspects according to the first dimension and for additional aspects of different file system types according to the second dimension may be considered if a contribution in both dimensions is present.","G06F16/10|G06F16/11|G06F16/17|G06F16/18","Data backupA copy of data created by replicating persistent data from a given storage medium (not from a volatile memory) at a particular point in time for the purpose of potentially later recovering said data in the state it was at said particular point in time. The recovery can either occur through restoration of said replicated data onto a storage medium or memory or by using the memory/medium onto which the copy was created. A backup of data typically is used to at least partially correct or restore lost or corrupted data, although it is accepted that the restored state usually is not identical to the state when the data loss occurred, i.e. some data may be unrecoverable.FileA file is an abstract data container used in file systems to manage a set of data. The internal structure of a file normally is not known by the file system, i.e. the file is opaque from the viewpoint of the file system. The internal structure and size of a file is defined by the application generating and using the file but is independent of the underlying physical storage system used to store the file.File systemA file system (or filesystem) is a means to organise data expected to be retained after a program terminates by providing procedures to store, retrieve and update data.Hierarchical Storage Management (HSM)A particular case of data migration wherein the target medium is lower in a hierarchical storage system and is used for less frequently used data or for data that is no longer actively used. The target medium is suitable for longer-term storage, is slower and has lower cost per unit of data. In contrast to backup, HSM systems do not provide an additional instance of the data.Data migrationMoving data from one memory or storage medium to another without effectively replicating it since ultimately only one copy persists. Examples: transferring data from a disk to another one having different reliability, performance or cost properties.Data replicationThe act of creating several instances of the same data of which at least two are available in the absence of errors and modifications of the original data. The different instances may be stored on different locations of a given storage medium or memory or they may be stored on physically distinct media or memories. The concept of replication is independent of the purpose for which it is used, e.g. replication may be used for potential restoration of data, for load balancing and performance improvement, for fault tolerance, or for increasing the availability of data, etc. Data replication can occur at different levels of abstraction, e.g. at database level, at file system level, at the level of disk/storage I/O operations or at the level of (main) memory pages or even individual memory write instructions.","This place covers: Details of file systems and file servers. In particular, this group covers all aspects of generating, accessing and managing files."
"G06F16/113","{Details of archiving  (lifecycle management in storage systems G06F3/0649; backup systems G06F11/1446)}","G06F3/0649|G06F11/1446","Hierarchical storage management (HSM) systems","G06F16/185","","","","This place covers: Long-term storage or digital preservation of historical data object versions whereas the fact that files are stored in an archive is generally known to the user in contrast to Hierarchical Storage Management (HSM) systems in which the actual storage location is NOT known to the user. Whenever a file has been stored in the archive, the original file in the file system will be deleted, normally to free storage space in the file system."
"G06F16/116","{Details of conversion of file system types or formats}","","File system format conversion of restoring backed-up files","G06F11/1448","","","","This place covers: Conversion of a file system from a first to a second type or format. Upgrade from an older to a newer file system version or vice versa."
"G06F16/119","{Details of migration of file systems  (migration mechanisms in storage systems G06F3/0647)}","G06F3/0647","","","","","","This place covers: Migration of complete file systems from a first to a second environment, e.g. for replacing old server systems."
"G06F16/122","{using management policies  (backup systems G06F11/1446; file migration policies for HSM systems G06F16/185)}","G06F11/1446|G06F16/185","","","","","","This place covers: Policy-based management of file systems, e.g. in combination with archiving, allowing automatic management of file systems. Quota management. Allocation policies."
"G06F16/125","{characterised by the use of retention policies  (retention policies for HSM systems G06F16/185)}","G06F16/185","","","","","","This place covers: Policy-based management of file systems characterised by the use of retention policies for managing the lifetime of files (lifecycle management of files)."
"G06F16/128","{Details of file system snapshots on the file-level, e.g. snapshot creation, administration, deletion  (use of snapshots for error detection or correction G06F11/14, G06F11/16)}","G06F11/14|G06F11/16","","","","","","This place covers: Management of snapshots of file systems, e.g. snapshot creation, deletion."
"G06F16/13","File access structures, e.g. distributed indices  (arrangements of input from, or output to, record carriers G06F3/06)","G06F3/06","","","","","","This place covers: File indexing methods used in file systems and their management, e.g. using directories, trees (e.g. Comprising inodes, vnodes) for indexing and organising files in the file system. File indexing methods used in distributed file systems, e.g. the use of a centralised or distributed index in a distributed file system."
"G06F16/134","{Distributed indices}","","","","","","","This place covers: Use of distributed indices in file systems, e.g. Distributed Hash Tables (DHT)."
"G06F16/137","{Hash-based  (content-based indexing of textual data G06F16/31)}","G06F16/31","","","","","","This place covers: Use of hashing or hash functions for indexing files in file systems wherein hashing values are calculated from the file content or file metadata, e.g. file name, file path, wherein the internal file structure or the data type of the file content is not relevant for the calculation of the hash-values."
"G06F16/14","Details of searching files based on file metadata","","Content-based searching of textual dataContent-based searching of multimedia dataContent-based searching of image dataContent-based searching of audio dataContent-based searching of video dataContent-based searching of HTML documents","G06F16/30|G06F16/40|G06F16/50|G06F16/60|G06F16/70|G06F16/95","","","","This place covers: Techniques and architectures for searching files in a file system based on file metadata, e.g. such as file name, associated keywords, time and owner information, creation date, file signatures or dependencies between files."
"G06F16/144","{Query formulation}","","","","","","","This place covers: Specific techniques for generating file search queries."
"G06F16/148","{File search processing}","","","","Specific techniques for processing search queries for files having specific contents, e.g. image files, audio files, video files, multimedia files, semi-structured files or text files.Such specific file search processing methods must be classified in the file type specific groups.","","","This place covers: Techniques for processing search queries for files in a file system."
"G06F16/152","{using file content signatures, e.g. hash values}","","","","Specific methods for searching files having specific contents or data types, e.g. image files, audio files, video files, multimedia files, semi-structured files or text files. Such specific file search methods must be classified in the file type specific groups.","","","This place covers: Techniques for searching files based on file content signatures such as hash values generated from the file content. The calculation of the file content signature does neither take into account internal structures of the file nor the data type of the file content."
"G06F16/156","{Query results presentation}","","","","","","","This place covers: Specific methods for the presentation of file search/query results."
"G06F16/16","File or folder operations, e.g. details of user interfaces specifically adapted to file systems","","","","","","","This place covers: Details of operations performed on files and folders, in particular at the user level, e.g. file copy, file delete, (automatic) classification of files. Generation of file meta data, such as file names. Details of user-interfaces specifically adapted to file systems."
"G06F16/162","{Delete operations  (erasing in storage systems G06F3/0652)}","G06F3/0652","","","","","","This place covers: Erase or delete operations on files and folders, e.g. secure or efficient erase/delete."
"G06F16/164","{File meta data generation}","","","","","","","This place covers: Methods for generating metadata for files and folders. Methods for generating (content based) names of files and folders."
"G06F16/166","{File name conversion}","","File name conversion of backed up files","G06F11/1448","","","","This place covers: Methods for converting file and folder names, e.g. for adapting the file names to different OS."
"G06F16/168","{Details of user interfaces specifically adapted to file systems, e.g. browsing and visualisation, 2d or 3d GUIs  (query results presentation G06F16/156)}","G06F16/156","Generic interaction techniques for graphical user interfaces","G06F3/048","","","","This place covers: Aspects of user-interfaces used for accessing or managing files and folders."
"G06F16/17","Details of further file system functions","","Specific optimisations which apply only to exactly one file system type","G06F16/18","","","","This place covers: General optimisations which apply to more than one file system type, e.g. customisation, caching, prefetching, redundancy elimination, support for shared file access, synchronisation, etc."
"G06F16/172","Caching, prefetching or hoarding of files","","Caching for peripheral storage systems, e.g. disk cache; all aspects of caching, applied to file caching, which are not specific to files or file systems, e.g. details of cache management, caching architecturesCaching used in the WWW for retrieving HTML pagesNetwork-specific arrangements or communication protocols for caching","G06F12/0866|G06F16/9574|H04L67/2842","","","","This place covers: Details of using local or remote file caches, such as file caches in clients, servers or proxies. Details of using methods of prefetching or hoarding of remotely stored files, e.g. for supporting disconnected operations of mobile devices. File caching policies, e.g. selection of files to be cached."
"G06F16/1724","{Details of de-fragmentation performed by the file system  (saving storage space on storage systems G06F3/0608; management of blocks in storage devices G06F3/064)}","G06F3/0608|G06F3/064","","","","","","This place covers: Details of file system defragmentation techniques where file system knowledge is used to reduce the number of file fragments stored on the underlying storage system. These techniques typically are performed by the file system so that the underlying storage system is not aware that a defragmentation operation is executed."
"G06F16/1727","{Details of free space management performed by the file system  (saving storage space on storage systems G06F3/0608; management of blocks in storage devices G06F3/064)}","G06F3/0608|G06F3/064","","","","","","This place covers: Details of file system free space management where file system knowledge is used to manage the free space on the underlying storage system. These techniques typically are performed by the file system so that the underlying storage system is not aware that free space management is performed."
"G06F16/173","{Customisation support for file systems, e.g. localisation, multi-language support, personalisation}","","","","","","","This place covers: Means and methods for the customisation of file systems. Support for localisation (multi-language support). Personalisation of the file system to users of the file system."
"G06F16/1734","{Details of monitoring file system events, e.g. by the use of hooks, filter drivers, logs}","","","","If the techniques of monitoring file system events are used in a specific application domain, e.g. for synchronisation, indexing, backup, etc., classification in the specific application domain must also be considered.","","","This place covers: Monitoring events, such as changes or updates to files or file metadata and file system metadata. Logging changes or updates to files or file metadata and file system metadata."
"G06F16/1737","{for reducing power consumption or coping with limited storage space, e.g. in mobile devices  (saving storage space on storage devices G06F3/0608; power saving in storage systems G06F3/0625)}","G06F3/0608|G06F3/0625","","","","","","This place covers: Specific adaptations of the file system to reduce the power consumption, e.g. in mobile devices. Specific adaptations of the file system for copying with limited storage space, e.g. by deleting (policy-based) selected files."
"G06F16/174","Redundancy elimination performed by the file system  (management of the data involved in backup or backup restore using de-duplication of the data G06F11/14)","G06F11/14","","","","","","This place covers: Techniques for eliminating redundancies in file systems, e.g. by copy on write, sparse files or deduplication."
"G06F16/1744","{using compression, e.g. sparse files}","","Details of compressionProtocols for data compression","H03M7/30|H04L69/04","","","","This place covers: Elimination of redundancies in file systems by using compression methods, e.g. sparse files."
"G06F16/1748","{De-duplication implemented within the file system, e.g. based on file segments  (de-duplication techniques in storage systems for the management of data blocks G06F3/0641)}","G06F3/0641","","","","","","This place covers: Elimination of redundancies in file systems by deduplication based on segments of a file when the structure of the file is known. The individual segments of the file may have different lengths."
"G06F16/1752","{based on file chunks}","","","","","","","This place covers: Redundancies in file systems that are eliminated by deduplication based on typically equally sized chunks of a file when the structure of the file is unknown."
"G06F16/1756","{based on delta files}","","","","","","","This place covers: Redundancies in file systems that are eliminated by using delta-files, e.g. for storing multiple versions of files whereas only the modifications between subsequent versions of a file are stored in the delta-file."
"G06F16/176","Support for shared access to files; File sharing support","","","","","","","This place covers: Techniques for supporting shared access to files, i.e. more than one application is allowed to access the same file."
"G06F16/1767","{Concurrency control, e.g. optimistic or pessimistic approaches}","","","","","","","This place covers: File systems providing support for concurrency control to serialise access to files (pessimistic methods like locking) or provide for conflict resolution methods to resolve file system states where conflicting writes to a file have taken place (optimistic methods)."
"G06F16/1774","{Locking methods, e.g. locking methods for file systems allowing shared and concurrent access to files}","","","","","","","This place covers: Locking methods for file systems allowing shared and concurrent access to files."
"G06F16/178","Techniques for file synchronisation in file systems","","File management policies in generalChange detection in file systemsDistributed file systemsSynchronisation of structured dataProtocols for data synchronisation between network nodes","G06F16/122|G06F16/1734|G06F16/182|G06F16/27|H04L67/1095","","","SynchronisationSynchronisation is a service provided by file systems to synchronise two or more independent file systems or to synchronise replicas in a distributed file system.","This place covers: Details of synchronisation in file systems, e.g. synchronisation architectures, conflict resolution, administration of synchronisation by using synchronisation policies. Techniques for transparent or automatic synchronisation of files in file systems whereas no user interaction is necessary to perform the synchronisation, e.g. transparently keeping replicated file copies consistent with each other, e.g. by propagation of changes to all file replicas."
"G06F16/1787","{Details of non-transparently synchronising file systems}","","","","","","","This place covers: The non-transparent synchronisation of files in file systems whereas user interactions are necessary to perform the synchronisation, e.g. user-based file selection, conflict resolution with user support."
"G06F16/1794","{Details of file format conversion}","","","","","","","This place covers: Details of file format conversion during synchronisation, e.g. synchronisation between heterogeneous file systems."
"G06F16/18","File system types","","Generic aspects of file systems, , , ","G06F16/13|G06F16/14|G06F16/16|G06F16/17","","","","This place covers: Details of specific file system types that are specific to the individual file system types, e.g. details of file systems allowing only read-only access to files."
"G06F16/1805","{Append-only file systems, e.g. using logs or journals to store data}","","","","","","","This place covers: File systems where data is only appended to existing data Append-only file systems using logs to store data"
"G06F16/181","{providing write once read many [WORM] semantics}","","","","","","","This place covers: File system of type WORM (Write Once Read Many), e.g. by using WORM hardware, by using standard hard disk extended by additional functionality implementing the WORM semantic."
"G06F16/1815","{Journaling file systems}","","","","","","","This place covers: File systems using journals to store files and file metadata."
"G06F16/182","Distributed file systems","","","","","","","This place covers: Aspects of distributed file systems, e.g. architectures, specific management aspects."
"G06F16/1824","{implemented using Network-attached Storage [NAS] architecture  (distributed or networked storage systems G06F3/067; protocols for distributed storage of data in a network H04L67/1097)}","G06F3/067|H04L67/1097","","","","","NASnetwork attached storageSANstorage area networks","This place covers: Systems and methods for storing files in a Network-Attached Storage system (NAS) which provides data access on the file level. The roles of the clients and the file server(s) are distributed over the network."
"G06F16/1827","{Management specifically adapted to NAS  (management of storage area networks [SAN] G06F3/067)}","G06F3/067","","","","","","This place covers: Details of management of NAS, e.g. data placement policies of file or file fragments."
"G06F16/183","{Provision of network file services by network file servers, e.g. by using NFS, CIFS  (network file access protocols H04L67/1097)}","H04L67/1097","","","","","","This place covers: Details of providing network file services by Network-Attached Storage (NAS) file servers accessed over a network using file access protocols, e.g. by using Network File System (NFS) or Common Internet File System (CIFS) to access files."
"G06F16/1834","{implemented based on peer-to-peer networks, e.g. gnutella  (p2p communication protocols H04L67/104)}","H04L67/104","","","","","File system peerA file system peer implements both the file server and the client role. Thus, a peer may request in its client role a file from another peer. Additionally, the same peer may provide files in its file server role to other peers. Thus, both the client and the server role are distributed over the network.","This place covers: File systems storing files in peer-to-peer like storage networks."
"G06F16/1837","{Management specially adapted to peer-to-peer storage networks  (topology management mechanisms of peer-to-peer networks H04L67/1042)}","H04L67/1042","","","","","","This place covers: Details of file management specifically adapted to peer-to-peer like storage networks, e.g. data placement of file or file fragments."
"G06F16/184","{implemented as replicated file system}","","Protocols for supporting replication or mirroring of data between network nodes","H04L67/1095","","","Replicated fileA replicated file is a copy of an original file and stored in a different storage place as the original file. The replicated file is kept consistent, i.e. synchronised, with the original file.File replicationFile replication is a service provided by the replicated file system whereas the fact that files are replicated is transparent to the users, such as applications, of the replicated file system.","This place covers: Details of file systems replicating files on more than one storage place, e.g. a single file or even a complete file system is replicated."
"G06F16/1844","{Management specifically adapted to replicated file systems}","","","","","","","This place covers: Details of management of replicated file systems, e.g. data placement policies of file replicas."
"G06F16/1847","{specifically adapted to static storage, e.g. adapted to flash memory or SSD}","","Dedicated interfaces to non-volatile semiconductor memory deviceDedicated interfaces to non-volatile semiconductor memory arrays","G06F3/0679|G06F3/0688","","","","This place covers: File systems specifically adapted to or used in flash memory, SSDs, etc. File system data structures or corresponding methods are adapted by taking constraints of the static storage into account."
"G06F16/185","Hierarchical storage management [HSM] systems, e.g. file migration or policies thereof  (details of archiving G06F16/11)","G06F16/11","Life cycle management in storage devicesHybrid storage combining heterogeneous device typesBackup systems (in backup systems a second, backup copy is created from the original data without deleting the original data in the primary storage)","G06F3/0649|G06F3/0685|G06F11/1446","","","","This place covers: Hierarchical storage management (HSM) used in file systems, e.g. lifecycle management, whereas the fact that files are stored on different levels of the HSM system is generally NOT known to the user in contrast to archive systems in which the actual storage location is known to the user. Further, in contrast to backup system only one copy of data objects exists. Whenever a file has been migrated from one level to another level of the HSM system the file copy stored in the previous level of the HSM will be deleted, normally to free storage space in the HSM system."
"G06F16/1858","{Parallel file systems, i.e. file systems supporting multiple processors}","","","","","","","This place covers: Details of parallel file systems, e.g. General Parallel File Systems (GPFS)."
"G06F16/1865","{Transactional file systems}","","Commit processing in structured data stores","G06F16/2379","","","","This place covers: File systems supporting transactional operations, e.g. commit processing, logging and recovery of file transactions, on file system objects (e.g. files, directories, etc.)."
"G06F16/1873","{Versioning file systems, temporal file systems, e.g. file system supporting different historic versions of files}","","","","","","","This place covers: File system supporting different (historic) versions of e.g. files, directories, etc."
"G06F16/188","Virtual file systems","","","","","","","This place covers: Virtual file systems where at least one file system component is virtualised, e.g. transparent access to compressed archives via a virtual file system e.g. DoubleSpace. Another example are virtual file systems implemented by database systems. Thus, file system requests are transparently translated into database queries."
"G06F16/192","{Implementing virtual folder structures}","","","","","","","This place covers: Virtual file systems with virtual folders or a virtual folder structure."
"G06F16/196","{Specific adaptations of the file system to access devices and non-file objects via standard file system access operations, e.g. pseudo file systems  (dedicated interfaces to storage systems G06F3/0601)}","G06F3/0601","","","","","","This place covers: Details of the file system for accessing devices and non-file objects, e.g. accessing CPU state information, using the standard file system access operations provided by a file system-like interface, e.g. the procfs, sysfs, usbfs, devpts or BSDs kernfs. From an application point of view the devices and non-file objects are accessed as virtual files."
"G06F16/20","of structured data, e.g. relational data","","","","","","","This place covers: Structured data stores comprising all sorts of database management systems based on a particular structured data model such as hierarchical, network (CODASYL), relational, object-relational, object oriented, deductive, and semantic, entity based systems. Structured data, in general, means that the data has a certain predetermined structure which is typically the same for a set of managed / stored objects, for example, a set of data records which conform to a certain schema, i.e. the records have a particular number of fields of a certain data type. A schema need not be described explicitly in a document. A database system can be implemented on top of a file system, i.e. the records might be simply stored in files. Another indication for structured data could be a sophisticated declarative query / data manipulation language. This criterion should be used when no information about the data type or the storage technology used is available. Particular applications of structured data are multidimensional databases that generally are based on specific relational data models."
"G06F16/21","Design, administration or maintenance of databases","","Database storage and indexing detailsData updatingData querying (retrieval)","G06F16/22|G06F16/23|G06F16/24","","","","This place covers: Aspects of defining and managing database models and systems at the logical or external levels, above the physical storage. The group is concerned only with aspects of managing a single database system. Details of tools, functions or services used to support a database administrator including data maintenance activities to support front-end applications."
"G06F16/211","{Schema design and management}","","Uses of mappings between schemas in the relevant application group, e.g. object relational mappers and translation layers in client/server interfacesAbstract models in federated databases systemsReplication and update of data dictionaries in distributed database systems","G06F16/252|G06F16/256|G06F16/27","","","","This place covers: Systems which support the creation and maintenance of data dictionaries in database systems. Details for mappings between schemas, where the mapping solution is independent of the application."
"G06F16/212","{with details for data modelling support}","","","","","","","This place covers: Support for users to interactively model data dictionaries or conversions from other data models into the data model supported by the DBMS."
"G06F16/213","{with details for schema evolution support}","","","","","","","This place covers: Facilities that allow the data dictionary of a database to be changed and support the continued operation of the database applications or of other interfacing systems."
"G06F16/214","{Database migration support}","","","","","","","This place covers: Facilities to allow a database to be migrated between two different DBMS or between different versions of the same DBMS."
"G06F16/215","Improving data quality; Data cleansing, e.g. de-duplication, removing invalid entries or correcting typographical errors","","Support for consistency and integrity of data during update operations","G06F16/2365","","","","This place covers: Facilities that promote improvements to the quality of existing data of a database."
"G06F16/217","{Database tuning  (G06F16/2282 takes precedence; database performance monitoring G06F11/3409)}","G06F16/2282|G06F11/3409","","","","","","This place covers: Facilities to support the administration of the database operation, i.e. database tuning, not covered by specific storage tuning  ."
"G06F16/219","{Managing data history or versioning  (querying versioned data G06F16/2474; querying temporal data G06F16/2477)}","G06F16/2474|G06F16/2477","Multi-version concurrency control","G06F16/2336","","","","This place covers: Support in a database system to keep the history of changes of records."
"G06F16/22","Indexing; Data structures therefor; Storage structures","","","","","","","This place covers: How structured data is stored and maintained at the physical level including indexing in structured data. An index of a structured database is updated periodically."
"G06F16/221","{Column-oriented storage; Management thereof}","","","","","","","This place covers: Details to support databases with storage oriented by columns."
"G06F16/2219","{Large Object storage; Management thereof}","","","","","","","This place covers: Details of storing and interfacing with Large Objects in databases, e.g. Binary Large OBjects (BLOBs)."
"G06F16/2228","{Indexing structures}","","Indexing structures for textual data","G06F16/316","","","","This place covers: Creation and/or assembly of index structures."
"G06F16/2237","{Vectors, bitmaps or matrices}","","","","","","","This place covers: Bitmap indices and other array oriented indexing structures."
"G06F16/2246","{Trees, e.g. B+trees}","","","","","","","This place covers: Hierarchical indexes and functions therefor, e.g. merging of new data entries into the hierarchical index"
"G06F16/2255","{Hash tables}","","","","","","","This place covers: Details of hash table implementations used for indexing in structured databases."
"G06F16/2264","{Multidimensional index structures}","","","","","","","This place covers: Any kind of multidimensional indexes for database systems belong in this group. Double classification with the further groups in   should be done when needed. Dimensionality reduction is used for index generation of a multidimensional database."
"G06F16/2272","{Management thereof}","","","","","","","This place covers: Automatic or manual management of an already existing index comprising only the organisation but not the modification or updating of index entries. This means that normal adjustments of the index as a consequence of an update operation in a database (insert, delete, update) are not classified here, but reorganisations of the index (e.g. as consequence of degradation due to many updates in the database) are classified here. Facets: The amount of clustering of an index in a relational database is analysed in order to optimise the index."
"G06F16/2282","{Tablespace storage structures; Management thereof}","","","","","","","This place covers: Aspects of storing and managing tablespace structures in secondary memory, including partitioning of tables over multiple storage areas, e.g., disks, and reorganisation of databases."
"G06F16/2291","{User-Defined Types; Storage management thereof}","","","","","","","This place covers: Support for user defined types or abstract data types."
"G06F16/23","Updating","","","","","","","This place covers: Updating a database based on update requests to modify database records; the update requests are made by users or front-end applications."
"G06F16/2308","{Concurrency control  (transaction processing G06F9/466)}","G06F9/466","Concurrency control in file systems","G06F16/1767","","","",""
"G06F16/2315","{Optimistic concurrency control}","","","","","","","This place covers: Optimistic approaches for concurrency control, i.e. conflicting accesses are not prevented but resolved later."
"G06F16/2322","{using timestamps}","","","","","","","This place covers: Timestamp based concurrency schemes."
"G06F16/2329","{using versioning}","","","","","","","This place covers: Version based concurrency schemes."
"G06F16/2336","{Pessimistic concurrency control approaches, e.g. locking or multiple versions without time stamps}","","","","","","","This place covers: Pessimistic approaches (avoiding conflicts) for concurrency control, e.g. locking, multiple versions without time stamps, others."
"G06F16/2343","{Locking methods, e.g. distributed locking or locking implementation details}","","","","","","","This place covers: Locking methods for concurrency control, e.g. multi-granularity/hierarchical/range locking, lock escalation, pre-claiming of locks/consistency levels/predicate locks, distributed locking, locking implementation details, e.g. locking table."
"G06F16/235","{Update request formulation}","","","","","","","This place covers: Facilitating the definition of requests for updating data."
"G06F16/2358","{Change logging, detection, and notification  (replication G06F16/27)}","G06F16/27","","","","","","This place covers: Details of implementing logging of database update operations; detecting changes for the purpose of notifying users or other systems."
"G06F16/2365","{Ensuring data consistency and integrity}","","","","","","","This place covers: Ensuring database consistency and other ACID (Atomicity, Consistency, Isolation, Durability) properties. Use of triggers and stored procedures to support update operations and related impact in the database."
"G06F16/2372","{Updates performed during offline database operations}","","Online updates","G06F16/2379","","","",""
"G06F16/2379","{Updates performed during online database operations; commit processing}","","Aspects of transaction processing regarding CPU programming","G06F9/466","","","","This place covers: Handling record operations for inserts, edit, deletion, and undo. The operations occur on an individual basis, on batches or in the context of transaction processing."
"G06F16/2386","{Bulk updating operations  (data conversion details G06F16/258)}","G06F16/258","","","","","","This place covers: Handling bulk updates during operation of the database, e.g. to minimise impact on the performance for users."
"G06F16/2393","{Updating materialised views}","","Query processingUse of materialised views for optimisation","G06F16/245|G06F16/24539","","","","This place covers: Aspects of ensuring that materialised views, or persistent queries, are kept up to date during update operations."
"G06F16/24","Querying","","Using cached query resultsCaching (including caching in Client/Server database systems): for database cache managementPlan operators for distributed queries such as join-algorithms adapted to distributed query processingProcessing of distributed queries","G06F16/24539|G06F16/24552|G06F16/24553|G06F16/2471","","","","This place covers: Processing retrieval requests, i.e. finding records matching a query."
"G06F16/242","Query formulation","","Interaction techniques for graphical user interfacesConversion of a query to an internal format","G06F3/048|G06F16/2452","","","","This place covers: All aspects of query formulation; textual, graphical, explicit or implicit formulation of database queries. User interfaces therefor (including help systems therefor)."
"G06F16/2423","{Interactive query statement specification based on a database schema}","","Interfaces for the formulation of natural language queries","G06F16/243","","","","This place covers: Query wizards such as in MS access for constructing queries. Query construction based on database schema or entity relationship diagram of database. Note: Often the user can see the query statement, which allows the user to learn the syntax of the query language. ntelligent help systems for the formulation of queries. Further examples: A query assistant that permits the user to enter valid SQL queries; use of dialog boxes. Context sensitive help system for formulation of SQL queries; e.g. lists table names."
"G06F16/2425","{Iterative querying; Query formulation based on the results of a preceding query}","","","","","","","This place covers: All iterative approaches to querying; typically the user interacts with a display of the results of a preceding query in order to (re)formulate a new query; for example more restrictive query predicates might be formulated to narrow the focus of the query. Feedback on cardinality of qualifying result set."
"G06F16/2428","{Query predicate definition using graphical user interfaces, including menus and forms  (G06F16/2423 takes precedence)}","G06F16/2423","Iterative querying","G06F16/2425","","","","This place covers: Graphical user interfaces (typically displaying charts, plots, images, maps, multi-media documents, or cubes etc.) for specifying query predicates for attribute values. (Hierarchical) menus and forms used for specifying query predicates for attributes. Menu entries that typically are generated by querying database catalog or tables; also use of menus to select predefined queries. Query-by-example languages where the user fills example values into a tabular scheme."
"G06F16/243","{Natural language query formulation}","","Natural language analysis, translation, semantics, ","G06F40/20|G06F40/40","","","","This place covers: Queries formulated in natural language for querying structured data."
"G06F16/2433","{Query languages}","","Optimisation aspectsImplementation aspects concerning the execution of the queries","G06F16/2453|G06F16/2455","","","","This place covers: Details of query languages, e.g. SQL features."
"G06F16/2435","{Active constructs}","","Implementation aspects","G06F16/24565","","","","This place covers: Active constructs, e.g. constraints; triggers; Event-condition-action rules."
"G06F16/2438","{Embedded query languages}","","","","","","","This place covers: Embedded query languages, e.g. embedded SQL; data communication structures for cursors, etc."
"G06F16/244","{Grouping and aggregation}","","Implementation aspects","G06F16/24556","","","","This place covers: Grouping and aggregation, e.g. GROUP-BY (and Having), SUM, MIN, STDDEV, Percentiles etc. Examples: Data Cube: A Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub Totals."
"G06F16/2443","{Stored procedures}","","","","","","","This place covers: Definition, processing and use of stored procedures."
"G06F16/2445","{Data retrieval commands; View definitions}","","","","","","","This place covers: Data retrieval commands and view definitions, e.g. in SQL, the command SELECT (including all features of select statements, unless there are particular classes for them) and VIEWs including view definitions."
"G06F16/2448","{for particular applications; for extensibility, e.g. user defined types}","","","","","","","This place covers: Query languages designed to support particular applications; commands for extensible query languages for adding user-defined/foreign functions etc."
"G06F16/245","Query processing","","","","","","","This place covers: Query processing comprises all processing steps that need to be done in order to process a received formulated query: parsing, translation, execution and delivery of the results (or an execution error)."
"G06F16/2452","Query translation","","","","","","",""
"G06F16/24522","{Translation of natural language queries to structured queries}","","Natural language analysis, translation, and semantics, ","G06F40/20|G06F40/40","","","","This place covers: Translation of the expression in user natural language, e.g. spoken language, of the information to be retrieved, into database queries, e.g. the mapping from natural language (e.g. English) to SQL; Question/answering systems;"
"G06F16/24524","{Access plan code generation and invalidation; Reuse of access plans}","","","","","","","This place covers: Generation of code for given access plan; Invalidation of access plans when database objects / indexes etc. are dropped."
"G06F16/24526","{Internal representations for queries}","","","","","","","This place covers: Translations into an internal format such as query graph models, algebra, parse trees."
"G06F16/24528","{Standardisation; Simplification}","","","","","","","This place covers: Standardisation (conjunctive/disjunctive normal form) and Simplification (general logical transformations like De Morgan etc.). Note: The standardisation and simplification steps also could be viewed first as simple query optimisation steps, but they have been put under query translation because these steps are often independent of the actual optimiser used; the technical aim is to provide a standardised input format for the query optimiser."
"G06F16/2453","Query optimisation","","","","","","","This place covers: Rewriting and plan optimisation Optimization of application programs by modifying code etc."
"G06F16/24532","{of parallel queries}","","","","Double classification could be necessary; for example, when the join order is optimised to enable bushy trees for parallel join processing and additional classification in  is needed.","G06F16/24544","","This place covers: Optimisation of queries for parallel database systems with respect to best use of parallel execution possibilities;"
"G06F16/24534","{Query rewriting; Transformation}","","","","","","","This place covers: Transformations of the internal representation of the query: transformations (by means of rewriting rules) between different internal representations on a logical level (e.g. query graph model) and transformations from a logical representation to a physical representation having physical plan operators (i.e. hash join or index-nested-loops-join). Transforming a (rewritten) logical internal representation into a physical execution plan with concrete plan operators; typically involves selection of plan operators and their execution order based on estimated execution costs. Manual rewriting of query statement; includes also logical tests such as for deciding query containment (for query folding etc.); rewriting one query into several queries."
"G06F16/24535","{of sub-queries or views}","","","","","","","This place covers: View integration and subquery decorrelation."
"G06F16/24537","{of operators}","","","","","","","This place covers: Rules for restrictions, joins, group-bys, aggregations, sorting, etc."
"G06F16/24539","{using cached or materialised query results}","","Maintenance of materialised views (updating, replication)Database cache management in general","G06F16/2393|G06F16/24552","","","","This place covers: Query folding where a query is mapped to existing results including partial mapping; special case: reuse of cached results of a particular query."
"G06F16/2454","{Optimisation of common expressions}","","Query folding (mapping a query to cached results or materialised views)","G06F16/24539","","","","This place covers: Common subtree recognition and optimisation, also for multi-query optimisation."
"G06F16/24542","{Plan optimisation}","","Selectivity estimation or determination for joinsSampling/generation of statistics","G06F16/24545|G06F16/2462","","","","This place covers: Enumeration algorithms for plan generation and search strategy; Selectivity and cost estimation including learning based techniques for these estimations."
"G06F16/24544","{Join order optimisation}","","","","","","","This place covers: Join enumeration algorithms for determining the join order, e.g. left deep plans vs. bushy plans etc."
"G06F16/24545","{Selectivity estimation or determination}","","","","","","","This place covers: Estimation of the selectivity of query predicates: e.g. estimating the selectivity of the predicate ''AGE=40'' on a table means estimating which percentage of the records in this table has the value 40 in attribute AGE. Other aspects of query cost estimation."
"G06F16/24547","{Optimisations to support specific applications; Extensibility of optimisers}","","Security, Access control","G06F21/00","","","","This place covers: Extensibility; Particular query types, etc. optimiser hints; Query modifications to implement security control (e.g. by adding predicates to a query according to a security policy in order to mask data)."
"G06F16/24549","{Run-time optimisation}","","","","","","","This place covers: Query optimisation at run time of the query. Using execution time statistics for re-optimisation. Progress estimation during query execution."
"G06F16/2455","Query execution","","","","","","","This place covers: Actual execution of a single query with a given query execution plan; Execution of multiple queries; Database hardware, e.g. parallel database machines."
"G06F16/24552","{Database cache management}","","Query optimisation exploiting the cache","G06F16/24539","","","","This place covers: Cache management at the database server itself, at the client/workstation or at the application server. Cache management strategies such as cache granularity management. Semantic cache management. Determining what data to cache."
"G06F16/24553","{of query operations}","","","","","","","This place covers: Physical operators used to execute operators in a query execution plan; includes particular execution strategies such as returning only the top N rows or delayed delivery of full query results. Non-standard query processing operations."
"G06F16/24554","{Unary operations; Data partitioning operations}","","","","","","","This place covers: Algorithms for unary operations (which have only one table/data stream as input), such as aggregations/groupings, sorts or scans. Data partitioning operators. Hash, random, range, window partitioning, etc. Can also include (partial) replication."
"G06F16/24556","{Aggregation; Duplicate elimination}","","Corresponding query language aspects","G06F16/244","","","","This place covers: For example, including algorithms implementing SQL clauses such as having, groupby, cube, rollup, etc."
"G06F16/24557","{Efficient disk access during query execution}","","","","","","","This place covers: Scan operators, index access."
"G06F16/24558","{Binary matching operations}","","Joins","G06F16/2456","","","","This place covers: All operators except joins which have two tables (data streams) as input, such as: universal quantification, division, intersection, union, etc."
"G06F16/2456","{Join operations}","","","","","","","This place covers: Algorithms for joins such as index nested loops join, sort merge join, hash join, etc."
"G06F16/24561","{Intermediate data storage techniques for performance improvement}","","","","","","","This place covers: Compression, bit vectors, surrogate processing, main memory algorithms, etc."
"G06F16/24562","{Pointer or reference processing operations}","","","","Double classification under  (OODBMS) should be considered.","G06F16/289","","This place covers: Pointer-based join operations. Fast pointer dereferencing. Pointer swizzling."
"G06F16/24564","{Applying rules; Deductive queries}","","Inference methods or devices","G06N5/04","","","","This place covers: Rules including rule constructs in SQL and active databases; Deductive databases in general e.g. datalog; fixpoint semantics; deductive database techniques, in general."
"G06F16/24565","{Triggers; Constraints}","","Query language aspects","G06F16/2435","","","","This place covers: Trigger and integrity constraints as commonly used in the context of relational or similar database systems; see example in the third version of the Structured Query Language, SQL3. Execution models for determining the correct execution order for multiple constraints/triggers that need to be executed. Semantical aspects such as relation to statement/transaction atomicity."
"G06F16/24566","{Recursive queries}","","","","","","","This place covers: Operators for computing recursive queries, e.g. in the version of the Structured Query Language adhering to the 1999 standard, SQL1999."
"G06F16/24568","{Data stream processing; Continuous queries}","","","","","","","This place covers: Query processing for data streams: continuous queries over a data set; the queries are executed continuously over a database, which means that the query must be executed against newly inserted and updated data. Event subscription processing where the event filters (= subscription requests or profiles) are seen as continuous queries."
"G06F16/24569","{Query processing with adaptation to specific hardware, e.g. adapted for using GPUs or SSDs}","","","","","","","This place covers: Specific properties of the hardware environment, e.g. GPU, SSDs, on which the query is executed being taken into account."
"G06F16/2457","with adaptation to user needs","","","","","","","This place covers: Query processing based on: User profiles. Weighting of query attributes specifying preferences of users, e.g. for ranking/relevance. User context such as location or user's information needs. Learning aspects for adapting to user needs, e.g. learning user preferences."
"G06F16/24573","{using data annotations, e.g. user-defined metadata}","","","","","","","This place covers: Query processing using user-defined meta-data / annotations to the data, whereas the user-provided metadata is added to the database. Manual classification of data contents for query processing."
"G06F16/24575","{using context}","","","","","","","This place covers: Using the context of a user or client application as query criteria; context can be diverse, e.g. user's mood or location."
"G06F16/24578","{using ranking}","","","","","","","This place covers: Sorted output of query results in order of relevance; can use weights, etc., to specify relevance. Using this relevance for ranking and cut-off of results after returning the top-N hits."
"G06F16/2458","Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries","","","","Similarity queries for structured data could be classified in this group or for example in  (binary matching operations, if the document concerns the implementation of the similarity matching); for sorted result output by relevance, see .","G06F16/24558|G06F16/24578","",""
"G06F16/2462","{Approximate or statistical queries}","","","","","","","This place covers: Approximate query processing which is based on sampling, models or statistical techniques and creates fast, but imprecise answers to queries such as: Queries for the generation of statistics about the database, e.g. attribute value distributions. Database sampling."
"G06F16/2465","{Query processing support for facilitating data mining operations in structured databases}","","Clustering and classification in relational databases","G06F16/285","","","","This place covers: Specific support for data mining such as database operators for that purpose or optimisations."
"G06F16/2468","{Fuzzy queries}","","","","","","","This place covers: Query processing based on fuzzy functions or imprecise query predicates. Text related search predicates (using phonetic searches, etc.) should be further classified in the specific text class for this aspect."
"G06F16/2471","{Distributed queries}","","","","","","","This place covers: Mapping of queries for distribution transparency. Optimizing the execution order of the plan fragments (subqueries) which need to be executed at the various sites."
"G06F16/2474","{Sequence data queries, e.g. querying versioned data}","","Processing data streams","G06F16/24568","","","","This place covers: Querying sequence data, such as time sequences like, for example, stock price sequences, which typically supports operations such as aggregations or window queries on the sequence data. Implementation techniques such as indexing and optimisation therefor. Querying versioned data."
"G06F16/2477","{Temporal data queries}","","Use of timestamps for internal purposes such as concurrency controlDocuments where time or date attributes are treated as ordinary attributes without specific supportTime sequences which refer to a relative sequence of points in time","G06F16/2322|G06F16/24|G06F16/2474","","","","This place covers: Querying Specifically adapted to deal with temporal data such as T-SQL or bitemporal models; Referring to points in absolute time such as timestamps."
"G06F16/248","Presentation of query results","","Browsing techniques (e.g. navigating in database)","G06F16/26","Generating/modifying the layout of business reports etc. is not classified in .","G06F16/00","","This place covers: Display of the results of a query, e.g. in tabular form, with interface to modify display formats. Complex visualisations such as displaying results on a geographical map."
"G06F16/25","Integrating or interfacing systems involving database management systems","","Organised distribution or systematic replication of data between databases or database systems","G06F16/27","","","","This place covers: Interfaces between systems involving at least a database supporting ad-hoc interaction, systematic integration or some type of co-operation."
"G06F16/252","{between a Database Management System and a front-end application}","","","","","","","This place covers: Solutions specific for the interfaces between clients and a database system."
"G06F16/254","{Extract, transform and load [ETL] procedures, e.g. ETL data flows in data warehouses}","","","","","","","This place covers: Details for implementation of data workflows transferring data from a plurality of databases into a common data store, in particular, the Extract, Transform, Load (ETL) operations to create and maintain data warehouses."
"G06F16/256","{in federated or virtual databases}","","Distributed queries","G06F16/2471","","","","This place covers: Systems providing a data abstraction layer on top of a set of heterogeneous database systems to convey the concept of a single virtual database to the end users or client systems."
"G06F16/258","{Data format conversion from or to a database}","","","","","","","This place covers: Specific details of exchanging data between database systems involving a conversion of the data. Export and import operations involving some conversion."
"G06F16/26","Visual data mining; Browsing structured data","","Query formulation aspectsQuery result display","G06F16/242|G06F16/248","","","","This place covers: Visualisation of data sets from a database in order to allow a user to discover interesting data properties without formulating an explicit query. Using the meta data (schema information) for visualisation of attribute values. Browsing a database including navigating between data items. Adaptation of the browsing process to the specifics of a database, e.g. displaying database schema information for browsing. Examples: Organising large (structured) data sets by grouping to make them conveniently accessible on a small display device. Visualising structured data such as: interactions between customers and merchants and interactions associated with a time value, e.g. hits per hour on a web server."
"G06F16/27","Replication, distribution or synchronisation of data between databases or within a distributed database system; Distributed database system architectures therefor","","","","","","","This place covers: Systems that distribute or replicate data between themselves; descriptions of architectures thereof; details in relevant subgroups."
"G06F16/273","{Asynchronous replication or reconciliation}","","","","","","","This place covers: Implementation details of asynchronous replication and in particular for reconciliation procedures."
"G06F16/275","{Synchronous replication}","","Concurrency control for distributed databases","G06F16/2308","","","",""
"G06F16/278","{Data partitioning, e.g. horizontal or vertical partitioning}","","","","","","","This place covers: Implementation details for data partitioning between databases that fully or partially distributed the data between themselves."
"G06F16/28","Databases characterised by their database models, e.g. relational or object models","","","","In general, double classification in at least one of the functional subgroups  -  and one of the subgroups of  should be considered.","G06F16/21|G06F16/27|G06F16/28","","This place covers: Implementation details of specialised database models which are not already covered by subgroups   -  ."
"G06F16/282","{Hierarchical databases, e.g. IMS, LDAP data stores or Lotus Notes}","","","","","","","This place covers: Implementation details of supporting the storage and management of hierarchical data."
"G06F16/283","{Multi-dimensional databases or data warehouses, e.g. MOLAP or ROLAP}","","","","Double classification with regard to subgroups , , and  should be considered.","G06F16/22|G06F16/24|G06F16/26","","This place covers: Assembly or functionality of multi-dimensional databases or data warehouses [MDDB]."
"G06F16/284","{Relational databases}","","","","","","","This place covers: Implementation details specific to relational databases not - covered by any of the subgroups   -  ."
"G06F16/285","{Clustering or classification}","","Clustering or classifying textual data","G06F16/35","","","","This place covers: Clustering or classification of structured data. Classes / clusters may already exist or can be created during the classification / clustering process. Documents disclosing class / cluster management of classification or clustering systems also can be found in this group."
"G06F16/287","{Visualization; Browsing}","","Visualisation or browsing of textual data","G06F16/358","","","","This place covers: Cluster or class visualization or browsing. Graphical presentation of clusters or classes as result of a clustering or classification process. Additional data can be displayed with the clusters or classes. Typically, when a mouse pointer is brought over them, additional data about the clusters is displayed (interactive cluster display device)."
"G06F16/288","{Entity relationship models}","","","","In general, double classification in at least one of the functional subgroups -  and subgroup  should be considered.","G06F16/21|G06F16/27|G06F16/288","","This place covers: Implementation details specific to entity-relationship models not covered by any of the subgroups  -  ."
"G06F16/289","{Object oriented databases}","","","","In general, double classification in at least one of the functional subgroups  -  and subgroup  should be considered.","G06F16/21|G06F16/27|G06F16/289","","This place covers: Implementation details specific to object-oriented databases not covered by any of the subgroups  -  . Hybrid Object-Relational database models."
"G06F16/29","Geographical information databases","","Location-dependent Web search servicesInstruments for geographical navigationGeographical navigation systems, route searchingRetrieval, searching and output of Points of Interest (POI) informationThree dimensional geographic models","G06F16/9537|G01C21/00|G01C21/20|G01C21/3679|G06T17/05","","","","This place covers: Data structures and retrieval of geographical or spatial information, e.g. digital maps."
"G06F16/30","of unstructured textual data  (document management systems G06F16/93)","G06F16/93","Image retrieval using shape and object relationship, including layout-based retrieval of text documentsRetrieval from the World Wide Web, e.g. using search enginesText processing, parsing and translation of natural language - ","G06F16/5854|G06F16/95|G06F40/40|G06F40/58","","","","This place covers: Retrieval of unstructured or raw text data in databases and/or employing metadata of the text type for retrieving other information, possibly of a different type."
"G06F16/31","Indexing; Data structures therefor; Storage structures","","","","","","","This place covers: Details about the creation or structure of an index. Updating or maintenance of indexes."
"G06F16/313","{Selection or weighting of terms for indexing}","","Extraction or weighting of terms for query translationExtraction or weighting of terms for text summarization","G06F16/3334|G06F16/345","","","","This place covers: Extraction of strings from a text for indexing purposes. Identification or extraction of important information (special words, regions, relations between words in the text, etc.) from text content using mathematical calculations or dictionaries. The weight value indicating the importance of the information may be attached to it. Facets: Automatically extracting information for annotating a document; A text is stemmed, stop words are removed and the remaining words are weighted according to their frequency of occurrence; Segmentation and topic identification of texts. Weight values may be used to express semantics; Extracting relevant information for indexing from natural language texts by parsing the text into components and extracting elements of information from the respective components; Transforming unstructured text into structured data (using criterion-value pairs, e.g. model, year, colour as criterions for text relating to automobiles); expansion of indexing terms, e.g. with synonyms or spelling variants."
"G06F16/316","{Indexing structures}","","Indexing structures for structured data","G06F16/2228","","","","This place covers: Creation or structuring of a physical index storing the information to be indexed together with a physical location."
"G06F16/319","{Inverted lists}","","","","Inverted lists often are used to index terms in a database. When these terms consist of text, these documents should be classified here and not in the  (Database / building index) groups.","G06F16/22","",""
"G06F16/322","{Trees}","","","","","","","This place covers: Documents disclosing hierarchical indexes. Facets: Character strings in a text are stored hierarchically as keywords in an index file."
"G06F16/325","{Hash tables}","","","","","","","This place covers: Implementation details of hash tables used for indexing textual documents."
"G06F16/328","{Management therefor}","","","","","","","This place covers: Documents focussing on the automatic or manual management of an already existing index. This only comprises the organisation and not the modification or updating of index entries. Facets: Compression of a text index Using a GUI to manage an index"
"G06F16/3322","{using system suggestions  (G06F16/3325 takes precedence)}","G06F16/3325","Dialogues to establish an executable queryAutomatic query expansion with no user interactionReuse of stored results of previous queries","G06F16/3329|G06F16/3338|G06F16/3349","","","","This place covers: Query formulation based on system suggestions, e.g. by using keywords, categories, etc. The user can decide whether to make use of these suggestions or not. Using (parts of) previous queries as suggestions for new queries. Using pre-stored categories for making system suggestions."
"G06F16/3323","{using document space presentation or visualization, e.g. category, hierarchy or range presentation and selection}","","(Categorized) browsing without generating a query","G06F16/34","","","","This place covers: Interactive interfaces for formulating queries using a category hierarchy."
"G06F16/3326","{using relevance feedback from the user, e.g. relevance feedback on documents, documents sets, document terms or passages}","","","","","","","This place covers: The user informing the system about the relevance (or non-relevance) of (some of) the results. This relevance information is used in reformulating the query. Facets: Explicit feedback by the user. Evaluating implicit feedback, e.g. click through data. Pseudo-feedback (where no real relevance feedback from the user is received but the top-ranking documents are considered as being highly relevant)."
"G06F16/3328","{using graphical result space presentation or visualisation}","","","","","","","This place covers: Iterative refinement or modification of the query formulation based on a graphical display of the results. Facets: Limiting the next query to certain documents by graphically selecting these documents in the result set (e.g. using a rectangle or lasso tool). Example: Text content: Making a standard keyword query and presenting the results in a 2D map by building feature vectors, mapping each information item to a point in the 2D map based on similarity. Choosing a query area in the 2D map, displaying the items belonging to the query area"
"G06F16/3329","{Natural language query formulation or dialogue systems}","","Character input using prediction techniquesSuggesting modifications to executable queries","G06F3/0237|G06F16/3325","","","","This place covers: A dialogue between the system and the user to establish an executable query. Also natural language question-answering systems wherein prefabricated answers are retrieved."
"G06F16/3331","{Query processing}","","","","","","","This place covers: General aspects of processing queries."
"G06F16/3332","{Query translation}","","Modification of queries with user interaction","G06F16/332","","","","This place covers: Pre-processing the query to make it (more) suitable for query execution; it is typically done internally with no user interaction."
"G06F16/3334","{Selection or weighting of terms from queries, including natural language queries}","","Feature extraction for indexing purposes","G06F16/313","","","","This place covers: Identifying or extracting important information (for the purpose of querying) from an input (query) text or a query. Facets: Identifying keywords in a text (e.g. an SMS), a query is generated therefrom for retrieving a set of images illustrating the text. Identifying (spoken) keywords in a phone conversation used for querying a knowledge base. A user inputs a plurality of search terms, e.g. by copy and paste from a text. The system extracts the search terms that occur infrequently in the set of documents."
"G06F16/3335","{Syntactic pre-processing, e.g. stopword elimination, stemming}","","Lexical analysis","G06F8/425","","","","This place covers: Basic pre-processing steps like eliminating words useless for purposes of retrieval (stop word elimination) and reducing variants of the same root word to a common stem (stemming)."
"G06F16/3337","{Translation of the query language, e.g. Chinese to English}","","Language translation","G06F40/40","","","","This place covers: Translating queries in the native language of the user (e.g. Chinese) to the query language of the respective search engine (e.g. English). Translating English queries into Spanish equivalent for querying a Spanish index."
"G06F16/3338","{Query expansion}","","Query expansion by the user based on system suggestions","G06F16/3322","","","","This place covers: Automatically adding query terms to a given query/automatically reformulating the query. Facets: Query expansion/reformulation based on semantic information stored in thesauri and/or ontologies; use of synonyms/hypernyms/hyponyms for query expansion/reformulation. Concept-based querying of a document database. Expanding a query using different spelling variants of query terms. A set of text documents is queried not only using the most recent user query but also using keywords extracted from the queries received since the last switch of query topic was detected."
"G06F16/334","{Query execution  (G06F16/335 takes precedence)}","G06F16/335","","","","","","This place covers: Methods used to calculate the degree of similarity between two entities (typically documents) or an entity and a query. These methods normally are used to rank query results. In the parent group, documents are kept which do not focus on how the calculation is done. Facets: Degree-of-similarity score is somehow calculated and reorganized into heap form to select highest score."
"G06F16/3341","{using boolean model}","","","","","","","This place covers: Similarity calculated or estimated with boolean or extended boolean models."
"G06F16/3343","{using phonetics}","","","","","","","This place covers: Matching phoneme lattices of a query with phonemes of information annotated to the information to be retrieved."
"G06F16/3344","{using natural language analysis}","","Q&A systems matching natural language queries to prefabricated answers","G06F16/3329","","","","This place covers: Similarity that is estimated based on the semantic meaning of the query and the semantic meaning of every sentence in a document collection. For this purpose, the relation and associated sense of different parts of sentences (sub sentences, words or suffixes) to each other are analyzed. In some documents, the term ''natural language query'' that is often used for queries which are not really natural language based but a simple enumeration of query words connected by a logical AND (e.g. Google queries). Facets: Similarity that is calculated by creating and using a graph for every sentence where words are nodes and the relationship of the words is represented as links between the nodes."
"G06F16/3346","{using probabilistic model}","","","","","","","This place covers: Ranking that is done on the probability that a retrieved document really comprises what the user is looking for. The sum of the probability that the document is important and the probability that the document is not important has to be one. Facets: Two content vectors are given; the probability that the first content vector is relevant to the second content vector is estimated using distributions of words."
"G06F16/3347","{using vector based model}","","","","","","","This place covers: Documents that are represented as content vectors in a vector space. Relevance of a query result is calculated by operations done in vector space. Facets: Feature vector of a document is created comprising content vector, size of the font, date of publication and name of author. Document vectors that are formed from word vectors and compared to a query vector."
"G06F16/3349","{Reuse of stored results of previous queries}","","Use of previous queries for suggesting formulations of new queriesReformulation of queries based on results of previous queries","G06F16/3322|G06F16/3325","","","",""
"G06F16/335","Filtering based on additional data, e.g. user or group profiles  (filtering in web context G06F16/9535, G06F16/9536)","G06F16/9535|G06F16/9536","","","","","","This place covers: Filtering or routing of textual data based on additional information (user profiles, preferences, etc.). The ''user profile'' could just as well be a learned set of abstract rules or an explicit query provided by the user. Facets: Composing personalized online newspapers based on user interests."
"G06F16/337","{Profile generation, learning or modification}","","","","","","","This place covers: Generation of the user profiles, either automatically or manually, and/or learning of the user preferences. Facets: Different user profiles are analysed and compared to expand the profile of an individual user."
"G06F16/338","Presentation of query results","","Presentation or visualization of query results integrated with query re-formulationBrowsing or Visualization without relation to a query, e.g. simply visualizing a document or document spaceClustered display of query results","G06F16/3328|G06F16/34|G06F16/358","","","","This place covers: Highlighting of search terms in the result set of a query. Visualizing the relevance of the query results showing the respective contribution of the individual query terms."
"G06F16/34","Browsing; Visualisation therefor","","Document space visualization for the purpose of query formulationVisualization of query resultsVisualization of clustersDocument space presentation for browsing in web context","G06F16/3323|G06F16/338|G06F16/358|G06F16/954","","","","This place covers: Mechanisms using non-textual data (e.g. graphical data) for the visualization of collections of text documents, single text documents and concepts of text documents. These mechanisms can be used for document browsing. Facets: Highlighting important sentences in a text document. Creating a table of contents of a text document that can be used for browsing (eBook). A calendar-based user interface for date-based browsing of electronically stored documents."
"G06F16/345","{Summarisation for human users}","","Extracting text features for indexing purposes","G06F16/313","","","","This place covers: Summarization of text content for presenting to a human user. Normally, important text fragments are extracted and presented to the user. Facets: Summarization of text based on users focus. Summarization of a collection of related documents."
"G06F16/35","Clustering; Classification","","Manual classification of textual data","G06F16/38","","","","This place covers: Automatic content-based text classification and clustering. Management of classes or clusters (GUI or machine based) overviews of different content based clustering or classification methodologies. Facets: A GUI based system to create / modify the names of classes in an existing classification tree."
"G06F16/353","{into predefined classes}","","","","","","","This place covers: Classification or clustering into predefined classes or clusters. The existing classes or clusters may not be changed. Documents that also should be classified in this group if they do not tell whether classes are created, modified or predefined. Facets: Books are classified by their genre. Patent documents are classified into a patent classification scheme. A system that reclassifies all documents in a classification tree because the class definitions were changed."
"G06F16/355","{Class or cluster creation or modification}","","","","","","","This place covers: Creation or modification of classes or clusters during the clustering or classification process. Facets: Groups which become to big are divided by the system. If a document does not fit in any existing group and a new group is created for it. Clusters of words of a text are allocated."
"G06F16/358","{Browsing; Visualisation therefor}","","Visualization of query results, including e.g. in ranked clustersVisualization of documents or document spaces without clustering","G06F16/338|G06F16/34","","","",""
"G06F16/36","Creation of semantic tools, e.g. ontology or thesauri","","","","","","","This place covers: Creation (NOT THE USE) of structures that help in understanding the semantics of words."
"G06F16/367","{Ontology}","","","","","","","This place covers: Creation of Ontologies (concept/term networks, graphs, trees, etc.)."
"G06F16/374","{Thesaurus}","","","","","","","This place covers: Creation of thesauri (dictionaries, synonym lists)."
"G06F16/38","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","Extraction of Metadata for indexing purposesLayout-based retrieval of text documents","G06F16/313|G06F16/5854","","","","This place covers: Techniques for usage of metadata for text retrieval. The metadata can be human generated or machine made and may be extracted out of text content. Facets: Manual classification systems (such as patent classification schemes) should be classified in this group. All kinds of metadata, e.g. citations, barcodes, keywords, etc. Also generation of metadata. Keywords extracted and stored as additional data. Searching a document in a library using descriptive information, e.g. author, document state, archiving status, etc."
"G06F16/381","{using identifiers, e.g. barcodes, RFIDs  (for URLs G06F16/9554)}","G06F16/9554","Document management","G06F16/93","","","",""
"G06F16/382","{using citations  (hypermedia G06F16/94)}","G06F16/94","Details of hyperlinks in HTML documents","G06F16/9558","","","","This place covers: Retrieval of documents where the bibliographic data (metadata) is a citation to other document or documents. Facets: CiteSeer, where documents cited/citing can be retrieved following the citation chain."
"G06F16/40","of multimedia data, e.g. slideshows comprising image and additional audio data  (retrieval of still image data G06F16/50; retrieval of audio data G06F16/60; retrieval of video data G06F16/70)","G06F16/50|G06F16/60|G06F16/70","Editing or indexing of data stored based on relative movement between record carrier and transducer","G11B27/00","","","Media typeThe expression media type encompasses image data, audio data, video data and text data","This place covers: Retrieval of media data incorporating multiple media types, e.g. slideshows comprising image and additional audio data. Retrieval of media data where the retrieval algorithm is suitable for various media types. Automatic creation of multi-media presentations or documents as a result of a query, e.g. slide-shows, multimedia playlists, multimedia albums comprising various media types such as images, text, audio clips, video clips, etc. Adaptation of multimedia formats, e.g. selection of multimedia formats based on the capabilities of a client. Generation of multimedia documents. Multimedia databases index structures and management thereof."
"G06F16/41","Indexing; Data structures therefor; Storage structures","","Indexing specially adapted for contents retrieved by relative movement between record carrier and transducerIndexing by using information signals detectable on the record carrier and recorded by the same method as the main recording","G11B27/10|G11B27/28","","","","This place covers: Specific indexing aspects, data structures or storage structures for multimedia data."
"G06F16/43","Querying","","Programed access in sequence to addressed parts of tracks of operating discs","G11B27/105","","","","This place covers: Processing details of multimedia retrieval requests."
"G06F16/432","Query formulation","","Interaction techniques for graphical user interfaces","G06F3/048","","","",""
"G06F16/433","{using audio data}","","Details of audio retrievalElectrophonic musical instrumentsSpeech recognitionSpeaker recognitionGeneral determination or detection of speech characteristics","G06F16/60|G10H|G10L15/00|G10L17/00|G10L25/00","","","","This place covers: Query formulation using a piece of audio data as retrieval argument, such as a selected audio file, music, which is currently playing, speech input, or environmental noises."
"G06F16/434","{using image data, e.g. images, photos, pictures taken by a user}","","","","","","","This place covers: Query formulation using a piece of image data such as a selected image file, a photograph, which currently is captured by the camera of the user, a document, a barcode or scanned text."
"G06F16/435","Filtering based on additional data, e.g. user or group profiles","","","","","","","This place covers: Wherein the retrieval is taking further parameters into account, such as user or group profile data for filtering the search space or the results."
"G06F16/436","{using biological or physiological data of a human being, e.g. blood pressure, facial expression, gestures}","","","","","","","This place covers: Using biological or physiological metrics obtainable by monitoring the human body (e.g. heartbeat, pulse, body temperature, brain waves) or biometric techniques (e.g. fingerprint, iris or retina, face, voice or gait recognition) in formulation or personalisation of queries."
"G06F16/437","{Administration of user profiles, e.g. generation, initialisation, adaptation, distribution}","","","","","","","This place covers: Techniques for modelling the changing interest of a user over time including manual, semi-automatic or automatic initialisation of user profiles, their maintenance and modification by monitoring the user's history of content selection, his history of interaction with the selected content, the management of the shared profile of a group of users, e.g. profile splitting or stereotyping."
"G06F16/438","Presentation of query results","","Menu, index or table of content presentation of record carriers, ","G11B27/32|G11B27/34","","","","This place covers: Where invention information is present in the visual or acoustic presentation of the query results to the user."
"G06F16/4387","{by the use of playlists}","","","","","","","This place covers: Methods or interfaces to create, modify or manage multimedia playlists."
"G06F16/4393","{Multimedia presentations, e.g. slide shows, multimedia albums}","","","","","","","This place covers: Multimedia presentations of query results, e.g. slideshow presentations, photo albums enriched with multimedia content, e-books with multimedia content, etc."
"G06F16/44","Browsing; Visualisation therefor","","","","","","","This place covers: Wherein a visual metaphor is provided for supporting the search process of the user, and wherein the retrieval is performed through arbitrary or guided browsing."
"G06F16/444","{Spatial browsing, e.g. 2D maps, 3D or virtual spaces}","","Interaction with 3D GUI environments in general","G06F3/04815","","","","This place covers: Using graphical representations of geographical, urban or virtual space, e.g. 2D or 3D maps, city plans, virtual spaces, as a paradigm for browsing representations of multimedia objects."
"G06F16/447","{Temporal browsing, e.g. timeline}","","","","","","","This place covers: Using graphical representations of time, e.g. timelines, calendars, diaries, as a paradigm for browsing representations of multimedia objects."
"G06F16/45","Clustering; Classification","","","","","","","This place covers: Automatic content-based multimedia document classification and clustering. Management of classes or clusters (GUI or machine based), overviews of different content-based clustering or classification methodologies."
"G06F16/48","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","","","","","","This place covers: Retrieval or indexing of multimedia data using metadata. Note: Group   concerns the use of metadata not derived from the multimedia content, or manually generated information, such as bibliographic information (e.g. title, composer, etc.), usage information, user ratings, tags etc. These data may be generated by automatic annotation of multimedia data, generation from existing data sources, e.g. data mining, collaborative annotation, creation of semantic ontologies, tagging."
"G06F16/483","using metadata automatically derived from the content","","Query formulation using audio dataQuery formulation using image data","G06F16/433|G06F16/434","","","","This place covers: Retrieval or indexing of multimedia data using metadata that automatically is derived from the multimedia content."
"G06F16/487","using geographical or spatial information, e.g. location","","","","","","","This place covers: Where the feature used for retrieval or indexing is any kind of absolute, relative or fuzzy representation of location, e.g. GPS coordinates, postal address, rooms of a building, user's car."
"G06F16/489","{using time information}","","","","","","","This place covers: Where the feature used for retrieval or indexing is of any kind absolute, relative or fuzzy representation of time, e.g. hour, date, time of the day, season of the year, rush hour, sunset or holiday."
"G06F16/50","of still image data","","Retrieval of multimedia dataPattern recognition; low-level feature extraction per seImage analysis, e.g. from bitmapped to non-bitmappedICT specially adapted for handling medical images, e.g. DICOM, HL7 or PACSDigital picture intermediate information storage","G06F16/40|G06K9/00|G06T7/00|G16H30/00|H04N1/21","","","","This place covers: Systems and methods (1) for retrieving digital still images in databases or (2) related to how metadata of the image type is used to retrieve other information, possibly of a different type."
"G06F16/51","Indexing; Data structures therefor; Storage structures","","Indexing specially adapted for contents retrieved by relative movement between record carrier and transducer","G11B27/10","","","","This place covers: Data structures for images or image database organisation. Aspects of accessing the images in the database to deal with bandwidth problems on the network or the computer, typically using caching or image interleaving. Specific indexing aspects."
"G06F16/53","Querying","","","","","","","This place covers: Processing details of still image retrieval requests."
"G06F16/532","Query formulation, e.g. graphical querying","","Interaction techniques for graphical user interfaces","G06F3/048","","","","This place covers: Wherein the contribution is in specific query formulation aspects, in particular graphical user interface supporting the user in specifying a graphical query."
"G06F16/535","Filtering based on additional data, e.g. user or group profiles","","","","","","","This place covers: Wherein the retrieval is taking further parameters into account, such as user or group profile data for filtering the search space or the results."
"G06F16/538","Presentation of query results","","","","","","","This place covers: Presentation of the query results to the user."
"G06F16/54","Browsing; Visualisation therefor","","","","","","","This place covers: Wherein a visual metaphor is provided for supporting the search process of the user, and wherein the retrieval is performed through arbitrary or guided browsing."
"G06F16/55","Clustering; Classification","","Methods or arrangements for recognising patterns","G06K9/00","","","","This place covers: Automatic image classification and clustering. Management of classes or clusters (GUI or machine based), overviews of different content-based clustering or classification methodologies."
"G06F16/56","having vectorial format","","","","","","","This place covers: Vectorial images, which are typically used in CAD oriented databases. Images also can be retrieved according to colours, shapes, etc. but the data structures are completely different as are the techniques of indexing/querying."
"G06F16/58","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","","","","","","This place covers: Indexing and retrieval of still image data using metadata."
"G06F16/583","using metadata automatically derived from the content","","Pattern recognition","G06K9/00","","","","This place covers: Image databases relying on feature information (previously indexed or obtained on-the-fly) derived from the image data by automatic image analysis."
"G06F16/5838","{using colour}","","","","","","","This place covers: Where the information extracted by analysis is related to colours present in the image, e.g. histograms."
"G06F16/5846","{using extracted text}","","Optical Character Recognition (OCR) techniques","G06K9/00","","","","This place covers: Text extracted from the still images, in opposition to text added from external sources or inputs, for retrieval."
"G06F16/5854","{using shape and object relationship}","","","","","","","This place covers: Using recognized shapes or spatial relationships between objects/blocks of the images for retrieval."
"G06F16/5862","{using texture}","","","","","","","This place covers: Using texture descriptors for the retrieval."
"G06F16/5866","{using information manually generated, e.g. tags, keywords, comments, manually generated location and time information}","","","","","","","This place covers: Wherein the metadata used for retrieval has been generated manually, for example, human labels, tags, keywords, comments or manually entered time and location data (as opposed to automatically obtained time or GPS provided data)."
"G06F16/587","using geographical or spatial information, e.g. location","","","","","","","This place covers: Where the feature used for retrieval or indexing is any kind of absolute, relative or fuzzy representation of location, e.g. GPS coordinates, postal address, rooms of a building, user's car."
"G06F16/60","of audio data","","Retrieval of general multimediaRetrieval of video dataElectrophonic musical instrumentsSpeech recognitionSpeaker recognitionGeneral determination or detection of speech characteristicsEditing or indexing of data stored based on relative movement between record carrier and transducer","G06F16/40|G06F16/70|G10H|G10L15/00|G10L17/00|G10L25/00|G11B27/00","","","","This place covers: Retrieval of audio data from audio databases, e.g. retrieval of songs, by using content features or bibliographical data associated with the audio data."
"G06F16/61","Indexing; Data structures therefor; Storage structures","","Indexing specially adapted for contents retrieved by relative movement between record carrier and transducer gTable of contents on a record carrier","G11B27/10|G11B27/327","","","","This place covers: Specific indexing aspects, data structures and storage structures for audio data."
"G06F16/63","Querying","","","","","","","This place covers: Processing details of audio retrieval requests"
"G06F16/632","Query formulation","","","","","","","This place covers: Wherein the contribution is in specific query formulation aspects supporting the user in inputting a query."
"G06F16/634","{Query by example, e.g. query by humming}","","","","","","","This place covers: Formulation of the query predicate as an existing/example audio content, e.g. query by humming, or using a recorded piece of audio data as example."
"G06F16/635","Filtering based on additional data, e.g. user or group profiles","","","","","","","This place covers: Filtering rules. Retrieval personalisation. Generation, learning, modification and use of user profiles. Monitoring of user activities for profile generation (in particular generation and use of reproduction/playback histories/logs). Relevance feedback."
"G06F16/636","{by using biological or physiological data}","","","","","","","This place covers: Using biological or physiological metrics obtainable by monitoring the human body (e.g. heartbeat, pulse, body temperature, brain waves) or biometric techniques (e.g. fingerprint, iris or retina, face, voice or gait recognition) in formulation or personalisation of audio queries."
"G06F16/637","{Administration of user profiles, e.g. generation, initialization, adaptation or distribution}","","","","","","","This place covers: Techniques for modelling the changing taste of a user over time including manual, semi-automatic or automatic initialisation of user profiles, their maintenance and modification by monitoring the user's history of audio content selection, his history of interaction with the selected content, the management of the shared profile of a group of users, e.g. profile splitting or stereotyping."
"G06F16/638","Presentation of query results","","Menu, index or table of content presentation of record carriers, ","G11B27/32|G11B27/34","","","","This place covers: Visual or acoustic presentation of the query results to the user."
"G06F16/639","{using playlists}","","","","","","","This place covers: Methods presenting the results of query for audio data in form of a list which defines an order between the audio data used during the replay of the audio data, e.g. methods or interfaces to create, modify and manage audio playlists."
"G06F16/64","Browsing; Visualisation therefor  (generation of a list or set of audio data G06F16/638)","G06F16/638","Trick modesBrowsing through audio recorded on operating discs","G11B27/005|G11B27/105","","","","This place covers: Browsing, e.g. a list or a collection/database of song titles or images or icons representing audio data. Such lists or sets of audio data representations may be the results of a querying operation. However, the contribution is the browsing method."
"G06F16/65","Clustering; Classification","","Methods or arrangements for recognising patterns","G06K9/00","","","","This place covers: Automatic audio classification and clustering. Management of classes or clusters (GUI or machine based), overviews of different content-based clustering or classification methodologies."
"G06F16/68","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","Metadata derived by content-analysisProgrammed access in sequence to addressed parts of tracks of operating discs","G06F16/683|G11B27/105","","","","This place covers: Indexing and retrieval of audio data using metadata."
"G06F16/683","using metadata automatically derived from the content","","Analysis and extraction of content specific audio featuresAudio watermarking, e.g. by inserting fingerprintsDetermination or detection of speech characteristicsIndexing by using information signals detectable on the record carrier and recorded by the same method as the main recording","G10H|G10L19/018|G10L25/00|G11B27/28","","","","This place covers: Retrieval and/or indexing methods using features derived from the audio content. This subgroup covers the mere use of audio content features in the context of audio data retrieval. This metadata comprises, for example, descriptors, fingerprints, signatures, MEP-cepstral coefficients, musical score, tempo."
"G06F16/685","{using automatically derived transcript of audio data, e.g. lyrics  (speech recognition G10L15/00)}","G10L15/00","","","","","","This place covers: Text data used to retrieve audio content, e.g. text derived from speech or music, phonetic transcript, music scores (sheet music), etc."
"G06F16/686","{using information manually generated, e.g. tags, keywords, comments, title or artist information, time, location or usage information, user ratings}","","","","","","","This place covers: Where the retrieval and/or indexing method uses manually generated information, e.g. data created by humans and added to the audio data at a post-production phase by manual annotation/tagging, e.g. title, song writer, interpret, users' tags, comments or annotations etc."
"G06F16/687","using geographical or spatial information, e.g. location","","","","","","","This place covers: Where the feature used for retrieval or indexing is any kind of absolute, relative or fuzzy representation of location, e.g. GPS coordinates, postal address, rooms of a building, user's car."
"G06F16/70","of video data","","Retrieval of multimediaImage retrievalAudio retrievalRecognising patternsImage analysisEditing or indexing of data stored based on relative movement between record carrier and transducer, e.g. video dataSource coding or decoding of digital video signal","G06F16/40|G06F16/50|G06F16/60|G06K9/00|G06T7/00|G11B27/00|H04N19/00","","","","This place covers: Video retrieval using content features. Video retrieval using bibliographical data. Details or video query formulation and video query processing. Browsing videos and the internal structure of videos. Presenting video query results. Video database index structures and management thereof. Video data model used in this group: the structure of this group relies on the following data model of video. Video content is the originally produced data comprising: The visual data (video frames). Accompanying audio track(s). Original textual content (typically subtitles, which can be coded and stored/transmitted either in binary/visual format or in textual format). Whatever data is added to video later, e.g. at a post-production phase, is referred to as bibliographical data or metadata."
"G06F16/71","Indexing; Data structures therefor; Storage structures","","Indexing specially adapted for contents retrieved by relative movement between record carrier and transducerTable of contents on a record carrier","G11B27/10|G11B27/327","","","","This place covers: Specific indexing aspects, data structures or storage structures for video data."
"G06F16/73","Querying","","","","","","","This place covers: Processing details of video retrieval requests."
"G06F16/732","Query formulation","","","","","","","This place covers: Query formulation and processing for the retrieval of video data."
"G06F16/7328","{Query by example, e.g. a complete video frame or video sequence  (graphical querying G06F16/7335)}","G06F16/7335","","","","","","This place covers: Formulation of the query predicate as an existing/example of video content, e.g. a video sequence or its excerpt/clip; typically a content-based descriptor computed from said example content during query processing; if there is contribution in the usage of a particular content feature or metadata, this should be classified under a relevant   subgroup, respectively; if there is a contribution in a particular content feature extraction, characterisation or analysis, this should be classified under the relevant   or   subgroup(s)."
"G06F16/7335","{Graphical querying, e.g. query-by-region, query-by-sketch, query-by-trajectory, GUIs for designating a person/face/object as a query predicate  (end-user interface involving hot spots associated with the video H04N21/4725; end-user interface for selecting a Region of Interest H04N21/4728)}","H04N21/4725|H04N21/4728","Query by an example video sequence","G06F16/7328","","","","This place covers: Graphical user interfaces [GUIs] for specifying graphical query predicates interactively (a mere selection of an example video sequence as a query predicate shall be classified in  ). These GUIs may for example allow a specification of sought-for regions, to sketch a desired scene, a trajectory, or to designate a person, a face or an object as query predicate."
"G06F16/7343","{Query language or query format}","","","","","","","This place covers: Query formulation using a specific query language or format of the query, e.g. SQL variants adapted for video or specific formats for expressing query parameters."
"G06F16/735","Filtering based on additional data, e.g. user or group profiles","","Recommending movies involving learning viewer preferences, Creating a personalised video channel, Monitoring the number of times a movie has been viewedMonitoring of user selections, e.g. selection of programs","H04N21/251|H04N21/466|H04N21/2668|H04N21/458|H04N21/44204|H04N21/44222","","","","This place covers: Filtering rules. Retrieval personalisation. Generation, learning, modification and use of user profiles. Monitoring of user activities for profile generation (in particular generation and use of reproduction/playback histories/logs). Relevance feedback. Playlist-based retrieval and playlist generation."
"G06F16/738","Presentation of query results","","Presentation in form of a video summaryBrowsing a video collectionTwo dimensional image generation","G06F16/739|G06F16/743|G06T11/00","","","","This place covers: Presentation of query results, in particular visual presentation methods/interfaces."
"G06F16/739","{in form of a video summary, e.g. the video summary being a video sequence, a composite still image or having synthesized frames}","","Two dimensional image generation","G06T11/00","","","","This place covers: Video summarisation, also called video abstraction, which produces a shorter and/or more condensed version of the original video. For example, video skimming produces a shorter video sequence at the output, typically comprising a subset of key frames extracted from the original video or a subset of excerpts / sub-sequences of the original video. Composite still images (2-D or 3-D), called,for example, a video mosaic, storyboard, video poster or ""movie bar"", typically comprising re-sized key-frames extracted from the original video, arranged into the still image like in a comic book or like stones in a mosaic. Video sequences comprising artificial (synthesized) frames, e.g. with an artificial (synthesized) view not existing in any of the single frames of the original video, with a stitched panorama showing a broader view and/or more motion than any single original frame or with a view having overlaid multiple instances of the same moving object."
"G06F16/74","Browsing; Visualisation therefor  (end-user interfaces for requesting or interacting with video content, e.g. video on demand interfaces or electronic program guides, H04N21/472)","H04N21/472","Indicating arrangements in the context of indexing and addressing recorded information","G11B27/34","","","","This place covers: Browsing a plurality of video files/sequences in a video collection/database. Browsing the internal structure of a single video sequence. Systems and methods for hyperlinking in hypervideo."
"G06F16/743","{a collection of video files or sequences}","","","","","","","This place covers: Browsing a plurality of video files/sequences in a video collection/database, e.g. using thumbnails, (moving) icons, cover art, etc."
"G06F16/745","{the internal structure of a single video sequence}","","","","","","","This place covers: Browsing the internal structure of a single video sequence, e.g. browsing by jumping between shots, scenes, objects or events in the content of the sequence."
"G06F16/748","{Hypervideo  (linking data to content, e.g. by linking an URL to a video object in the context of video distribution systems H04N21/858)}","H04N21/858","","","","","","This place covers: Systems and methods for hyperlinking in hypervideo. Computed links, including dynamically determined anchor and targets of links. Management of annotations linked to other documents."
"G06F16/75","Clustering; Classification","","Methods or arrangements for recognising patterns","G06K9/00","","","","This place covers: Automatic video classification and clustering. Management of classes or clusters (GUI or machine based), overviews of different content-based clustering or classification methodologies."
"G06F16/78","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","Use of information derived by content analysis","G06F16/783","","","","This place covers: Indexing and retrieval of video data using metadata"
"G06F16/783","using metadata automatically derived from the content","","Extraction of features or characteristics for pattern recognition of the imageRecognising video content","G06V10/40|G06V20/52","","","","This place covers: Retrieval and/or indexing methods using features derived from the video content. Retrieval using video signatures/fingerprints based on statistical/probabilistic methods or hashing algorithms."
"G06F16/7834","{using audio features}","","Contents oriented musical parameter indexing, e.g. tempoSpeech recognitionSpeaker recognitionGeneral determination or detection of speech characteristics","G10H|G10L15/00|G10L17/00|G10L25/00","","","","This place covers: Using features of the audio track of the video content, e.g. where query predicate(s) are in audio format (e.g. query-by-speech, query-by-music) or where retrieval or indexing uses low-level audio features (e.g. using magnitude/energy analysis, using speaker recognition methods)."
"G06F16/7837","{using objects detected or recognised in the video content}","","Methods for image acquisition of a pattern to be recognized involving target detection","G06V10/255","","","","This place covers: Where the feature used for retrieval or indexing is a detected or recognised object."
"G06F16/784","{the detected or recognised objects being people}","","Human body recognitionFace recognitionSpeaker recognition","G06V40/103|G06V40/16|G10L17/00","","","","This place covers: Where the features used for retrieval or indexing are detected or recognised people, e.g. faces."
"G06F16/7844","{using original textual content or text extracted from visual content or transcript of audio data}","","Extraction of overlay text","G06V20/635","","","","This place covers: Retrieval of video data by using metadata automatically derived from the content such as: Textual content (part (3) of the video content according to the video data model - see note of  ), e.g. the original subtitles (closed captions) transmitted in textual-format as part of the video stream or Extracted text from the video frames or from binary visually-coded subtitles (closed captions) or Text derived from speech or music, phonetic transcript, music scores (sheet music), etc."
"G06F16/7847","{using low-level visual features of the video content}","","Image processing in generalMethods for preprocessing an image in order to extract features of a pattern to be recognizedRecognising video content","G06T|G06V10/40|G06V20/52","","","","This place covers: Usage of low-level visual features extracted from the video content for video indexing and retrieval. Examples of descriptors range from a single value or a histogram of a particular low-level feature to a complex/statistical descriptor based on one or more features, e.g. video signature/fingerprint. Usage of particular low-level visual features should be classified in one or more of the subgroups."
"G06F16/785","{using colour or luminescence}","","Colour analysis on image data","G06T7/90","","","","This place covers: Using colour or luminescence as the low-level visual feature for querying."
"G06F16/7854","{using shape  (G06F16/7837 takes precedence)}","G06F16/7837","Segmentation or edge detection on image dataAnalysis of geometric attributes","G06T7/10|G06T7/60","","","","This place covers: Using detected shapes as the low-level visual feature(s) for querying, e.g. based on a detected sketched shape drawn by the user."
"G06F16/7857","{using texture  (G06F16/7837 takes precedence)}","G06F16/7837","Texture analysis on image data, ","G06T7/41|G06T7/49","","","","This place covers: Using texture as the low-level visual feature."
"G06F16/786","{using motion, e.g. object motion or camera motion}","","Motion analysis","G06T7/20","","","","This place covers: Using a motion feature, e.g. motion vector(s), as the low-level visual feature."
"G06F16/7864","{using domain-transform features, e.g. DCT or wavelet transform coefficients}","","","","","","","This place covers: Using features of a specific domain transform as the low-level visual features, e.g. wavelet or Discrete+ Cosine Transform (DCT) transform coefficients; this approach is often referred to as retrieval or indexing ""in compressed domain""."
"G06F16/7867","{using information manually generated, e.g. tags, keywords, comments, title and artist information, manually generated time, location and usage information, user ratings}","","","","","","","This place covers: Retrieval and/or indexing methods using information not-derived from the video content, e.g. data created by humans and added to video at a post-production phase by manual annotation/tagging, e.g. title, author, director, actors' names, users' tags, comments, annotations, usage information, user ratings etc."
"G06F16/787","using geographical or spatial information, e.g. location","","","","","","","This place covers: Retrieval or indexing where the features used are any kind of absolute, relative or fuzzy representations of location, e.g. GPS coordinates, postal address, rooms of a building, user's car."
"G06F16/80","of semi-structured data, e.g. markup language structured data such as SGML, XML or HTML  (content-based retrieval of web data G06F16/95)","G06F16/95","Web site document structures and storage, e.g. HTML extensionsUse of codes for handling textual entities","G06F16/986|G06F40/12","","","","This place covers: Semi-structured data, which is a form of structured data that does not conform with the formal structure of data models associated with relational databases or other forms of data tables, but nonetheless contains tags or other markers to separate semantic elements and enforce hierarchies of records and fields within the data."
"G06F16/81","Indexing, e.g. XML tags; Data structures therefor; Storage structures","","","","","","","This place covers: Creation or maintenance of an index comprising tag (structure) and content information that is used to retrieve information in semi-structured documents."
"G06F16/83","Querying","","","","","","","This place covers: Assembly, generation and maintenance of semi-structured (xml) databases as well as operations performed on semi-structured (xml) databases. Querying of said databases is also encompassed (XQuery etc.)."
"G06F16/832","Query formulation","","","","","","","This place covers: Example: Comparative analysis of XML query languages; graphical XML query language."
"G06F16/835","Query processing","","","","","","","This place covers: Examples: Implementing an XML query language. Query processing in Xyleme - a native XML DBMS. Implementing an XML query language."
"G06F16/8358","{Query translation}","","","","","","","This place covers: Translation of a query into internal representation. Translation of XML specific query language into SQL as internal representation."
"G06F16/8365","{Query optimisation}","","","","","","","This place covers: Example: XML query (XQuery) optimization and normalization."
"G06F16/8373","{Query execution}","","","","","","","This place covers: Execution of one or more (already generated and optimized) query execution plan(s). Examples: Pipelined query execution of a ranking operator for XQuery. Intra-document indices to improve XQuery processing over XML streams."
"G06F16/84","Mapping; Conversion","","","","","","","This place covers: Mapping or conversion of semi-structured documents to other structures."
"G06F16/86","{Mapping to a database}","","","","","","","This place covers: Mapping of semi-structured documents to databases (relational, object oriented, etc.)."
"G06F16/88","{Mark-up to mark-up conversion  (conversion for visualization in web browsing G06F16/9577)}","G06F16/9577","","","","","","This place covers: Normalisation or conversion of semi-structured documents into another semi-structured scheme."
"G06F16/90","Details of database functions independent of the retrieved data types","","","","","","","This place covers: Retrieval of information, wherein the retrieval method is not related to any particular type of data, in particular if no specific data type is indicated or implied by the context of the document at all, or an explicit hint is given that the disclosed mechanism can be used for retrieval of arbitrary data types. Retrieval from the web."
"G06F16/901","Indexing; Data structures therefor; Storage structures  (for retrieval from the web G06F16/951)","G06F16/951","Storage and indexing structures for databases wherein the data type of the retrieved information can be identified as structured","G06F16/22","","","","This place covers: Details about data structures for storage and indexing of generic data, independent of its type."
"G06F16/9014","{hash tables}","","Accessing data in main memory systems with address translation involving hashing techniquesRouting in networks, hashing functions for network address lookup","G06F12/1018|H04L45/00","","","","This place covers: Retrieval of data by calculating a storage address, for example in a table, file or main memory from a given key, or converting somehow this key to that storage address; for example using a hashing function to map an information key to the address where that information is stored."
"G06F16/9024","{Graphs; Linked lists  (G06F16/9027 takes precedence)}","G06F16/9027","","","","","","This place covers: Systems, methods for managing data structures such as data graphs, linked lists, being specifically adapted for accessing of index data accessible in a chained manner, e.g. including some form of pointers from one index record to one or more other index records."
"G06F16/9027","{Trees}","","Management of index trees for structured data storesManagement of index trees for unstructured text data","G06F16/2246|G06F16/322","","","","This place covers: Details of implementation in memory of the tree structures, compact representations. Techniques to re-balance trees after updates (e.g. insertions or deletions). Extensions to basic tree structures to offer alternative navigation paths through the trees."
"G06F16/903","Querying  (for retrieval from the web G06F16/953)","G06F16/953","","","","","",""
"G06F16/90324","{using system suggestions}","","","","","","","This place covers: While inputting a query, the system predicts the most probable next query words and displays a list for the user to choose from using the mouse."
"G06F16/90339","{by using parallel associative memories or content-addressable memories}","","Internal architecture of CAM, PAMUse of CAM for routing and flow control of packets in data switching networks, ","G11C15/00|H04L45/00|H04L47/10","","","CAMContent Addressable MemoryPAMParallel Associative Memory","This place covers: Use of Content Addressable (CAM) or Parallel Associative Memories (PAM) to match search arguments with a large number of elements in parallel. Architecture making use of CAM units for speeding up retrieval."
"G06F16/90344","{by using string matching techniques}","","Orthographic correctionSequence comparison in bioinformaticsString matching used for packet routing in packet switching systems","G06F40/232|G16B30/00|H04L45/00","","","","This place covers: Retrieval of data by using string matching, e.g. using finite state machines or genetic algorithms."
"G06F16/90348","{by searching ordered data, e.g. alpha-numerically ordered data}","","Sequence comparison in bioinformatics","G16B30/00","","","","This place covers: Searching dictionaries or (alpha-numerically) ordered lists; includes taking advantage on the ordering for binary or simple sequential access."
"G06F16/904","Browsing; Visualisation therefor  (for navigating the web G06F16/954; browsing optimisation for the web G06F16/957)","G06F16/954|G06F16/957","","","","","","This place covers: Navigating/Browsing a set of generic items (consumer products, homes, wallpaper patterns) using operations like ''more of this'' and ''less of that''. 3D-based approach of browsing through data items corresponding to files or folders."
"G06F16/907","Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually","","","","Documents describing retrieval of arbitrary data types based on a specific type of metadata in addition may be classified in the group corresponding to the data type used for the retrieval, depending on the level of disclosed details concerning the data type used for retrieval.","","",""
"G06F16/93","Document management systems","","Retrieval of unstructured textual dataRetrieval of image dataRetrieval of semi-structured data","G06F16/30|G06F16/50|G06F16/80","","","","This place covers: Organisation of collections of digital documents (scanned, OCRed, semi-structured or unstructured representation) in document library databases. Retrieval of digital representations of documents. Techniques for associating physical paper documents with their digital representation as stored in a database, e.g. by attaching barcodes to documents."
"G06F16/94","Hyperlinking G06F40/134","G06F40/134","Navigation in hyperlinked Web environments","G06F16/954","","","","This place covers: Systems and methods for hyperlinking in documents. Computed links, including dynamically determined anchor and targets of links. Management of annotations linked to other documents."
"G06F16/95","Retrieval from the web","","Web site advertisementNetwork protocol aspects, , Internet protocolRouting of packets, address resolution in data networks","G06Q30/00|H04L29/06|H04L29/08|H04L67/00|H04L29/06095|H04L29/12009","","","","This place covers: Systems and methods for browsing and retrieving information on the web. Aspects in subgroups that deal with search engines specifics (e.g. crawling, indexing, search personalisation), web navigation, web site management (e.g. content collection, organisation and management of web sites, publication of same) and browsing optimisations (e.g. for quicker access or adequate visualisation)."
"G06F16/951","Indexing; Web crawling techniques","","Text content indexation","G06F16/31","Local, keyword-based search engines should be classified in the appropriate subgroups according to the retrieved type of data; for example, if dealing with: unstructured text, see .","G06F16/30","","This place covers: Systems and methods for collecting, organising or managing indexation of information originating from more than one data source in order to support keyword based searching. Web retrieval techniques dealing specifically with the nature of the web: Heterogeneity of data, users and devices. Large number of documents and users. Lack of detailed knowledge about the data sources. Specific web retrieval techniques such as: Crawling techniques to discover/navigate sites and document hyperlinks. Meta-search engines: Remote systems interactions for web retrieval purposes, e.g. distributed and remote indexing of web content. Handling documents in different languages."
"G06F16/9535","Search customisation based on user profiles and personalisation","","When censoring comprises modifying the contentFiltering pages containing malware, virus or phishing attempts, Recommendation not directed at the retrieval of documents, but rather to items for sale, or ""friends"" (e.g. social matchmaking)Personalisation for targeted marketing or advertisement","G06F16/9577|G06F21/56|H04L29/06551|G06Q|G06Q30/00","","","","This place covers: Techniques to select the information conveyed to the user during his retrieval session, usually in complement to an explicit user query request. Personalisation of queries and/or of returned results. Facets which include: Censoring by filtering documents (e.g. by keyword or objectionable images). Using inclusive/exclusive lists of sites/pages to define viewable content. Sharing user profile knowledge or identifying common interests to identify relevant information. Systems using a single user profile to filter information or enhance query. Aggregation of information (personalised online newspapers). User navigation monitoring to identify user interests and consequent query refinement."
"G06F16/9537","Spatial or temporal dependent retrieval, e.g. spatiotemporal queries","","Network protocols in which the network application is adapted for the location of the user terminalMessaging using geographical location informationServices or facilities specially adapted for wireless communication network making use of the locations of the users","H04L29/08657|H04L51/20|H04W4/02","","","","This place covers: Methods and systems where the client accessing a web site conveys somehow localization or temporal information that is used then to personalise queries and/or results. Methods and systems where web content indexation involves localization information (spatial information). Integration of geographic (spatial) information in Web pages with other information."
"G06F16/954","Navigation, e.g. using categorised browsing","","Document hyperlinking per se, computed linksReturning a document set as a result of a query","G06F16/94|G06F16/951","","","","This place covers: Interactive ways to help the user in recognising desired information in web sites/web pages. Methods and systems to help an interactive navigation within the document space on the web, in a search narrowing approach, including providing suggestions of pages to visit which appear relevant to the user's search path. Methods and systems whereby visual cues typically are provided to show existing relationships among documents or to provide a document space visualisation. Passive browsing, guided tours, wherein a list of web pages to visit is prepared in advance or automatically devised. Examples: Methods can be based on a classification or clustering approach to organise the documents. Categorised browsing, portals, virtual worlds' tours or visual networks of documents. Using a query to select a starting point for navigation, showing how the returned documents relate to each other."
"G06F16/955","using information identifiers, e.g. uniform resource locators [URL]","","","","","","","This place covers: Cases where the user already has an identifier for the information he wants to retrieve. Typically, the identifier is a product code or a bookmark. The general idea is that the user does not have to blindly search for the information."
"G06F16/9554","{by using bar codes}","","Details of bar codes and readers per se","G06K19/00","","","","This place covers: Use of a barcode reader (e.g. to read a UPC code or even a URL printed on a product) connected to a computer with a browser which fetches the relevant information on the Internet. Also systems wherein the user inputs the product code directly in a browser link field. Facets: The code can be a direct URL or one that needs to be first resolved in an intermediary server. The code can further comprise commands or information used for personalising the search."
"G06F16/9558","{Details of hyperlinks; Management of linked annotations}","","Navigation in hyperlinked web environments","G06F16/954","","","","This place covers: Details of hyperlinking in hypertext. Computed links, including dynamically determined anchor and targets of links. Management of annotations linked to other hypertext."
"G06F16/9562","{Bookmark management}","","","","","","BookmarksRepresent information already identified as relevant for the user; they are user oriented and they represent information of interest already identified.PortalsPresent a way for information yet to be discovered, and they are not specific to a user.","This place covers: Methods and systems whereby the browser bookmarks are used to reference, organise, classify and access information. Local or central bookmark storage, managed by an individual or an organisation. Related management functions such as: replace in bulk, share bookmarks, detect broken links, add comments for later reference, extract from files, enhance visual aspect (e.g. icons, colours for easier recognition), automatic extraction (from pages), classification, etc."
"G06F16/9566","{URL specific, e.g. using aliases, detecting broken or misspelled links}","","Address allocation to terminals or nodes connected to a networkUse of aliases or nicknames in arrangement for managing network namingAddressing or naming in networks with short addresses","H04L29/12009|H04L29/12594|H04L29/12943","","","","This place covers: Variations of URLs in order to facilitate or simplify the access to the information (e.g. alias in non-Latin characters, tiny URLs). These URLs can refer to existing documents but also to virtual pages created at access-time or accessing transparently other links."
"G06F16/957","Browsing optimisation, e.g. caching or content distillation","","Voice browsers, e.g. interpreting VoiceXML, for providing telephonic information services","H04M3/4938","","","","This place covers: Optimisations in the browsing process concerned with faster or simpler access to information. Improvements that enhance or simplify the understanding of data or the visualization of data on the user's device. These include among others: Identifying changes in pages or sections of pages. Combined printing of web documents; for example, several web pages forming a single document. Combined access to CD-ROM information with internet browsing. Using specific data viewers (e.g. Mime dependent). In general, improvements with the browsing process."
"G06F16/9574","{of access to content, e.g. by caching}","","Accessing, addressing or allocating within memory systems and cachesNetwork arrangements for storing temporarily data at an intermediate stage, e.g. caching","G06F12/08|H04L29/08801","The type of caching referred to in this group usually occurs at an application level; it is content aware, meaning that the system has some knowledge about the data content and will decide what and how to cache it based on this content.This is opposed to system level caching, where the data content is transparent to the cache.","","","This place covers: Ways to speed up access to information on the Internet, typically, via caching and/or prefetching. Content dissemination systems. Look-ahead (Web) caching. Caching static and/or all of portions of dynamic data. Caching or hoarding of Web content on local removable storage (CDs, DVDs, USB keys) for later browsing."
"G06F16/9577","{Optimising the visualization of content, e.g. distillation of HTML documents}","","Web page authoringManipulation for advertisement or marketing purposesProtocols for network applications adapted for terminals or networks with limited resources and for terminal portabilityArrangements for conversion or adaptation of application content or formatMessage adaptation based on network or terminal capabilities","G06F40/00|G06Q30/00|H04L29/08108|H04L29/08756|H04L51/06","While the manipulation of navigation items in a Web page (e.g. hyperlinks) to simplify browsing (for example associating a visible numerical code to links on a page and allowing keying in the code instead of activating the link with a pointer device) pertains to this group, document navigation techniques themselves should be classified in .May also include simple cases of document summarisation (priority to ) as long as the goal is page visualisation and not to be used for the purpose of document indexation. Typically uses an HTML parser (for parsing techniques used in software development see ). Format conversions not presentation dependent or related are classified in .","G06F16/954|G06F16/30|G06F8/427|G06F16/1794","DistillationProcess of reducing the amount of information before delivery, in particular to eliminate information which cannot be rendered on the end device (colour on a black and white screen or downscaling of images in a Web page for a small screen)","This place covers: Methods and systems manipulating web page content (e.g. HTML) for the purpose of changing the presentation of a page, in order to enhance the comprehension or visual rendering of its content. Adapting content for providing support to devices with various displays (e.g. PDA small screen). Reorganizing or simplifying the page layout. Using user profiles or templates to create or change the page presentation."
"G06F16/958","Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking","","Web page authoring","G06F40/00","","","ASPActive Server Page: Microsoft Tool for dynamically serving Web pagesJSPJava Server Page: Java tools for dynamically serving Web pages","This place covers: Organisation or management of web sites: how data is collected, stored and organised in a server, and how the information is published (e.g. dynamic web page servers) and made available or sent to users such as: Creation of site maps Registration of sites/pages in search engines Link organisation and maintenance Push channels, syndication and subscription systems Web CMS (Content Management Systems) repositories"
"G06F16/972","{Access to data in other repository systems, e.g. legacy data or dynamic Web page generation}","","File format conversionTree transformation in markup documents, XSLT","G06F16/1794|G06F40/154","","","","This place covers: Documents concerned with technologies to support the access to data in proprietary or legacy systems from the Internet. Systems and methods to translate, offline or on the fly, proprietary formats to the open standards of the Internet. Dynamic page creation from legacy system."
"G06F16/986","{Document structures and storage, e.g. HTML extensions}","","","","","","","This place covers: The way documents are represented and their structures are used. Extensions to or special uses of the HTML coding language."
"G06F17/10","Complex mathematical operations {(function generation by table look-up G06F1/03; evaluation of elementary functions by calculation G06F7/544)}","G06F1/03|G06F7/544","Computer-aided design and simulationReservoir modellingGeophysics, seismic data analysisPattern recognition, e.g. classification algorithmsNeural networksGenetic algorithmsComputer systems using knowledge base modelsComputer systems based on specific mathematical modelsProbabilistic networks, e.g. Bayesian networksUsing fuzzy logicImage processingDigital filtersData compression in generalCoding/decoding in generalDecoding based on Viterbi algorithm","G06F30/00|E21B49/00|G01V1/28|G06K9/00|G06N3/02|G06N3/126|G06N5/00|G06N7/00|G06N7/005|G06N7/02|G06T|H03H17/00|H03M7/30|H03M13/00|H03M13/41","A document disclosing a device which is configurable to perform several complex mathematical operations (e.g. a circuit configurable to perform either a DFT or a convolution operation) is to be classified in the relevant groups ( and ) if the document discloses details of the computations which are specific to the different mathematical operations. However, if no such details are provided, the document is to be classified only in the broadest group covering these operations. For example, a document disclosing a circuit able to perform any linear transform, including DFT and DCT, without providing details specific to the DFT or DCT computations, is to be classified only in .","G06F17/141|G06F17/15|G06F17/14","","This place covers: Algorithms for: performing complex mathematical operations (e.g. matrix-vector multiplication  , discrete Fourier transform  ); solving generic mathematical problems (e.g. system of linear equations  ); manipulating mathematical objects (e.g. matrix factorization  ); evaluating complex mathematical functions (e.g. by interpolation of known function values  ); computing statistical descriptions of data sets (e.g. histogram computation  ) mathematical analysis of data not provided elsewhere (e.g. mathematical spectral analysis algorithms based on the discrete Fourier transform  )and the implementation of such algorithms as computer programs (for general-purpose digital processors), eventually with specially adapted data structures for storing the mathematical objects upon which the operations are performed (e.g. specific matrix storage formats), or as dedicated digital hardware circuits, described on the level of adders, subtractors, multiplexers, etc. The groups in   are function-oriented and are intended to cover mathematical methods and devices which are in principle not tied to a particular application field. To be classified in   and subgroups, a document should not merely disclose how a (technical) problem in an application field is reduced to a particular mathematical problem (e.g. a particular set of equations) but it must also disclose details of the mathematical algorithm used to solve this particular mathematical problem. Furthermore, the mathematical problem and/or the mathematical algorithm used to solve it should also be sufficiently generic in the sense that they may be relevant outside the particular application field (even if this fact is not mentioned in the document itself). Subject-matter classified in group   itself (because it does not fall in any of the subgroups) includes among others: Numerical computation of the derivative of a function; Numerical integration of a function, e.g. Using monte-carlo methodology; Methods enabling symbolic mathematical calculations, e.g. In computer algebra systems; Graph algorithms not classified elsewhere."
"G06F17/11","for solving equations {, e.g. nonlinear equations, general mathematical optimization problems  (optimization specially adapted for a specific administrative, business or logistic context G06Q10/04)}","G06Q10/04","Computer-aided design, e.g. circuit design, network designDynamic search techniques, heuristics, branch-and-bound used in computer systems utilising knowledge based modelsOptimization specially adapted for a specific administrative, business or logistic context","G06F30/00|G06N5/003|G06Q10/04","","","","This place covers: Solving non-linear equations (e.g. By iterative methods) Mathematical algorithms for solving general mathematical optimization problems (e.g. Linear, non-linear, mixed-integer or combinatorial optimization problems)"
"G06F17/12","Simultaneous equations {, e.g. systems of linear equations}","","","","Details of matrix factorization algorithms or matrix storage formats used in the context of a specific method for solving a system of linear equations are additionally classified in  if they are per se relevant.","G06F17/16","","This place covers: Methods for solving systems of linear equations Ax=b, e.g. by direct or iterative methods."
"G06F17/13","Differential equations  (using digital differential analysers G06F7/64)","G06F7/64","Computer-aided design Simulation using finite difference or finite element methodsAdaptive control systemsCreation and adaptation of a mathematical model used to control a system","G06F30/00|G06F30/23|G05B13/00|G05B17/00","","","","This place covers: Solving ordinary or partial differential equations. Qualitative analysis of dynamical systems, e.g. Determining attractors."
"G06F17/14","Fourier, Walsh or analogous domain transformations {, e.g. Laplace, Hilbert, Karhunen-Loeve, transforms  (for correlation function computation G06F17/156; spectrum analysers G01R23/16)}","G06F17/156|G01R23/16","","","","","","This place covers: Efficient computation of domain transforms By extension,   and its subgroups (in particular   and  ) do also include General mathematical algorithms for spectral analysis based on a domain transform (e.g. a method for DFT resolution enhancement by zero-padding is classified in  ) Domain transforms not covered by its subgroups, e.g. Laplace, Hilbert or Karhunen-Loève transforms. It does also cover devices enabling computation of broad classes of domain transforms."
"G06F17/141","{Discrete Fourier transforms}","","Multi-carrier modulation systemsInverse Fourier transform modulatorsIFFT/IDFT in combination with other circuits for modulationFourier transform demodulators","H04L27/2601|H04L27/2628|H04L27/2634|H04L27/265","","","","This place covers: Discrete Fourier Transform (DFT) computation, e.g. partial DFT, Goerzel method, recursive DFT computation, short-time DFT Fast Fourier Transform (FFT) and Prime Factor algorithms for computing the DFT and corresponding devices are classified in subgroups. By extension,   also includes: general mathematical algorithms for spectral analysis based on the DFT, e.g. DFT resolution enhancement by zero-padding"
"G06F17/142","{Fast Fourier transforms, e.g. using a Cooley-Tukey type algorithm}","","","","","","","This place covers: DFT computation by means of a Fast Fourier Transform (FFT) algorithm, e.g. Cooley-Tukey or mixed-radix type processing elements specially adapted for FFT butterfly operations memory addressing schemes specially adapted for FFT computation"
"G06F17/144","{Prime factor Fourier transforms, e.g. Winograd transforms, number theoretic transforms}","","","","","","","This place covers: prime factor algorithm (PFA) or Good-Thomas algorithm Winograd Fourier transform algorithm (WFTA)"
"G06F17/145","{Square transforms, e.g. Hadamard, Walsh, Haar, Hough, Slant transforms}","","Direct-sequence spread-spectrum techniques, e.g. CDMA","H04B1/707","","","",""
"G06F17/147","{Discrete orthonormal transforms, e.g. discrete cosine transform, discrete sine transform, and variations therefrom, e.g. modified discrete cosine transform, integer transforms approximating the discrete cosine transform  (G06F17/145 takes precedence)}","G06F17/145","Coding or decoding of speech or audio signalsDiscrete cosine transform modulators in multi-carrier modulation systemsTransform-based video codingThe transform being DCT","G10L19/00|H04L27/2639|H04N19/60|H04N19/625","","","","This place covers: Discrete Cosine Transform (DCT) Discrete Sine Transform (DST) Modified Discrete Cosine Transform (MDCT) Integer transforms approximating the DCT, e.g. IntDCT"
"G06F17/148","{Wavelet transforms}","","Transform-based video coding, the transform being sub-band based, e.g. wavelets","H04N19/63","","","","This place covers: Fast Wavelet Transform. Integer Wavelet Transform."
"G06F17/15","Correlation function computation {including computation of convolution operations  (arithmetic circuits for sum of products per se, e.g. multiply-accumulators G06F7/5443; digital filters, e.g. FIR, IIR, adaptive filters H03H17/00)}","G06F7/5443|H03H17/00","Pattern recognitionConvolution neural network Digital filters, e.g. FIR, IIR, adaptive filtersDirect-sequence spread-spectrum techniques, e.g. CDMA","G06K9/00|G06N3/02|H03H17/00|H04B1/707","","","","This place covers: Correlation computations, e.g. Sliding correlation, cross-correlation, auto-correlation Convolution operations"
"G06F17/153","{Multidimensional correlation or convolution}","","Convolution neural network Image enhancement, e.g. noise filtering, using multidimensional convolution operations","G06N3/02|G06T5/00","","","",""
"G06F17/156","{using a domain transform, e.g. Fourier transform, polynomial transform, number theoretic transform}","","","","","","","This place covers: FFT-based correlation and convolution."
"G06F17/16","Matrix or vector computation {, e.g. matrix-matrix or matrix-vector multiplication, matrix factorization  (matrix transposition G06F7/78)}","G06F7/78","Arrangements for executing machine-instructionsTo perform operations on data operands, e.g. arithmetic instructionsConcurrent instruction execution using a plurality of independent parallel functional units, e.g. SIMD, MIMDArchitecture of general-purpose stored program computerReconfigurable architecturesArchitectures comprising an array of processing units, e.g. single instruction multiple data (SIMD) processorsSystolic arraysVector processorsSolving simultaneous equations, e.g. systems of linear equations","G06F9/30|G06F9/30007|G06F9/3885|G06F15/76|G06F15/7867|G06F15/80|G06F15/8046|G06F15/8053|G06F17/12","","","","This place covers: Matrix-matrix multiplication Matrix-vector multiplication Vector product, dot product computation Matrix inversion Matrix factorization, e.g. Svd, lu, qr, cholesky decompositions Matrix storage formats, e.g. For sparse matrices Software and hardware implementations thereof, e.g. a systolic array specially adapted for QR decomposition."
"G06F17/17","Function evaluation by approximation methods, e.g. inter- or extrapolation, smoothing, least mean square method  ({G06F17/18 takes precedence } ; interpolation for numerical control G05B19/18)","G06F17/18|G05B19/18","Digital function generation working, at least partially, by table look-up; reduction of look-up table size","G06F1/03","","","",""
"G06F17/175","{of multidimensional data}","","Geometric Image transformation, e.g. interpolation-based scaling","G06T3/00","","","",""
"G06F17/18","for evaluating statistical data {, e.g. average values, frequency distributions, probability functions, regression analysis  (forecasting specially adapted for a specific administrative, business or logistic context G06Q10/04)}","G06Q10/04","Pattern recognition using clustering techniquesForecasting specially adapted for a specific administrative, business or logistic contextBioinformaticsHealthcare informatics","G06K9/6217|G06Q10/04|G16B|G16H","","","","This place covers: Computing the (running) average of a set of data. Computation of confidence intervals. Computing a probability density function, e.g. An histogram, for a set of data. Regression analysis, e.g. Least-mean square methods for fitting a function to statistical data. General statistical analysis methods not covered elsewhere."
"G06F17/40","Data acquisition and logging  (for input to computer G06F3/00)","G06F3/00","Digital input using the sampling of an analogue quantity at regular intervals of time Reading record carriersRecord carriers as suchConversion of a code in general, e.g. compression of data","G06F3/05|G06K7/00|G06K19/00|H03M7/00","Data acquisition normally always is linked to a particular application in the form of specifying what data is being acquired or from what entity data is being acquired and must be classified with those applications.","","","This place covers: Logging and acquisition of digital data. Data logging, the act of storing and possibly organising collected data in such a way that some (temporal) ordering between the data is kept.  Log processing that is independent of the semantics of the log content."
"G06F21/00","Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity","","Program control, executing machine-instructions, program loading or initiating in general, task interaction, specific resource access rightsMultiprogrammingError detection, error correction, monitoringElectric safety arrangements in control or regulating systemsElectric program-control in control or regulating systemsRecord carriers for use with machines and with at least a part designed to carry digital markingsProtecting identification code in record carriersData processing adapted for administrative, commercial, managerial, supervisory or forecasting purposesComplete banking systemsAlarms or alarm systems- Equipment anti-theft monitoring by a central stationCiphering apparatusInformation storage based on relative movement between record carrier and transducerArrangements for conditional access to broadcast information using cryptographySecret or secure communication, e.g. including authentication means- Key distribution in cryptographic systemsAlgorithms, certificates, signatures, hash functions, encryptionData switching networksScanning, transmission or reproduction of documentsSelective content distribution, e.g. interactive television, video on demandSecurity arrangements, e.g. access security or fraud detection; authentication in wireless communication networks","G06F9/00|G06F9/46|G06F11/00|G05B9/02|G05B19/02|G06K19/00|G06K19/073|G06Q|G07F19/00|G08B13/00|G08B31/00|G08B26/00|G09C|G11B|H04H60/23|H04L9/00|H04L9/32|H04L9/08|H04L9/32|H04L12/00|H04N1/00|H04N21/00|H04W12/00","The general rule is to limit to the best-suited group but there could be a plurality of groups for a document if that document discloses many relevant aspects when taken separately (e.g. a document having isolated disclosures) or in combination, in particular when a combination of groups is more suited to reflect the disclosure.","","Contentmeans any intellectually created work whose copyright is to be safeguarded","This place covers: Security arrangements for protecting computers or their components, programs and data against unauthorised activity, e.g. intrusion into a computer, computer malware detection and handling, authentication, unauthorised use of data, dishonest alteration of data, theft of secret data. In particular, the following subjects are covered: Protecting specific internal or peripheral components in which the protection of a component leads to protection of the entire computer; Monitoring users, programs or devices to maintain the integrity of platforms; Authenticating users, programs or devices; Protecting distributed programs or content, e.g. vending or licensing of copyright material; Protecting data used within a computer."
"G06F21/10","Protecting distributed programs or content, e.g. vending or licensing of copyrighted material","","Games systems, i.e. specific solutions for security of gamesChip on mediaCommerce, e.g. marketing, shopping, billing, auctions or e-commercePreventing of unauthorized reproduction or copying of mediaProtecting content in television systems","G06F2221/2109|G06F2221/2121|G06Q30/00|G11B20/00086|H04N21/00"," and subgroups are used in combination with this group.","G06F2221/07","","This place covers: Protecting software against unauthorised usage in a vending or licensing environment, e.g. protecting the software provider's copyright. The protection is generic, i.e not specific to the type of content. Protecting data in an environment substantially outside the data owner's control (or in a hostile environment). The term ""hostile environment"" means data and operational environment of the data are controlled by different entities. Example: hostile environment: FT(Financial Times) has a server where users who pay get a key that enables locally stored encrypted FT-newspaper-articles to be decrypted and read. The articles are in a hostile environment, the computer of the user, where FT has limited or no influence, therefore the article needs to be protected from the user, in this case by encryption"
"G06F21/105","{Tools for software license management or administration, e.g. managing licenses at corporate level}","","","","","","","This place covers: Examples: Managing floating licenses."
"G06F21/12","Protecting executable software","","","","","","","This place covers: Protection is restricted to techniques specific to executables."
"G06F21/123","{by using dedicated hardware, e.g. dongles, smart cards, cryptographic processors, global positioning systems [GPS] devices}","","Authenticating in combination with an additional device If the program contains security routines acting after initial authorizationLocation-sensitive","G06F21/34|G06F21/54|G06F2221/2111","","","","This place covers: Dedicated hardware is used for authorizing access to an executable program using techniques specific to executable programs (e.g. manipulation of the code, manipulation of the instruction flow or data flow, security routine in the program to verify a code in a dongle)."
"G06F21/14","against software analysis or reverse engineering, e.g. by obfuscation","","If similar techniques as the ones used for obfuscation are used to restrict unauthorized usage and thus copy protection","G06F21/125","","","","This place covers: Be aware that the software generally stays unlocked. Obfuscation is primarily used to prevent reverse engineering but not to prevent copying. Examples: Program code is altered at each execution, program flow is changed to mask calls to sensitive routines, data flow is changed, compiling techniques normally performed by code optimizers rolled back."
"G06F21/16","Program or content traceability, e.g. by watermarking","","Digital watermarking on images","H04N1/32","","","",""
"G06F21/30","Authentication, i.e. establishing the identity or authorisation of security principals","","Authentication using challenge-responseBluffing e.g. pretending to have connected a user to a real node when in fact the connection is to a dummy nodeLost password, i.e. recovery of lost of forgotten passwordsVerifying human interaction, e.g. CaptchaMetering, i.e. counting events for security purposes Time limited access e.g. to a computerRecurrent verificationClearing memory or data when detecting an attack e.g. to prevent the data from being stolenTime stampOne-time-passwordsTime-dependent-passwords, e.g. periodically changing passwords","G06F2221/2103|G06F2221/2127|G06F2221/2131|G06F2221/2133|G06F2221/2135|G06F2221/2137|G06F2221/2139|G06F2221/2143|G06F2221/2151|H04L29/06789|H04L29/06795","","","",""
"G06F21/305","{by remotely controlling device operation}","","","","","","","This place covers: Authentication is not triggered by a user but imposed/initiated by a third party."
"G06F21/31","User authentication","","Authentication mechanisms","H04L29/06755","","","","This place covers: Specific authentication aspect (e.g. initial authentication, regular authentications at predetermined time intervals, or re-authentication after logout or locking) or password design."
"G06F21/313","{using a call-back technique via a telephone network}","","","","","","","This place covers: Using characteristics specific to telephone lines. Examples: Call-back to user phone number derived from phone network provider. Particular cases: Authentication request triggered by server (no call-back) using phone number derived from phone network provider."
"G06F21/316","{by observing the pattern of computer usage, e.g. typical user behaviour}","","","","","","","This place covers: Authentication succeeds only when secondary user-specific authorization criteria are fulfilled at login time. Examples: An example of secondary user-specific authorization criteria is the typing speed of the user; admit user only if this typing-speed corresponds to its normal one. Particular cases: Maximum number of login attempts for a given user, login must be at predetermined time of day, remote login is restricted to specific computers."
"G06F21/32","using biometric data, e.g. fingerprints, iris scans or voiceprints","","Authenticating a user by observing the pattern of computer usage, e.g. typical user behaviour Use of unusual or unconventional user registrationAuthenticating a user by using biometrical features, e.g. fingerprint, retina-scan","G06F21/316|G06F2221/2117|H04L29/06809","","","","This place covers: Using physiological data intrinsic to a principal and what a principal is able to do. Examples: Typing/mouse clicking frequency; Handwritten signature."
"G06F21/33","using certificates","","Authentication by using a single sign-on procedure provides access to a plurality of nodes Verifying identity using certificates, signatures, hash functions and/or encryptionAuthenticating by using tickets, e.g. Kerberos Authenticating by using certificates","G06F21/41|H04L9/32|H04L29/06761|H04L29/06775","","","","This place covers: All authentication mechanisms implying use of a ticket, token or certificate issued by a third party upon initial user authentication. The ticket contains a proof of the initial authentication which is accepted by all parties. Examples: Kerberos, OSF DCE."
"G06F21/335","{for accessing specific resources, e.g. using Kerberos tickets}","","Authentication by using a single sign-on procedure provides access to a plurality of nodes","G06F21/41","","","",""
"G06F21/34","involving the use of external additional devices, e.g. dongles or smart cards","","Authenticating by using an additional device, e.g. smartcard, SIM ","H04L29/06802","","","","This place covers: The additional device is used for authentication with the purpose of accessing a computer system. Particular cases: The additional device is a cryptographic processor."
"G06F21/35","communicating wirelessly","","Authenticating by using an additional device, e.g. smartcard, SIM ","H04L29/06802","","","","This place covers: Examples: Continuous detection of wireless authentication token carried by user.Particular cases: Wireless presence detector, logout when not present."
"G06F21/36","by graphic or iconic representation","","","","","","","This place covers: The graphical or iconic code is generated by a local system, a remote system or a principal. Examples: The graphical code is used to challenge a principal and check something he should know, typically by manipulation of symbols or elements of a drawing or variation of key arrangement on a virtual keyboard."
"G06F21/41","where a single sign-on provides access to a plurality of computers","","Authentication using certificates","G06F21/33","","","","This place covers: Using a third party performing a mapping of the credentials of the user for a first application to credentials valid for other applications. Examples: The third party is a password server. The third party is a smart card. Particular cases: The third party is the first application."
"G06F21/42","using separate channels for security data","","","","","","","This place covers: Examples: Authentication with portable phone, receive sms with password, connect via fixed telephone line using password. Voice call for authentication, server calls back terminal."
"G06F21/44","Program or device authentication","","Device authentication, i.e. authenticate client device independently of the user","G06F2221/2129","","","",""
"G06F21/445","{by mutual authentication, e.g. between devices or programs}","","Mutual authentication","H04L29/06816","","","",""
"G06F21/50","Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems","","Just-in-time application of countermeasuresMetering, i.e. counting events for security purposesClearing memory or data when detecting an attack e.g. to prevent the data from being stolenTime stamp","G06F2221/2125|G06F2221/2135|G06F2221/2143|G06F2221/2151","The difference between + and the others groups + (namely , +, + and +) may be formulated as:+: we would trust the code or system if it were not infected (we look for the infection as such)other groups + (see definition above): we don't trust the code or system (we make an assessment of the global code or system; we don't look for an infection as such)  (Protect user input by software means) and  (Protect user output by software means) are additionally used to distinguish documents dealing with securing user input/output, e.g. in banking systems / applicationsThe subclasses + are used in combination with this group.","G06F21/56|G06F21/50|G06F21/51|G06F21/52|G06F21/55|G06F21/57|G06F21/56|G06F21/50|G06F2221/031|G06F2221/032|G06F2221/03","","This place covers: Protecting computer platforms against harmful, malicious or unexpected behaviour or activities. This group is not strictly limited to software solutions."
"G06F21/51","at application loading time, e.g. accepting, rejecting, starting or inhibiting executable software based on integrity or source reliability","","Authenticating web pages","G06F2221/2119","","","","This place covers: Accept / reject loading of application: onto platform for later execution. into memory for immediate execution. from Loal storage Remove device (e.g. By downloading). Based on static features of the application when not being executed e.g.: Signature or certificate provided by application creator, provider or tester Integrity. Capability list. capabilities of application determined by analysis. An application is software distinct from firmware and os such as: Directly executable code (binary code) Interpretable programs (script language) Interpretable files such as html, word, etc. Documents Examples: Verify integrity or application origin (application creator, provider, or tester) by checking a signature, certificate, etc. of application. Verify integrity of application or application origin by transforming and reverse transforming the application:By analyzing user content, e.g. analyse relationship of websites referred to by a web page. Check application capabilities versus a predefined security policy."
"G06F21/52","during program execution, e.g. stack integrity {; Preventing unwanted data erasure; Buffer overflow}","","","","","","","This place covers: Intrusion detection at the single program level, i.e. detect intrusion of: A system by a single program. A single program. During execution of the single program e.g. by specifically monitoring execution of the single program at the single program level Examples: Transform by obfuscation means which do not add code. Modify code to avoid security issue when fault injection. Modify code to enforce security policy. Detect code injection"
"G06F21/53","by executing in a restricted environment, e.g. sandbox or secure virtual machine","","","","","","","This place covers: Intrusion detection at the environment level of the execution of the single program e.g.: Run program in secure, isolated environment (VM, sandbox), e.g. by modifying VM or sandbox to include special security measures Provide security measures in interface (library, API, OS) of program with its Environment, e.g.: Provide secure library or API interfacing the program Modify library, API or OS to include security measures Have OS service or library making security checks or running in protected environment Examples: by using virtual machine, sandbox, secure library or by isolating processes at operating system level"
"G06F21/54","by adding security routines or objects to programs","","","","","","","This place covers: Transformation by addition of code to Source code Executable program to be loaded or already loaded in memory for execution to ensure proper execution of program Examples: Add / modify code to detect fault injection by enforcing proper execution sequence Modify code to detect improper execution flow when code error Add code to detect software attacks Modify code to enforce security policy Add code to detect code tampering in memory Add dummy instructions for obfuscation purposes"
"G06F21/55","Detecting local intrusion or implementing counter-measures","","","","","","","This place covers: Intrusion detection at the level of the system independently of execution of one single program e.g. by monitoring execution of the whole system while running many programs."
"G06F21/552","{involving long-term monitoring or reporting}","","","","","","","This place covers: Monitor the system, user actions within the system, etc., analyze the monitoring data gathered during long term and take action. Examples: Determine normal user behaviour for later security issue detection Log security issue events for later action / risk assessment Collect system information and deduce security issue"
"G06F21/554","{involving event detection and direct action}","","If the monitoring and direct action is based on data obtained by long-term monitoring","G06F21/552","","","","This place covers: Monitor the system, user actions on the system, etc., immediately analyze the monitoring data gathered and directly take action. Examples: Detect abnormal user behaviour, security issue or physical attacks; and immediately react."
"G06F21/556","{involving covert channels, i.e. data leakage between processes  (inhibiting the analysis of circuitry or operation with measures against power attack G06F21/755)}","G06F21/755","","","","","","This place covers: A covert channel is defined as being a communication channel that allows a process to transfer information in a manner that violates the system's security policy. E.g.: software measures against: Intended malevolent internal signalling or communication between processes on system. Intended malevolent external signalling or communication by process on system. Accidental internal leakage of data between processes on system by storage or communication Accidental external leakage of data of process on system by storage or communication Accidental internal or external leakage of system or process state or behaviour Examples: Protect against physical (e.g. electromagnetic; non power consumption) monitoring to obtain information on data manipulated by the system or code executed by the system. Protect against fault attacks Data leakage between processes via common / non secure memory Secure data transfer within processes Hidden communication between processes by one process observing other process behaviour External data leakage by hidden communication Unwanted data leakage in programs Modify code to avoid information exposure in memory"
"G06F21/56","Computer malware detection or handling, e.g. anti-virus arrangements","","","","The difference between  and the others subgroups under  (namely , ,  and ) may be formulated as:: we would trust the code or system if it were not infected (we look for the infection as such).Other groups under  (see definition above): we don't trust the code or system (we make an assessment of the global code or system; we don't look for an infection as such).","G06F21/56|G06F21/50|G06F21/51|G06F21/52|G06F21/55|G06F21/57|G06F21/56|G06F21/50","Virus A malicious (i.e. intended to harm) executable code or script hidden or embedded in a normally non malicious data, code or system. It need not be self-replicating","This place covers: Examples: Protection against root kits by scanning for malwares at boot. Virus resistant computer by booting from authenticated read-only boot device, transfer accepted file types only. Determine malicious (child) processes by file generation time changes Remote control upon virus detection (i.e. cut communications). Send executable email contents to sacrificial server to verify execution for virus activity. Analyze file with respect to virus families, family based extraction. Trojans."
"G06F21/561","{Virus type analysis}","","","","","","","This place covers: Information relating to a specific type or family of viruses."
"G06F21/562","{Static detection}","","","","","","","This place covers: Detect presence of virus without executing directly or by emulation, except emulation for the purpose of higher level analysis (control code, data flow) Examples of such detections: Analyse source code or scripts. Execute intermediate compiled code and analyse. Compile and analyse. Disassemble binary code and analyse control flow or data flow and/or match execution code patterns without simulation of execution. Validate file formats. Verify based on file type."
"G06F21/563","{by source code analysis}","","If the source code is compiled and executed or emulated for analysis","G06F21/566","","","","This place covers: Starting point for analysis: source code, script or file type or format. The source code may be obtained by disassembly."
"G06F21/564","{by virus signature recognition}","","","","","","","This place covers: Concerns virus detection by binary or source code pattern matching or the process of enhancing the signature recognition procedure. Examples: By using virus binary code signature. By using a virus source code pattern."
"G06F21/565","{by checking file integrity}","","","","","","","This place covers: Examples: Detect change of files. Detect change of file portions."
"G06F21/566","{Dynamic detection, i.e. detection performed at run-time, e.g. emulation, suspicious activities}","","Access rights if detection based on access right violation","G06F2221/2141","Use additionally  (Test or assess a software) if detection at the level of execution of a single program.Use additionally  (Test or assess a computer or a system) if detection at system level (as opposed to the level of execution of a single program).","G06F2221/033|G06F2221/034","","This place covers: Examples: Execute directly or by emulation and observe effect by monitoring / limitation Emulation of code. Execution in sandbox / virtual machine. Monitoring / limiting Inputs/Outputs. Monitoring memory allocation / changes Encoding executable and decoding upon execution such that infection is detected at run time. Modifying execution such that infection is detected at run time."
"G06F21/567","{using dedicated hardware}","","If carried out on a separate, remote device (third party)Use of hardware tokens, smart cards or dongles","G06F2221/2115|G06F2221/2153","","","","This place covers: Use hardware specifically dealing with virus detection or removal. The hardware may be general purpose. Examples: Normal boot using a general purpose external storage means (e.g. USB stick) with anti-virus software. Use intermediate server for virus detection. Use dedicated, specialized hardware means for detecting virus. Use dedicated, specialized hardware means for detecting suspicious activity. Use dedicated, specialized hardware means for alerting user upon virus detection. Use dedicated, specialized hardware means for avoiding virus infection by e.g. write protection. Use dedicated, specialized hardware means for avoiding propagation by binary transmission."
"G06F21/568","{eliminating virus, restoring damaged files}","","","","","","","This place covers: Provision of software means to remove viruses or restore infected files. Examples: Restore system to earlier trustworthy state. Apply reverse behaviour of a detected virus in order to restore file/code. Observe potentially harmfull software on computer at runtime, remove its effects. Verify/scan files upon file access; replace file with clean file. Boot one OS to scan other OS for viruses and cleanup."
"G06F21/57","Certifying or maintaining trusted computer platforms, e.g. secure boots or power-downs, version controls, system software checks, secure updates or assessing vulnerabilities","","Non secure initialization, program loading or initiating without any security aspects, ","G06F9/4401|G06F9/445","","","","This place covers: Validate trusted platform configuration. Defeat computer security by installing software into RAM using peripheral DMA. Receive vulnerability alert, retrieve and install patch."
"G06F21/572","{Secure firmware programming, e.g. of basic input output system [BIOS]}","","","","","","","This place covers: Securely update, patch or load firmware or firmware modules. Examples: Authenticate firmware updates, patches or modules. Authenticate configuration file listing updates, modules to load. Authenticate key to allow firmware update. Authenticate firmware / configuration update program / command."
"G06F21/575","{Secure boot}","","","","","","","This place covers: Examples: Authenticate boot code(s) at start-up. Verify configuration at boot. Pre-boot authentication (user authentication or by using unlock code authentication). Disable boot device Boot read-only system. Security action (e.g. Malware scan) by booting safe system in dual boot system. Load high security barrier code."
"G06F21/577","{Assessing vulnerabilities and evaluating computer system security}","","Testing software, ","G06F9/44589|G06F11/36","Use additionally  (Test or assess a software) or  (Test or assess a computer or a system) to distinguish between assessment of computer or software.","G06F2221/033|G06F2221/034","","This place covers: Examples: Analyze or test a computer or a program against vulnerabilities or threats at computer level or at program level. Analyze or test a computer or a program for security relevant capabilities."
"G06F21/60","Protecting data","","Recurrent verification","G06F2221/2139","","","DataAlso includes programs","This place covers: Authorizing access to an executable program using techniques specific to executable programs (e.g. manipulation of the code, manipulation of the instruction flow or data flow, security routine in the program to verify a code in a dongle) Protecting data in an environment substantially within the data owner's control (or in a non-hostile environment). The term ""hostile environment"" means data and operational environment of the data are controlled by different entities. Example: non-hostile environment: FT(Financial Times) has a server where users who pay get a username+password to access FT-newspaper-articles on the server. FT has full control over the server, the data is stored on the server, and therefore the data is not in a hostile environment."
"G06F21/602","{Providing cryptographic facilities or services}","","For hardware details","G06F21/72","","","",""
"G06F21/608","{Secure printing}","","Scanning, transmission or reproduction of documents","H04N1/32144","","","","This place covers: The protection mostly relates to the secrecy, confidentiality and integrity of printed data. Examples: Ensure a printed document is authentic copy of electronic document by protecting the transmission between the host and the printer. Selected for print is encrypted at the user's computer and decrypted at the printer upon user authentication at the printer, e.g. using a password or a badge. Ensure document can only be printed out by the intended user, e.g. by password input at printer or authentication using a smartcard containing the private key of the user."
"G06F21/62","Protecting access to data via a platform, e.g. using keys or access control rules","","File encryption, i.e. use of unusual or unconventional encryption techniquesTime limited access e.g. to dataAccess rightsinheriting rights or properties, e.g. propagation of permissions or restrictions across a hierarchyLocking filesRestricted operating environment, e.g. creating a user-specific working environment, parental control","G06F2221/2107|G06F2221/2137|G06F2221/2141|G06F2221/2145|G06F2221/2147|G06F2221/2149","","","",""
"G06F21/6209","{to a single file or object, e.g. in a secure envelope, encrypted and accessed using a key, or with access control rules appended to the object itself}","","","","","","","This place covers: Object access right control is performed by a dedicated application or function (separate from an optional access right control offered by the file system. Access control based on a file-system goes to   and subgroups). Access rights or keys, and a security function to apply the rights, are associated directly to an individual file."
"G06F21/6218","{to a system of files or objects, e.g. local or distributed file system or database}","","","","","","","This place covers: Examples: Access rights in databases provided by user capability lists. How the file system or the operating system enforce access rights."
"G06F21/6227","{where protection concerns the structure of data, e.g. records, types, queries}","","Information retrieval (from databases and internet)","G06F16/00","","","","This place covers: Examples: The security is at the level of records in a structured file or database, there is a field for each record dedicated to protecting this record and containing for instance a security level, access rights or encryption keys. The structure of the database (tables, records, views, queries, stored procedures...) is the target of the security, and by doing this the data is protected. Particular case : if the protection is ""outside"" the database, e.g. rules stored outside the DB and enforced when the DB is queried, because ""outside"" becomes ""inside"" if the security is based on database-queries."
"G06F21/6236","{between heterogeneous systems}","","","","","","","This place covers: Problem to be solved: Maintain security when exchanging data between systems with different (heterogeneous) security architectures."
"G06F21/6245","{Protecting personal data, e.g. for financial or medical purposes}","","","","","","Personal dataany information relating to an identified or identifiable natural person","This place covers: Problem to be solved: Confidentiality of the personal data. General protection of personal data (e.g. encrypting all data, access rules, ...)."
"G06F21/6254","{by anonymising data, e.g. decorrelating personal data from the owner's identification}","","","","","","","This place covers: Protecting where the data may be accessed without revealing the person's identity, e.g. by anonymising or decorrelating"" Personal Data is related to a person via a link. Without the link, the data is no longer personal private data, and needs no further protection. Decorrelating or anonymising means partly or completely removing the link. Examples: A hospital-server with special techniques to protect the confidentiality of patient-data, where the patient data and the sickness data are stored separately."
"G06F21/629","{to features or functions of an application}","","For access to hardware functions","G06F21/70","","","","This place covers: Protecting functions or features provided by specific software application like a word processor, an email client, a calendar application. Examples: Restricting the printing function in a word processor based on access rights. Restricting entry editing in a shared calendar application."
"G06F21/64","Protecting data integrity, e.g. using checksums, certificates or signatures","","","","","","","This place covers: Protection of the integrity of data only. Example: A contract between two individuals where the integrity of the contract is protected. Particular case : If the code is not executed but transferred for collaborative programming. Protection of the integrity of data only. Examples: A contract between two individuals where the integrity of the contract is protected."
"G06F21/645","{using a third party}","","","","","","","This place covers: Example: A notary certifies that the contract (file) is the original contract (file)."
"G06F21/70","Protecting specific internal or peripheral components, in which the protection of a component leads to protection of the entire computer","","Just-in-time application of countermeasures","G06F2221/2125","","","","This place covers: The hardware itself of the component must be protected; Usage of dedicated hardware to secure an entire platform, authentication, a software or data is not enough to classify here; In most cases, it is particular hardware that is protected, but a hardware solution to protecting data would also be classified here; The protected asset and/or the countermeasure to be implemented in hardware."
"G06F21/74","operating in dual or compartmented mode, i.e. at least one secure mode","","","","","","","This place covers: Two modes of operation at processor level. Examples: 68020 supervisor mode / user mode."
"G06F21/75","by inhibiting the analysis of circuitry or operation","","Dummy operation e.g. a processor performs dummy operations as countermeasure to differential power analysisCountermeasures at the cryptographic algorithm level against power analysis attacks, e.g. modifying the S-Box layout in a DES algorithm","G06F2221/2123|H04L9/003","","","","This place covers: Examples: to counter reverse engineering; Countermeasure against analyzing microprocessor or other components to infer which instructions are ran and retrieve statistical information about the arguments of the instructions."
"G06F21/755","{with measures against power attack}","","","","","","","This place covers: Software and hardware measures against monitoring of power consumption to obtain information about the system such as differential power attack or simple power attack. Examples: Hide boot order. Multiple processors to hide power consumption. Algorithm design for general purpose processor. Use special hardware logic. Execute dummy instructions. Randomize execution flow. Change instruction clocking. Hide memory / register accesses."
"G06F21/77","in smart cards","","","","","","","This place covers: Only for protection of the smartcard as such."
"G06F21/78","to assure secure storage of data  (address-based protection against unauthorised use of memory G06F12/14; record carriers for use with machines and with at least a part designed to carry digital markings G06K19/00)","G06F12/14|G06K19/00","Chip on media","G06F2221/2121","","","",""
"G06F21/79","in semiconductor storage media, e.g. directly-addressable memories","","","","","","",""
"G06F21/80","in storage media based on magnetic or optical technology, e.g. disks with sectors  (preventing unauthorised reproduction or copying of disc-type recordable media G11B20/00)","G11B20/00","","","","","",""
"G06F21/805","{using a security table for the storage sub-system}","","","","","","","This place covers: Examples: Access Control Lists stored in a disk controller."
"G06F21/83","input devices, e.g. keyboards, mice or controllers thereof","","Biometric input devices","G06F21/32","","","","This place covers: Examples: Keyboard with password locking mechanism embedded in the keyboard."
"G06F21/84","output devices, e.g. displays or monitors","","","","","","","This place covers: Examples: Protecting data shown on a display. Hardware solution for protecting displayed data."
"G06F21/85","interconnection devices, e.g. bus-connected or in-line devices","","","","","","","This place covers: Examples: Encryption circuit between motherboard and hard-disk. Device between computer components allowing/banning interconnections therebetween in accordance with user IDs; user-specific hardware configuration."
"G06F21/86","Secure or tamper-resistant housings","","Clearing memory, e.g. to prevent the data from being stolen","G06F2221/2143","","","","This place covers: Housing resisting tampering or housing with tamper detection means. The protection takes place at the housing level. Examples: PC with housing-open detection switch. Tamper resistant circuit."
"G06F21/87","by means of encapsulation, e.g. for integrated circuits","","","","","","","This place covers: The protection takes place at the chip level."
"G06F21/88","Detecting or preventing theft or loss","","If the sent message is not to trigger hardware lock but to force authentication","G06F21/305","","","","This place covers: Example: Hardware locks itself / is locked when outside of RF-field. Particular cases: Send a hardware locking message to stolen device."
"G06F30/00","Computer-aided design [CAD]","","","","","","DesignDescription of technical parameters or a virtual model of a technical arrangement; does not cover aesthetic aspects; not to be confused with the physical object.VerificationDetermining the correct functioning of a design; not to be confused with testing of a physical object.SimulationDetermining technical properties and behaviour of an entity by performing a virtual simulation of a model in a computer, possibly by using specifically adapted hardware.ModelA computer readable description of an entity, defining or implying technical properties.","This place covers: Arrangements and methods specially adapted for automated execution for design of technical entities Simulation for design purposes of technical entities"
"G06F30/10","Geometric CAD","","Layout of circuits; design at the physical level, ","G06F30/347|G06F30/39","","","","This place covers: Design of geometrical structures of technical entities, e. g. shape, dimensions, etc., using CAD Simulation for the design thereof"
"G06F30/12","characterised by design entry means specially adapted for CAD, e.g. graphical user interfaces [GUI] specially adapted for CAD","","Input arrangements or combined input and output arrangements for interaction between user and computerInteraction techniques based on graphical user interfaces [GUI]","G06F3/01|G06F3/048","","","","This place covers: Software-implemented user interfaces specially adapted for geometric CAD Hardware input/output means such as virtual reality, specially adapted for geometric CAD"
"G06F30/13","Architectural design, e.g. computer-aided architectural design [CAAD] related to design of buildings, bridges, landscapes, production plants or roads","","","","","","",""
"G06F30/15","Vehicle, aircraft or watercraft design","","","","","","","This place covers: Structural design of vehicles or components or systems thereof using CAD Simulation for the design thereof Note: The term ""vehicles"" is to be understood broadly and covers land, air, space, naval or other types of vehicles."
"G06F30/17","Mechanical parametric or variational design","","","","","","","This place covers: CAD for the design of: entities comprising moving parts entities comprising alternative configurations engineering tolerances, e.g. mechanical component tolerance Simulation for the design thereof"
"G06F30/23","using finite element methods [FEM] or finite difference methods [FDM]","","","","","","",""
"G06F30/27","using machine learning, e.g. artificial intelligence, neural networks, support vector machines [SVM] or training a model","","Machine learning per se","G06N20/00","","","","This place covers: Using machine learning for the purpose of CAD."
"G06F30/30","Circuit design","","Functional testingTesting of electronic circuits","G06F11/26|G01R31/28","","","","This place covers: Using CAD for the design of circuits Simulation of the design thereof CAD relating to superconducting circuits or circuits such as rapid single flux quantum (RSFQ) circuits or other circuits using Josephson junctions Note: The term ""circuit"" is to be understood broadly and covers electric, electronic, and integrated circuits as well as circuits on a printed circuit board [PCB]."
"G06F30/36","Circuit design at the analogue level","","","","","","","This place covers: CAD tools working at the analogue level. Note:  The nature of the designed circuit (e.g. a digital circuit) is not decisive: if the CAD tool operates over continuous values (e.g. current, voltage, frequency), the subject-matter is to be classified here."
"G06F30/39","Circuit design at the physical level  (physical level design for reconfigurable circuits G06F30/347)","G06F30/347","","","","","","This place covers: CAD tools operating over the physical parameters (geometry, routing, and sizing) of the circuit, considering the electrical characteristics of said circuit."
"G06F30/392","Floor-planning or layout, e.g. partitioning or placement","","","","","","IP block, IP coreThe terms IP block and IP core are used as synonyms and relate to reusable unit of logic, cell, or integrated circuit (commonly called a ""chip"") layout design that is the intellectual property of one party. The term is derived from the licensing of the patent and/or source code copyright that exist in the design. IP cores can be used as building blocks within application-specific integrated circuit (ASIC) designs or field-programmable gate array (FPGA) logic designs during the floorplanning design stage of a circuit.","This place covers: CAD tools for use during the floorplanning design stage of a circuit.   Note: The term ""floorplan"" is used here in the context of circuit design with its generally accepted meaning and covers an early stage in the hierarchical approach to integrated circuit design regarding optimally placing a given set of circuit modules. Floorplanning covers taking in some of the geometrical constraints in a design such as bonding pads for off-chip connections line drivers which often have to be located as close to bonding pads as possible minimum chip area needed to fit in the required number of pads; predetermined area blocks such as intellectual property blocks (IP-blocks) limitations such as permitting no routing of signals directly above an IP block Floorplan optimisation subject to various constraints and requirements of optimisation, e.g. block areas, aspect ratios, estimated total measure of interconnects, etc."
"G06F40/00","Handling natural language data  (speech analysis or synthesis, speech recognition G10L)","G10L","Input/output for Oriental charactersPredictive inputDigital ink, low-level/hardware aspects thereofPrinting (job control, etc.)Parser generation for computer codeTranslation, e.g. compilation, of computer codeParsing of computer codeMultilingual user interfacesText retrieval, creation of semantic toolsThesaurus (creation for retrieval)Retrieval of semistructured dataWebsite content managementTape/Label printers (hardware)Translation to/from Braille or sign languageCharacter generators for displaysCompression/encoding of unstructured text","G06F3/018|G06F3/0237|G06F3/04883|G06F3/12|G06F8/37|G06F8/40|G06F8/427|G06F9/454|G06F16/30|G06F16/374|G06F16/80|G06F16/958|B41J3/4075|G09B21/00|G09G5/22|H03M7/30","","","","This place covers: Text and natural language processing, Natural language understanding and translation, Processing of markup language, Spreadsheets."
"G06F40/12","Use of codes for handling textual entities","","Compression","H03M7/30","","","","This place covers: Manipulation of document(s) content or structure where the visual appearance or natural-language content does not play a role."
"G06F40/14","Tree-structured documents  (parsing G06F40/205; validation G06F40/226)","G06F40/205|G06F40/226","Retrieval of semi-structured dataCompression","G06F16/80|H03M7/30","","","","This place covers: Processing of tree-structured text documents, where the tree structure and the textual nature are both significant."
"G06F2115/08","Intellectual property [IP] blocks or IP cores","","","","","","IP block, IP coreThe terms IP block and IP core are used as synonyms and relate to reusable unit of logic, cell, or integrated circuit (commonly called a ""chip"") layout design that is the intellectual property of one party. The term is derived from the licensing of the patent and/or source code copyright that exist in the design. IP cores can be used as building blocks within application-specific integrated circuit (ASIC) designs or field-programmable gate array (FPGA) logic designs during the floorplanning design stage of a circuit.","This place covers: CAD tools specifically adapted for using IP blocks or IP cores."
"G06F2221/03","Indexing scheme relating to G06F21/50, monitoring users, programs or devices to maintain the integrity of platforms","G06F21/50","","","This group and its lower subgroups are designed for use in combination with .","G06F21/50","",""
"G06F2221/07","Indexing scheme relating to G06F21/10, protecting distributed programs or content","G06F21/10","","","This group and its lower subgroups are primarily designed for use in combination with , they could also be used in combination with  or groups under  if such a combination make sense.The general rule is to limit to the best-suited group but there could be a plurality of groups for a document if that document discloses many relevant aspects when taken separately (e.g. a document having isolated disclosures) or in combination, in particular when a combination of groups is more suited to reflect the disclosure.Only classify documents here if a relevant technical implementation of the concept corresponding to the class is disclosed. Example: the group  is not intended to be used to classify a document disclosing only the fact that the content could be edited or that the rights attached to content are modified. Only document disclosing a technical implementation of the way to achieve the content edition will be classified here. Documents disclosing a ""basic"" technical implementation or an implementation disclosed in more much details in other known documents will not be classified.","G06F21/10|G06F21/105|G06F21/12|G06F2221/0724","",""
"G06F2221/0704","Device","","","","","","","This place covers: The license is bound to one rendering device the user uses e.g. mp3-player, computer, mobile phone, ..."
"G06F2221/0706","Domain","","","","","","","This place covers: The license is bound to a group or type of rendering devices the user uses e.g. list, type, capabilities of devices... something the device belongs to"
"G06F2221/0708","Location","","","","","","","This place covers: The license is bound to a location"
"G06F2221/0711","Token","","","","","","Tokennot rendering the content","This place covers: The license is bound to something the user has e.g. token, mobile phone, recording medium, USB-stick, ... The content can be transferred from one device to another."
"G06F2221/0713","User","","","","","","","This place covers: Binding the content to a user."
"G06F2221/0715","Characteristics","","","","","","","This place covers: The license is bound to characteristics of the user e.g. biometrics, fingerprint, iris, behaviour."
"G06F2221/0717","Domain","","","","","","","This place covers: The license is bound to a group the user belongs to e.g. domain, family, friends, university, library, company, ..."
"G06F2221/072","Knowledge","","","","","","","This place covers: The license is bound to something the user knows e.g. password..."
"G06F2221/0724","Editing","","","","","","","This place covers: Any editing, modifying the content by the user."
"G06F2221/0728","Conversion","","","","","","","This place covers: Converting content for different system requirements e.g. different Digital Right Management systems, less powerful device, interoperability, compatibility..."
"G06F2221/0731","On user or administrative requirements","","","","","","","This place covers: User defined content, specifically created on user-request or business requests."
"G06F2221/0733","Watermark","","","","","","","This place covers: Watermark identifying e.g. content, user, device, ..."
"G06F2221/0735","Restriction at operating system level","","","","","","","This place covers: Usage restrictions implemented at Operating System to prevent e.g. access to registers, clipboard, APIs etc."
"G06F2221/0737","Traceability","","","","","","","This place covers: Content traceability."
"G06F2221/074","Tracing pattern recognition","","","","","","","This place covers: Content can be traced without watermarks, e.g. by looking for typical pattern or properties of the specific content."
"G06F2221/0742","Enhanced product","","","","","","","This place covers: E.g. same copy for demo version / product version."
"G06F2221/0744","Unique instance  (G06F2221/0702 takes precedence)","G06F2221/0702","","","","","","This place covers: Different protection for each instance of software, e.g. creating hardware/user specific versions, binding software to specific terminals or devices"
"G06F2221/0746","Emerging technologies","","","","","","","This place covers: DRM techniques that may trigger specific technology development in Digital Right Management."
"G06F2221/0748","Hiding","","","","","","","This place covers: Hiding content, license or key e.g. inside the content, the file-system, at Operating System level, by obfuscating."
"G06F2221/0753","Distribution","","","","","","","This place covers: Techniques of key distribution specifically designed for Digital Right Management implementation."
"G06F2221/0755","Generation","","","","","","","This place covers: Techniques of key generation specifically designed for Digital Right Management implementation."
"G06F2221/0759","Conversion","","","","","","","This place covers: Converting a license for e.g. different Digital Right Management system, language, version, user needs, less powerful device, interoperability, compatibility..."
"G06F2221/0764","Grace period","","","","","","","This place covers: Grace period, e.g. in offline systems the user should be able to continue for some time even if license is expired."
"G06F2221/0766","Language","","","","","","","This place covers: How rights are defined e.g. rights definition language, grammar, syntax, semantics, graphical representation of rights, parser, right consistency..."
"G06F2221/0768","Editing","","Superdistribution of content","G06F2221/0791"," has precedence.","G06F2221/0791","","This place covers: Modifying or creating a license for e.g. re-distributing rights, adjustment to user-needs, license changes, business requirements, circumstances, ... also including shareware where the license is updated."
"G06F2221/0771","Revocation","","","","","","","This place covers: Methods for revoking licenses, e.g. preventing licenses to be restored again from backup, looking after copies of the license to delete all instances of the license."
"G06F2221/0773","Recurrent authorisation","","","","","","","This place covers: Performing recurrent authorisation checks, not just at installation or loading time."
"G06F2221/0775","Logging","","","","","","","This place covers: Logging, metering or counting e.g. copy, usage, play, transfer, move, delete, modification, time... (license logging also falls under this definition, because for logging a license is just content)."
"G06F2221/0777","Return","","Tools for software licence management or administration","G06F21/105","","","","This place covers: The content or license is given back from the user/client, e.g. for floating licenses, check-in/check-out, renting, etc."
"G06F2221/0782","Backup or restore","","","","","","","This place covers: Techniques for allowing, supporting or preventing backup/restore specifically designed for DRM."
"G06F2221/0784","Fragments","","","","","","","This place covers: Transferring fragments of content / licence for: Payment: shareware, part of the content/license is send after payment. Optimisation: incremental, differential, update... The fragment alone is not sufficient for rendering"
"G06F2221/0786","Indirect via third party","","","","","","","This place covers: Third party with special Digital Right Management aspects (e.g. third party generates and stores part of the key). The third party is not only transferring data."
"G06F2221/0788","Peer-to-Peer [P2P]","","","","","","","This place covers: Digital Right Management systems especially adapted to peer-to-peer solutions."
"G06F2221/0791","Superdistribution","","License editing","G06F2221/0768"," is frequently implied and should not be given ( has precedence).","G06F2221/0768|G06F2221/0791","","This place covers: Permitting further distribution of digital content, e.g. from user to user, but still maintaining some control over re-distributed copies. License editing is frequently implied and the corresponding keyword is not necessary."
"G06F2221/0793","Synchronisation","","","","","","","This place covers: Synchronisation between : (License)server: master/slave; or Between local and distant license. Comprises also offline usage."
"G06F2221/0795","Transaction with ACID [Atomicity, Consistency, Isolation and Durability] properties","","","","","","","This place covers: In an atomic transaction, a series of operations either all occur, or all do not occur (wish of content owners)."
"G06F2221/0797","using dedicated hardware at the client","","","","","","",""
"G06F2221/21","Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity","G06F21/00","",""," Secondary and transversal aspects specific to + Secondary and transversal aspects specific to +","G06F2221/03|G06F21/50|G06F2221/07|G06F21/10","","This place covers: Secondary and transversal aspects to  ."
"G06F2221/2101","Auditing as a secondary aspect","","","","","","","This place covers: Logging history of events."
"G06F2221/2103","Challenge-response","","Authentication ","G06F21/30","","","",""
"G06F2221/2105","Dual mode as a secondary aspect","","","","","","","This place covers: Computer working in two or more modes, e.g. protecting platform using secure/non secure mode, user/administrator mode."
"G06F2221/2107","File encryption","","","","","","","This place covers: Use of unusual or unconventional encryption techniques."
"G06F2221/2109","Game systems","","Coin-freed apparatus for games, toys, sports or amusements","G07F17/32","","","","This place covers: Specific solutions for security of games within the context of  , e.g. special memory game cartridge, casino machines."
"G06F2221/2115","Third party","","","","","","","This place covers: When the involvement of a third party is essential."
"G06F2221/2117","User registration","","","","","","","This place covers: Use of unusual or unconventional user registration."
"G06F2221/2119","Authenticating web pages, e.g. with suspicious links","","Protecting computer platforms against harmful, malicious and unexpected behaviours or activities at application loading time","G06F21/51","","","",""
"G06F2221/2123","Dummy operation","","","","","","","This place covers: e.g. a processor performs dummy operations as countermeasure to differential power analysis."
"G06F2221/2127","Bluffing","","","","","","","This place covers: e.g. pretending to have connected a user to a real node when in fact the connection is to a dummy."
"G06F2221/2135","Metering","","Long-term monitoring or reportingMonitoring involving event detection and direct actionAuditing","G06F21/552|G06F21/554|G06F2221/2101","","","","This place covers: Counting events for security purposes."
"G06F2221/2139","Recurrent verification","","","","","","","This place covers: Periodically carrying out authorization checks after initial installation or loading."
"G06F2221/2145","Inheriting rights or properties, e.g., propagation of permissions or restrictions within a hierarchy","","Protecting data against unauthorised access or modification by protecting access to a system of files or objects","G06F21/6218","","","",""
"G06F2221/2147","Locking files","","Protecting data against unauthorised access or modification by protecting access","G06F21/62","","","","This place covers: Concurrent access, collaborative control, e.g. when two users with different access rights concurrently edit the same document."
"G06F2221/2149","Restricted operating environment","","","","","","","This place covers: E.g. creating a user-specific working environment, parental control."
"G06F2221/2153","Using hardware token as a secondary aspect","","","","","","","This place covers: Use of hardware tokens, smart cards or dongles."
