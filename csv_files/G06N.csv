"cpc_code","title","title_cpc_codes","informative_references","informative_references_cpc_codes","special_rules","special_rules_cpc_codes","glossary_of_terms","definition_statement"
"G06N","COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS","","","","","","","This place covers: Computing systems where the computation is not based on a traditional mathematical model of computer"
"G06N3/00","Computing arrangements based on biological models","","Computer systems using knowledge based modelsProbabilistic networksComputers systems using fuzzy logicMachine LearningAnalogue computers simulating functional aspects of living beingsMemories whose operation depends upon chemical changeBioinformatics","G06N5/00|G06N7/005|G06N7/02|G06N20/00|G06G7/60|G11C13/02|G16B","","","","This place covers: Computing systems where the computation is based on biological models (brains, intelligence, consciousness, genetic reproduction) or is using physical material of biological origin (biomolecules, DNA, biological neurons, etc.) to perform the computation. The computation can be digital, analogue or chemical in nature."
"G06N3/002","{Biomolecular computers, i.e. using biomolecules, proteins, cells  (using DNA G06N3/123; using neurons G06N3/061)}","G06N3/123|G06N3/061","Computation based on Inorganic chemicals","G06N99/007","","","","This place covers: Computers using actual physical material of biochemical origin or material as used in carbon-based living systems, i.e. biomolecules, proteins, cells or other biochemicals to perform computation."
"G06N3/004","{Artificial life, i.e. computers simulating life}","","Biological life forms that are created involving biological genetic engineering, e.g. clones","C12N15/00","","","Alife Artificial life","This place covers: Creation of synthetic life forms that are based on models of or are inspired by carbon-based life forms but are actually implemented on/or controlled by standard silicon-based computers."
"G06N3/006","{based on simulated virtual individual or collective life forms, e.g. single ""avatar"", social simulations, virtual worlds or particle swarm optimisation}","","Computer gamesInformation retrievalComputer Aided Design [CAD]Collaborative systems - GroupwareImage processing for animationsTelecommunications for virtual worlds","A63F13/00|G06F16/00|G06F30/00|G06Q10/00|G06T13/00|H04L29/06034","","","","This place covers: Software simulations on standard silicon-based digital computers of systems exhibiting behaviour normally ascribed to life forms."
"G06N3/008","{based on physical entities controlled by simulated intelligence so as to replicate intelligent life forms, e.g. robots replicating pets or humans in their appearance or behavior}","","Toys or dolls, Industrial robots or mechanical grippers","A63H3/00|A63H11/00|B25J19/00","","","","This place covers: Physical computer controlled mechanical devices emulating/simulating existing biological life forms mainly implemented as physical robots in the form of animals (pets) or humans (humanoids or androids). These robots can be standalone or work in groups (e.g. Robocup team of robotic football players)."
"G06N3/02","using neural network models","","","","","","","This place covers: Computation simulating or emulating the functioning of biological brains mainly implemented in non-biological material, i.e. electronics or optical material. It can be in digital electronic or analogue electronic or biological technology."
"G06N3/04","Architectures, e.g. interconnection topology","","","","","","","This place covers: The specific architecture or layout of the neural network, how the neurons are interconnected. For the different architectures see the titles of the different subgroups. Specific technologies for realizing these architectures are classified in  , learning methods in the subgroups of   and for the physical realization in the subgroups of  ."
"G06N3/0409","{Adaptive resonance theory [ART] networks}","","","","","","","This place covers: Adaptive Resonance Theory (ART). Adaptive Resonance Theory was a short live method of neural networks developed by Grossberg and Carpenter. This subgroup contains only documents on ART by Grossberg and Carpenter (obsolete technology)."
"G06N3/0418","{using chaos or fractal principles}","","Chaos models per se","G06N7/08","","","","This place covers: Neural networks using some form of chaos or fractal technology or methods"
"G06N3/0427","{in combination with an expert system}","","Experts systems; Artificial intelligence per se","G06N5/04","","","","This place covers: Combinations of neural network technology and expert system technology. Contains documents where expert systems and neural networks work together on the same level and also where expert systems are used to construct or control a neural network."
"G06N3/0436","{in combination with fuzzy logic}","","Fuzzy logic per se","G06N7/02","","","ANFISAdaptive Neuro-Fuzzy Inference Systems","This place covers: Combinations of neural network technology and fuzzy logic system technology. Contains documents where fuzzy logic and neural networks work together on the same level and also where fuzzy logic systems are used to construct or control a neural network"
"G06N3/0445","{Feedback networks, e.g. hopfield nets, associative networks}","","","","","","","This place covers: Neural networks involving connections from the output of a neural network to the inputs of the same neural network."
"G06N3/0454","{using a combination of multiple neural nets}","","","","","","","This place covers: Architecture of multiple neural networks can be connected in a parallel or in a series fashion. They can cooperate on the same level or one neural network can control other neural network. Parallel neural networks can also be used for fault tolerance when connecting to a voting system. Several neural networks can also be trained in a different ways or with different training examples and then combined in parallel in order to increase the reliability or accuracy."
"G06N3/0463","{Neocognitrons}","","","","","","","This place covers: Neocognitrons are an unique and specific architecture of neural network charaterized by its name. The neocognitron is a hierarchical multilayered neural network and is a natural extension of cascading models. In the neocognitron, multiple types of cells such as S-cells and C-cells are used to perform recognition task. Contains only documents if the type of neural network is specifically called neocognitron."
"G06N3/0472","{using probabilistic elements, e.g. p-rams, stochastic processors}","","Chaotic determination of the weightsNeural network in combination with fuzzy logicProbabilistic functions not exclusively used for neural networks","G06N3/0418|G06N3/0436|G06N7/005","","","","This place covers: Neural networks having as special feature that the neurons individually or the weights or the architecture as a whole has a probabilistic or statistical aspect."
"G06N3/0481","{Non-linear activation functions, e.g. sigmoids, thresholds}","","","","","","","This place covers: All aspects of non-linear activation functions used in neurons, e.g. sigmoids, simple stepwise threshold functions, approximated sigmoid functions Only aspects of the non-linear activation function."
"G06N3/049","{Temporal neural nets, e.g. delay elements, oscillating neurons, pulsed inputs}","","","","","","","This place covers: Neurons or neural networks having a temporal aspect e.g. spiking neurons or neural networks where the time-like dynamics are a specific aspect of the invention This can be in digital but often in analogue technology. These neurons are meant to be a more realistic simulation of real biological neurons"
"G06N3/06","Physical realisation, i.e. hardware implementation of neural networks, neurons or parts of neurons","","","","This head subgroups should contain no documents, all documents should fall in one of its lower subgroups","","","This place covers: The technology used to physically construct the neurons or neural network : digital electronics, analog electronics, biochemical elements, optical elements"
"G06N3/061","{using biological neurons, e.g. biological neurons connected to an integrated circuit}","","Biomolecular computers","G06N3/002","","","","This place covers: Using real biological neurons from a living being implemented on a substrate. These neurons can be externally activated and read-out. The interconnections can be fixed or the can be allowed to grow and evolve."
"G06N3/063","using electronic means","","Neurons implemented using standard electronic digital computers","G06N3/10","","","","This place covers: Neurons or interconnections implemented in dedicated digital electronics."
"G06N3/0635","{using analogue means}","","Analog electronic computers in general","G06G7/00","","","","This place covers: Neurons or interconnections implemented in dedicated analog electronics."
"G06N3/067","using optical means","","Optical computers in general, ","G06E1/00|G06E3/00","","","","This place covers: Neurons or interconnections implemented in dedicated optical components.."
"G06N3/0675","{using electro-optical, acousto-optical or opto-electronic means}","","Hybrid optical computers in general","G06E3/00","","","","This place covers: Neurons or neural networks using electro-optical, acousto-optical or opto-electronic components."
"G06N3/08","Learning methods","","","","","","","This place covers: Means and methods of training or learning the neural networks. For specific training methods or algorithms see the different subgroups."
"G06N3/082","{modifying the architecture, e.g. adding or deleting nodes or connections, pruning}","","","","","","","This place covers: During the learning or training process of the neural network not only are the weights of the synapses changed but also is the architecture of the neural network changed. This can involve adding/deleting neurons or adding/deleting connections. between the neurons. When during the training process it becomes clear that the size/capacity of the neural network is not sufficient, additional neurons or connections can be added to the network after which the training can resume. When it is found that certain neurons are not used or have no influence, they can be removed (pruning)."
"G06N3/084","{Back-propagation}","","","","","","","This place covers: Training method whereby on the synapses of the neurons are adapted depending on the difference between the actual output of the neural network and the wanted output. This difference is used to adapt the weights of the synapses with an mathematical method that back-propagates form the higher layers to the lower layers of the neural network. Mainly used in multilayer neural networks. This implies a form of supervised learning."
"G06N3/086","{using evolutionary programming, e.g. genetic algorithms}","","Genetic algorithms as such","G06N3/126","","","","This place covers: The use of genetic algorithms for creating through a process of reproduction, mutation and fitness function an optimally functioning neural network using evoluationary techniques such as evolutionary programming, genetic algorithms, genetic programming, evolution startegies, etc."
"G06N3/088","{Non-supervised learning, e.g. competitive learning}","","","","","","","This place covers: Learning without direct supervision from unlabelled data. Neural networks are created and then it is observed how they function in the real world, as a result of the global functioning is the neural network further adapted. No sets of training input pairs are necessary."
"G06N3/10","Simulation on general purpose computers","","Computer simulations in general","G06F30/00","","","","This place covers: Neural networks not implemented in specific special purpose electronics but simulated by a program on a standard general purpose digital computer"
"G06N3/105","{Shells for specifying net layout}","","General graphical user interfacesProgram for computer aided design","G06F3/048|G06F30/00","","","","This place covers: Specific software for specifying or creating neural networks to be simulated on a general purpose digital computer. Specific graphical user interfaces for this application."
"G06N3/12","using genetic models","","Genetic algorithms for training neural networks","G06N3/086","","","","This place covers: Computation based on the principles of biological genetic processing (mutation, recombination, reproduction, selection of the fittest)."
"G06N3/123","{DNA computers, i.e. information processing using biological DNA}","","Biological genetic engineering in generalComputer memory using DNA","C12N15/00|G11C13/02","","","","This place covers: Using actual biological DNA molecules in test tubes. The problem is transcribed onto real DNA, biological reproduction, crossover, mutation is performed. The fitness is tested, the best scoring DNA molecules are selected and used for further iterative processing until the optimally performing DNA molecule is retrieved and the information on this DNA molecule is read out and transcribed back to a readable result."
"G06N3/126","{Genetic algorithms, i.e. information processing using digital simulations of the genetic system}","","","","","","","This place covers: Software simulations using the principles of mutation, crossover as exhibited in real biological genetic systems in the reproduction of biological cells or living beings e.g. humans. This process involves the creation of a number of possible solutions, testing the different solutions (fitness), selecting the best performing ones, starting from these create a new set of possible solutions using reproduction and mutation, and reiterate through this process until an optimal or sufficiently performing solution is found."
"G06N5/00","Computing arrangements using knowledge-based models","","Information retrieval; Database structures therefor; File system structures therefor","G06F16/00","","","knowledge baseset of representations of facts about the system to be controlled and its environmentknowledge-based agenta software module that uses a knowledge base to implement control decisions","This place covers: Computer systems using knowledge bases or creating knowledge bases. In particular, specific subjects are classified in the subgroups as it follows: Knowledge representation is classified in group  ; Use of knowledge bases for reasoning is classified in group  ."
"G06N5/003","{Dynamic search techniques; Heuristics; Dynamic trees; Branch-and-bound}","","","","","","","This place covers: Systems using knowledge empirically, Heuristics. Systems based on empirical models are normally used when classic methods fail to find an exact solution in a short time"
"G06N5/006","{Automatic theorem proving}","","","","","","","This place covers: Automatic theorem proving; constraint satisfaction; probability consistency check in a decision problem"
"G06N5/02","Knowledge representation","","indexing in information and retrieval","G06F16/00","","","","This place covers: Knowledge based systems defined by the specific knowledge representation formalisms, knowledge engineering, knowledge acquisition and extraction, update of knowledge base, maintenance."
"G06N5/027","{Frames}","","","","Rule systems for specific applications are classified in the field of application, unless the invention is still about the rules formalism and/ or extraction and maintenance process itself.","","","This place covers: Knowledge systems using frames as knowledge representation including attributes and slots"
"G06N5/04","Inference methods or devices","","Adaptive control ","G05B13/00","","","","This place covers: Symbolic inference methods and devices. Programs with symbolic reasoning capabilities using knowledge. Inference systems."
"G06N5/041","{Abduction}","","Empirical guesses or heuristics","G06N5/003","","","","This place covers: Kind of logical inference that refers to the process of arriving at an explanatory hypothesis. Abduction is about the most probable explanation for a fact given the sufficient premises"
"G06N5/042","{Backward inferencing}","","Automatic theorem proving","G06N5/006","Game-theory based applications are classified in their field of application when possible.","","","This place covers: An inference mechanism that works backwards from the conclusion"
"G06N5/043","{Distributed expert systems; Blackboards}","","","","","","","This place covers: Expert system implemented in distributed programming units or multiple interacting intelligent autonomous components for example multi-agents systems."
"G06N5/045","{Explanation of inference steps}","","","","","","","This place covers: Inference system that provides explanations of the inferences to the user in the context of diagnostic or decision support"
"G06N5/046","{Forward inferencing; Production systems}","","","","","","","This place covers: Inference system that starts with the available data and makes inferences to derive more data. the inferences are performed forwards towards a goal by repetitive application of the modus ponens."
"G06N5/048","{Fuzzy inferencing}","","Tuning of fuzzy parameters","G06N7/02","","","","This place covers: Transformation of exact inputs in fuzzy inputs with membership functions. The fuzzified inputs are processed in a fuzzy inference machine with fuzzy if-then rules. Depending on the degree of membership, several rules are fired in parallel. The consequents of each rule are aggregated into fuzzy outputs which are de-fuzzified or not de-fuzzified."
"G06N7/00","Computing arrangements based on specific mathematical models","","Neural networksComplex mathematical operations","G06N3/00|G06F17/10","When other types of Machine Learning are involved, also classify in .","G06N20/00","","This place covers: Computer systems based on mathematical models that cannot be classified in their application field."
"G06N7/005","{Probabilistic networks}","","Feedback neural networks, e.g. Boltzmann machines Neural networks having a probabilistic aspect","G06N3/0445|G06N3/0472","","","","This place covers: Inference system representing the probability dependencies between causes and effects in a directed acyclic graph model in which the inferences are modelled as the propagation of probabilities."
"G06N7/02","using fuzzy logic  (computing arrangements based on biological models G06N3/00; computing arrangements using knowledge-based models G06N5/00)","G06N3/00|G06N5/00","","","","","","This place covers: Computer systems based on fuzzy logic"
"G06N7/04","Physical realisation","","","","","","","This place covers: Physical realizations of computer systems based on mathematical models"
"G06N7/06","Simulation on general purpose computers","","","","","","","This place covers: Fuzzy systems simulated on general purpose computers"
"G06N7/08","using chaos models or non-linear system models","","Neural networks using chaos or fractal principles","G06N3/0418","","","","This place covers: Computer-based systems using chaos or non-linear models"
"G06N10/00","Quantum computing, i.e. information processing based on quantum-mechanical phenomena","","Manufacture or treatment of nanostructuresNanotechnology for information processing, storage or transmission, e.g. quantum computing or single electron logicOptical computing devices for processing non-digital dataDevices using superconductivityPhotonic quantum communicationQuantum cryptography","B82B|B82Y10/00|G06E3/00|H01L39/00|H04B10/70|H04L9/0852","","","quantum-mechanical phenomenacovers the quantum phenomena of superposition, coherence, decoherence, entanglement, nonlocality and teleportation","This place covers: Computation performed by a combination of atomic or subatomic particles where the interactions are no longer described by macroscopic physics but by the theory of quantum mechanics."
"G06N10/20","Models of quantum computing, e.g. quantum circuits or universal quantum computers","","","","","","","This place covers: Models or logical architectures, as opposed to the hardware architectures covered by group  , of quantum computing, independent of whether or not a physical realisation is also disclosed. In particular, general logical/physical models of quantum computing, e.g. related to quantum circuit, are classified in group  .   The physical realisations of a specific model (see examples below) are classified in both   and  .  A ""quantum circuit"" is a sequence of quantum logic gates, e.g. quantum gate array, quantum register or quantum random access memory. It should be noted that these are terms of art representing quantum models and should not be confused with physical circuit versions, e.g. electrical circuitry, in general. Quantum circuits are typically obtained via ""quantum circuit synthesis"", ""quantum circuit decomposition"" or ""quantum compilers"" (also not to be confused with ""classical"" compilers).  Typical examples of quantum gates: Clifford gates, controlled gates, e.g. cX, cY, cZ, CNOT, Hadamard gate, Pauli-X/Y/Z gates, SWAP gate, T gate, i.e. pi/8, Toffoli gate, i.e. CCNOT, Deutsch gate, Ising XX/YY/ZZ coupling gates, phase shift gates.  Other typical models of quantum computing: adiabatic quantum computation [AQC], topological quantum computing, quantum simulations, e.g. universal quantum simulator, quantum state machines, quantum cellular automata, quantum Turing machines [QTM].  Models wherein the units of quantum information are based on d-level quantum systems (qudits), e.g. using qutrits (d=3)."
"G06N10/40","Physical realisations or architectures of quantum processors or components for manipulating qubits, e.g. qubit coupling or qubit control","","Nanotechnology for information processing, storage or transmission, e.g. quantum computing or single electron logicSuperconducting quantum bits per se","B82Y10/00|H01L39/00","","","","This place covers: Physical realisations or hardware architectures, as opposed to the logical architectures covered by group   for quantum computing, independent of whether or not a model of quantum computing is also disclosed. Executing models of quantum computing on a specific physical realisation (see examples below) are classified in both   and  .  Physical realisations typically fall in one of the following categories: superconducting quantum computers, e.g. based on charge qubits, flux qubits, phase qubits, Transmon, Xmon, trapped ion/atom quantum computers, e.g. based on Paul ion trap, optical lattices, spin-based quantum computers, e.g. based on quantum dots, NMR, NMRQC, nitrogen-vacancy centres, fullerenes, Kane or Loss-DiVincenzo quantum computers, based on quantum optics, e.g. linear optical quantum computers.  Examples of quantum components and qubit manipulations: qubit coupling, control or readout, storing quantum states, quantum processor, quantum bus, quantum memory, quantum network (for computations), quantum repeater (for computations)."
"G06N10/60","Quantum algorithms, e.g. based on quantum optimisation, quantum Fourier or Hadamard transforms","","","","","","","This place covers: All quantum algorithms and not limited to, e.g. quantum optimisation (see examples below). In particular, quantum computing algorithms for specific problems, e.g. NP problem, are classified in group  . Algorithms based on quantum optimisation also includes so-called ""hybrid quantum-classical algorithms"". The physical realisations of a specific algorithm (see example below) are classified in both   and  .   Quantum algorithms typically fall in one of the following categories: based on amplitude amplification, e.g. Grover's algorithm; based on Fourier or Hadamard transforms, e.g. Shor's algorithm, Simon's algorithm, Deutsch-Josza algorithm, quantum phase estimation algorithm [QPEA] or quantum eigenvalue estimation algorithm; quantum optimisation, e.g. quantum annealing, Ising machines, variational quantum eigen-solver [VQE], quantum alternating operator ansatz [QAOA], quantum approximate optimisation algorithm, including hybrid quantum-classical algorithms, e.g. quantum machine learning, machine learning based quantum algorithms; quantum walks."
"G06N10/70","Quantum error correction, detection or prevention, e.g. surface codes or magic state distillation","","","","","","","This place covers: Arrangements to achieve fault-tolerant quantum computations. Typical solutions rely on the introduction of ancillary, i.e. additional or auxiliary qubits, such as stabiliser codes, but this place also covers ancilla-free solutions, i.e. no additional qubit necessary. Other examples: bit flip codes, sign flip codes, Shor code, topological codes, e.g. surface codes, planar codes, toric codes. Arrangements for assessing the quality of quantum computers, whether characterised by a metrics or figure of merits, e.g. quantum fidelity, quantum volume, quantum purity, error rate, or by its calculation or measurement, e.g. randomized benchmarking [RB], cross-entropy benchmarking [CEB], random circuit sampling [RCS]."
"G06N10/80","Quantum programming, e.g. interfaces, languages or software-development kits for creating or handling programs capable of running on quantum computers; Platforms for simulating or accessing quantum computers, e.g. cloud-based quantum computing","","","","","","","This place covers: All arrangements for quantum programming, such as quantum instruction sets, quantum software development kits, or quantum programming languages. Typical examples: Quil, Qiskit, or QCL. Platforms for simulating or accessing the quantum computers, such as cloud-based quantum computing. Typical examples: IBM Q Experience, Quantum Inspire, Azure Quantum, Amazon Braket, Rigetti Quantum Cloud Services, Quantum Playground."
"G06N20/00","Machine learning","","Computer systems using neural networksComputer systems using knowledge based modelsComputer systems using fuzzy logicAdaptive control systemsImage processing using neural networksPattern recognition using learningSpeech recognition using artificial neural networks","G06N3/02|G06N5/00|G06N7/02|G05B13/00|G06T1/20|G06V30/194|G10L15/16","","","","This place covers: Methods or apparatus giving a machine (in its broadest sense) the ability of adapting or evolving according to experience gained by the machine. A machine in its broadest sense is understood as either an ""abstract machine"" or a physical one (i.e. a computer)."
"G06N20/20","Ensemble learning","","","","","","","This place covers: Machine learning processes where multiple learners (i.e. learning algorithms) are trained to solve the same problem, to obtain better predictive performance than could be obtained from any of the constituent learning algorithms alone."
"G06N99/00","Subject matter not provided for in other groups of this subclass","","","","","","","This place covers: This group is residual to the whole of the subclass, i.e. it covers subject matter which falls under the scope of   and which is not covered by its groups. Therefore this main group should be rarely used or not used for classification.  Whenever a new computing technology is identified, which is not covered by the other main groups of  , it is recommended to create a new subgroup here for that new subject."
"G06N99/007","{Molecular computers, i.e. using inorganic molecules  (using biomolecules G06N3/002)}","G06N3/002","Quantum computers ","G06N10/00","","","","This place covers: Systems where the computational elements are implemented on the molecular level using inorganic molecules e.g. molecular switches."
